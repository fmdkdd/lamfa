
./Base.hs,718
module AOP.Base (3,4
module AOP.Internal.OpenApp,4,5
module AOP.Internal.Joinpoint,5,6
module AOP.Internal.Pointcut,6,7
module AOP.Internal.PointcutDef,7,8
module AOP.Internal.Advice,8,9
module AOP.Internal.Aspect,9,10
module AOP.Internal.AspectDef,10,11
module AOP.Internal.AOPMonad,11,12
module AOP.Internal.AOT,13,14
module AOP.Internal.AOTType,14,15
module AOP.Internal.AOT_secure,15,16
module AOP.Internal.AOT_secure_privileged,16,17
module AOP.Internal.NIAOT,17,18
module AOP.Internal.NonInterferenceDef,18,19
module AOP.Internal.LessGen,19,20
module AOP.Internal.Typeable1Monad,20,21
module AOP.Internal.Function,21,22
module AOP.Internal.THMacros,22,23
module AOP.Internal.ProtectedPC23,24

./Cflow.hs,294
module AOP.Cflow (8,9
instance PcCflow25,26
_pcCflow f32,33
_pcCflowbelow f47,48
isCallEJP f55,56
compareFunEJP ::62,63
compareFunEJP f63,64
compareTypeEJP ::69,70
compareTypeEJP t70,71
jpStackAspect ::74,75
jpStackAspect =75,76
pcAny ::78,79
pcAny =79,80
collectAdv proceed84,85

./Default.hs,25
module AOP.Default (0,1

./Examples/EnsurePos.hs,217
runProgram p7,8
ensurePos proceed9,10
sqrtM ::13,14
sqrtM n14,15
program n17,18
example1 =21,22
example2 =22,23
sqrtTag =36,37
sqrtM' ::38,39
sqrtM' =39,40
program' n41,42
example3 =45,46
example4 =46,47

./Examples/EnsurePos_secure.hs,157
runProgram p8,9
ensurePos proceed10,11
sqrtTag =12,13
sqrtM =14,15
program n17,18
example1  =23,24
example2  =26,27
example3 =29,30
example4 =32,33

./Examples/EnsurePos_secure_privileged.hs,151
runProgram p7,8
ensurePos proceed9,10
sqrtTag =11,12
sqrtM =13,14
asp =15,16
program n18,19
example1  =24,25
example2 =27,28
example3  =30,31

./Examples/Fib.hs,130
module AOP.Examples.Fib (fib,9,10
fibTag =12,13
fibBase ::14,15
fibBase =15,16
pcFib =17,18
fibAdv proceed19,20
fib =23,24

./Examples/Fib2.hs,194
module AOP.Examples.Fib2 (fib,9,10
fibTag =14,15
fibBase ::16,17
fibBase =17,18
fibPc =19,20
ppcFib ::21,22
ppcFib =23,24
fibAdv proceed25,26
fib =29,30
runMemo c35,36
program n37,38

./Examples/Fib3.hs,245
module AOP.Examples.Fib3 (fib,9,10
fibTag =13,14
pcFib =15,16
ppcFib ::20,21
ppcFib =22,23
fibBase ::24,25
fibBase =25,26
fibAdv ::27,28
fibAdv proceed28,29
fib =35,36
errorFib ::38,39
errorFib n39,40
runMemo c43,44
program n45,46

./Examples/LevelAgnostic.hs,277
module AOP.Examples.LevelAgnostic where4,5
type AOELT m8,9
type AOELT m =8,9
runAOELT c9,10
levelAgnosticAdv =11,12
showTag =13,14
showM ::15,16
showM =16,17
logAdv proceed19,20
agnosticLogAdv proceed25,26
type M =34,35
runM c35,36
program ::37,38
program n38,39

./Examples/Membranes/BrowserExample.hs,543
module BrowserExample where6,7
type HtmlDoc =15,16
type BrowserState =16,17
instance Typeable18,19
browserSessionTag =21,22
browserSession ::22,23
browserSession =23,24
browserTag =35,36
browser ::36,37
browser =37,38
type M =44,45
runM ::46,47
runM c47,48
program ::49,50
program =50,51
main =65,66
type BrowserCache =67,68
type CacheState a68,69
type CacheState a b68,69
type Log =69,70
cacheAdv ::71,72
cacheAdv =72,73
cachePutTag =78,79
cachePut ::79,80
cachePut =80,81
quotaAdv ::82,83
quotaAdv identifier83,84

./Examples/MemoizedFib.hs,163
module MemoizedFib (fib)4,5
memo proceed10,11
fib ::19,20
fib =21,22
runMemo c24,25
program n26,27
memo' =33,34
fib' ::39,40
fib' =41,42
program' n44,45

./Examples/MemoizedFib2.hs,135
module MemoizedFib2 (fib)4,5
memo proceed12,13
memo' ::22,23
memo' =23,24
fib ::29,30
fib =37,38
runMemo c40,41
program n42,43

./Examples/MemoizedFib3.hs,181
module MemoizedFib3 where5,6
memo ::13,14
memo proceed14,15
memoWrong ::23,24
memoWrong proceed24,25
fib =27,28
fib2 =31,32
runMemo c37,38
runMemo2 c43,44
program2 n44,45

./Examples/NominalMasks.hs,316
module NominalMasks where5,6
data Counter1  =12,13
data Counter1  = Counter112,13
data Counter2  =13,14
data Counter2  = Counter213,14
inc ::15,16
inc =16,17
c ::27,28
c =29,30
c' ::33,34
c' =35,36
test1 =42,43
test2 =43,44
test3 =45,46
test4 =46,47
doubleInc2  ::49,50
doubleInc2 v152,53
f =55,56

./Examples/NonInterference.hs,985
module MemoizedFib4 where12,13
fibTag =21,22
fibBase ::23,24
fibBase =24,25
pcFib =26,27
fibAdv proceed28,29
fib =32,33
niAdviceL1 ::37,38
niAdviceL1 adv43,44
type NIAdviceL1 t145,46
type NIAdviceL1 t1 a45,46
type NIAdviceL2 t252,53
type NIAdviceL2 t2 a52,53
niAdviceL2 ::60,61
niAdviceL2 adv66,67
checkArgNI proceed68,69
memoNI proceed72,73
type S =81,82
runS ::83,84
runS c84,85
programNI ::86,87
programNI n87,88
type S' =96,97
runS' ::98,99
runS' c99,100
checkArgNI' proceed101,102
memoNI' ::105,106
memoNI' proceed106,107
fibMemoErr' n115,116
data StateTag =123,124
data StateTag = StateTag123,124
data ErrorTag =124,125
data ErrorTag = ErrorTag124,125
fibMemoErr'' ::126,127
fibMemoErr'' n135,136
fibMemoErr3 ::146,147
fibMemoErr3 n157,158
narrowingMemoNI =170,171
augmentationCheckArgNI =176,177
fibMemoErr4 ::180,181
fibMemoErr4 n191,192
runFibMemoErr3 n203,204
runFibMemoErr4 n205,206
type M =207,208
runM ::208,209
runM c209,210

./Examples/Queue.hs,707
module AOP.Examples.Queue where5,6
getStateT ::18,19
getStateT =19,20
putStateT ::21,22
putStateT s22,23
type M =24,25
runM ::26,27
runM c27,28
enqueue ::29,30
enqueue n30,31
dequeue ::33,34
dequeue =34,35
throwErrorT ::42,43
throwErrorT l43,44
catchErrorT ::45,46
m `catchErrorT` h =46,47
type M' =55,56
runM' ::57,58
runM' c58,59
enqueue' ::60,61
enqueue' n61,62
dequeue' ::64,65
dequeue' =65,66
enqueue'' ::74,75
enqueue'' n75,76
dequeue'' ::78,79
dequeue'' =79,80
--size ::85,86
size =86,87
noRepeatedElemAdv proceed89,90
type M'' =95,96
runM'' ::97,98
runM'' c98,99
enqueueTag =101,102
enqueue''' ::103,104
enqueue''' =104,105
--program ::106,107
program n107,108

./ExecutionLevels.hs,33
module AOP.ExecutionLevels (0,1

./Internal/Advice.hs,1754
module AOP.Internal.Advice (9,10
type Advice m39,40
type Advice m a39,40
apply_adv ::48,49
apply_adv adv49,50
type Replace m55,56
replace ::56,57
replace radv57,58
type Augment a62,63
type Augment a b62,63
augment ::63,64
augment (bef,64,65
before bef70,71
after  aft71,72
beforeAdv before73,74
type Narrow a77,78
narrow ::78,79
narrow (p,79,80
data CombinationAdvTag  (m86,87
data CombinationAdvTag  (m :: * -> *) = CombinationAdvTag 86,87
data ReplacementAdvTag  (m87,88
data ReplacementAdvTag  (m :: * -> *) = ReplacementAdvTag87,88
data AugmentationAdvTag (m88,89
data AugmentationAdvTag (m :: * -> *) = AugmentationAdvTag88,89
data NarrowingAdvTag    (m89,90
data NarrowingAdvTag    (m :: * -> *) = NarrowingAdvTag89,90
newtype CombinationAdv m91,92
newtype CombinationAdv m a b = CombinationAdv ((a91,92
combination (CombinationAdv92,93
newtype ReplacementAdv m94,95
newtype ReplacementAdv m a b = ReplacementAdv {94,95
newtype ReplacementAdv m a b = ReplacementAdv { rAdv ::94,95
replacement (ReplacementAdv95,96
newtype AugmentationAdv m97,98
newtype AugmentationAdv m a b = AugmentationAdv {97,98
newtype AugmentationAdv m a b = AugmentationAdv { augAdv ::97,98
augmentation (AugmentationAdv98,99
newtype NarrowingAdv m100,101
newtype NarrowingAdv m a b = NarrowingAdv {100,101
newtype NarrowingAdv m a b = NarrowingAdv { nAdv ::100,101
narrowing (NarrowingAdv101,102
withView ::103,104
withView v104,105
data RestrictedAdv n106,107
data RestrictedAdv n m c = RestrictedAdv (n106,107
class (Monad (CombinatorMonad c)) => AdviceCombinator c where109,110
  type CombinatorType c110,111
  type CombinatorMonad c111,112
  type CombinatorMonad c ::111,112
  toAdvice ::112,113
instance Monad114,115

./Internal/AOPMonad.hs,155
module AOP.Internal.AOPMonad (4,5
      undeploy :: LessGen (a -> b) (c -> m d) => Aspect m a b c d18,19
      deploy   ::17,18
      undeploy ::18,19

./Internal/AOT.hs,255
module AOP.Internal.AOT (8,9
runAOT ::27,28
runAOT c28,29
foobar =31,32
weavet ::34,35
weavet f36,37
wappt ::48,49
wappt f49,50
instance Typeable1Monad54,55
data RPair s79,80
data RPair s a = RPair a79,80
toRP   (a,s)83,84
fromRP (RPair84,85

./Internal/AOT_secure.hs,280
module AOP.Internal.AOT_secure (8,9
runAOT_s ::27,28
runAOT_s pc28,29
weavet_s ::31,32
weavet_s f34,35
weavet_saux f40,41
wappt_s ::53,54
wappt_s f55,56
instance Typeable1Monad60,61
data RPair s85,86
data RPair s a = RPair a85,86
toRP   (a,s)89,90
fromRP (RPair90,91

./Internal/AOT_secure_privileged.hs,277
module AOP.Internal.AOT_secure_privileged (7,8
runAOT_sp ::26,27
runAOT_sp sp27,28
weavet_sp ::30,31
weavet_sp f32,33
wappt_sp ::54,55
wappt_sp f56,57
instance Typeable1Monad61,62
data RPair s86,87
data RPair s a = RPair a86,87
toRP   (a,s)90,91
fromRP (RPair91,92

./Internal/AOTType.hs,508
module AOP.Internal.AOTType (7,8
data EPC m32,33
data EPC m = forall a32,33
data SP m33,34
data SP m = forall a133,34
newtype AOT m35,36
newtype AOT m a = AOT {35,36
newtype AOT m a = AOT { unAOT ::35,36
run =37,38
mkAOT =38,39
newtype AOT_s m42,43
newtype AOT_s m a = AOT_s {42,43
newtype AOT_s m a = AOT_s { unAOT_s ::42,43
run_s =44,45
mkAOT_s =45,46
newtype AOT_sp m47,48
newtype AOT_sp m a = AOT_sp {47,48
newtype AOT_sp m a = AOT_sp { unAOT_sp ::47,48
run_sp =49,50
mkAOT_sp =50,51

./Internal/Aspect.hs,280
module AOP.Internal.Aspect (5,6
type AspectHandle =20,21
data Aspect m24,25
data Aspect m a b c d = LessGen (a24,25
data EAspect m28,29
data EAspect m = forall a28,29
type AspectEnv m31,32
type AspectEnv m =31,32
instance Show33,34
deleteAsp ::43,44
deleteAsp asp44,45

./Internal/AspectDef.hs,319
module AOP.Internal.AspectDef (6,7
newAspectHandle ::23,24
newAspectHandle =24,25
aspect ::26,27
aspect pc28,29
type PurePC a31,32
type PurePC a b31,32
type PureAdvice a32,33
purePcAspect ::35,36
purePcAspect pc37,38
pureAdviceAspect ::40,41
pureAdviceAspect pc42,43
pureAspect ::45,46
pureAspect pc47,48

./Internal/Function.hs,331
module AOP.Internal.Function (5,6
type FunctionTag =23,24
data Function a25,26
data Function a b = Function {fun25,26
data Function a b = Function {fun :: a25,26
data Function a b = Function {fun :: a -> b, tag :: FunctionTag} deriving25,26
defaultFunctionTag =29,30
mkFunction ::32,33
mkFunction f33,34
instance Eq36,37

./Internal/Joinpoint.hs,230
module AOP.Internal.Joinpoint (4,5
data Jp m19,20
data Jp m a b = (Monad m,19,20
newjp ::22,23
newjp f23,24
compareFun ::29,30
compareFun f30,31
compareType ::36,37
compareType t37,38
getJpArg ::40,41
getJpArg (Jp41,42

./Internal/LessGen.hs,854
module AOP.Internal.LessGen (LessGen,9,10
class LeastGen a17,18
class LessGen a24,25
class Unifies s30,31
class (Substitution sin, Substitution sout) => LeastGen' a b c sin40,41
class (MaybeType v, Substitution sin, Substitution sout) => VarCase v ab c sin sout85,86
instance Substitution87,88
data SubstEmpty93,94
data SubstCons x94,95
class Substitution s96,97
data None100,101
data Some a101,102
class MaybeType a103,104
class (Substitution s, MaybeType sx) => MapsTo s x sx |108,109
data Bitofiron a123,124
data Bitofiron a = Bitofiron a123,124
data Heated a124,125
data Heated a b = Heated a124,125
data Melted a125,126
data Melted a = Melted a125,126
data Bit1127,128
data Bit2 128,129
data I419129,130
bit1 ::131,132
bit1 =132,133
bit2 ::134,135
bit2 =135,136
generalize ::137,138
generalize =138,139
genBit =140,141

./Internal/NIAOT.hs,414
module AOP.Internal.NIAOT (9,10
newtype NIAOT (t33,34
newtype NIAOT (t :: (* -> *) -> * -> *) m a = NIAOT { unNIAOT :: StateT (AspectEnv33,34
newtype NIAOT (t :: (* -> *) -> * -> *) m a = NIAOT { unNIAOT :: StateT (AspectEnv (NIAOT t33,34
runNI =35,36
mkNIAOT =36,37
runNIAOT ::39,40
runNIAOT c40,41
weavet ::43,44
weavet f47,48
wappt ::59,60
wappt f61,62
instance Typeable1Monad66,67
niLift ma74,75

./Internal/NIAOT2.hs,320
module AOP.Internal.NIAOT2 (9,10
newtype NIAOT2 (t133,34
               m a = NIAOT2 {35,36
               m a = NIAOT2 { unNIAOT2 ::35,36
runNI2 =38,39
mkNIAOT2 =39,40
runNIAOT2 ::42,43
runNIAOT2 c43,44
weavet ::46,47
weavet f50,51
wappt ::62,63
wappt f64,65
instance (Typeable1Monad69,70
niLift2 ma77,78

./Internal/NonInterferenceDef.hs,339
module AOP.Internal.NonInterferenceDef (4,5
type NIPC t26,27
type NIPC t a26,27
type NIAdvice t29,30
type NIBase m32,33
type NIBase m a32,33
niPcAspect ::35,36
niPcAspect pc40,41
niAdviceAspect ::43,44
niAdviceAspect pc48,49
niAspect ::51,52
niAspect pc55,56
niBase ::58,59
niBase f59,60
niAdvice ::62,63
niAdvice adv64,65

./Internal/OpenApp.hs,86
module AOP.Internal.OpenApp (5,6
          => f a24,25
  (#) :: (PolyTypeable23,24

./Internal/Pointcut.hs,358
module AOP.Internal.Pointcut (4,5
data PC m16,17
data PC m a b = Typeable1Monad m16,17
data PC m a b = Typeable1Monad m => PC {mpcond :: forall16,17
runPC ::19,20
runPC (PC20,21
data RequirePC m24,25
data RequirePC m a b = Typeable1Monad m24,25
data RequirePC m a b = Typeable1Monad m => RequirePC {mpcond' ::  forall24,25
instance (Typeable127,28

./Internal/PointcutDef.hs,648
module AOP.Internal.PointcutDef (8,9
pcCallPred f33,34
      pcCall :: (Typeable1Monad m, PolyTypeable (f a b)) => f a b -> PC m a37,38
      pcCall ::37,38
instance PcCall40,41
pcTypePred t47,48
      pcType :: (Typeable1Monad m, PolyTypeable (f a b)) => f a b -> PC m a51,52
      pcType ::51,52
pcCombinator op61,62
pcCombinator' op69,70
  pcAnd :: PCAndCtx m a1 b1 a2 b2 pct => PC m78,79
  type PCAndCtx m77,78
  pcAnd ::78,79
pcOr ::93,94
pcOr (PC94,95
pcNot ::97,98
pcNot (PC98,99
pcSeq ::101,102
pcSeq (PC102,103
pcTrue ::113,114
pcTrue =114,115
pcFalse ::117,118
pcFalse =118,119
pcArgGT ::122,123
pcArgGT n123,124

./Internal/PolyTypeable.hs,904
module AOP.Internal.PolyTypeable (20,21
data TVar a33,34
data TCon0 c34,35
data TCon1 (c35,36
data TCon2 (c36,37
data TCon3 (c37,38
data TCon4 (c38,39
data TCon5 (c39,40
class Analyze a41,42
analyze ::68,69
analyze =69,70
class PolyTypeable a77,78
   polyTypeOf ::78,79
instance (Analyze80,81
class MyTypeable' g084,85
     mytypof' ::85,86
class MyTypeable'' n135,136
     mytypof'' ::136,137
mkany ::145,146
mkany n146,147
class Nat n => HIndex x154,155
class HIndex' f161,162
class Nat n => HLen l166,167
data Z170,171
data S a171,172
class Nat a173,174
class Nat a where nat ::173,174
data HTrue178,179
data HFalse179,180
data HNil =181,182
data HNil = HNil181,182
data HCons a182,183
data HCons a b = HCons a182,183
class TypeEq' () x y b => TypeEq x y185,186
   where type'eq ::186,187
   where type'eq ::186,187
class TypeEq' q188,189
class TypeEq'' q189,190

./Internal/PolyTypeableUtils.hs,150
module AOP.Internal.PolyTypeableUtils where2,3
mmap ::11,12
mmap _12,13
first ::20,21
first f21,22
isLessGeneral ::25,26
isLessGeneral t126,27

./Internal/ProtectedPC.hs,308
module AOP.Internal.ProtectedPC (4,5
type Combinator t21,22
type Combinator t m21,22
data ProtectedPC m23,24
data ProtectedPC m a b t c d = (Typeable1Monad m,23,24
protectPC ::25,26
protectPC =26,27
pAspect ::28,29
pAspect (PPC30,31
ppcAnd ::34,35
ppcAnd (PPC35,36
ppcOr ::37,38
ppcOr (PPC39,40

./Internal/StableNamesEq.hs,85
module AOP.Internal.StableNamesEq where0,1
stableNamesEq ::6,7
stableNamesEq a7,8

./Internal/THMacros.hs,1539
module AOP.Internal.THMacros (typepc',4,5
newTag ::17,18
newTag =18,19
deployTC ::21,22
deployTC className22,23
_deployTCImpl ::26,27
_deployTCImpl tc27,28
advExp ::40,41
advExp adv41,42
callPcExp ::43,44
callPcExp name44,45
callPcExp' ::47,48
callPcExp' exp48,49
typePcExp' ::50,51
typePcExp' exp51,52
appEStr ::53,54
appEStr s54,55
appEStr' ::57,58
appEStr' s58,59
deployExpQ ::61,62
deployExpQ qpc62,63
deployExp ::68,69
deployExp pc69,70
getInstances ::72,73
getInstances typ73,74
instanceType ::81,82
instanceType (InstanceD82,83
showInstances ::88,89
showInstances typ89,90
instanceOf ::95,96
instanceOf a96,97
annotateInstance ::100,101
annotateInstance name101,102
getTypeVariables ::108,109
getTypeVariables typ109,110
instancePolymorphicType ::114,115
instancePolymorphicType name115,116
showPolyType ::123,124
showPolyType name124,125
getVarNames ::129,130
getVarNames name130,131
getConstrainedVariable ::135,136
getConstrainedVariable (ClassP136,137
getVariableConstraintsList ::[Pred]140,141
getVariableConstraintsList preds141,142
getVariableConstraints ::144,145
getVariableConstraints t145,146
getInstancesList ::149,150
getInstancesList (name:names)150,151
getNameInstances (x:xs)155,156
getInstancesTypes (dec:[])165,166
getConstraintPermutations name170,171
getAnnotatedConstraints name184,185
deployCall ::198,199
deployCall name199,200
deployType ::211,212
deployType name212,213
typepc' ::221,222
typepc' ts222,223
typeUndef ::226,227
typeUndef qt227,228

./Internal/Typeable1Monad.hs,121
module AOP.Internal.Typeable1Monad (5,6
class (Typeable1 m, Monad m) => Typeable1Monad m35,36
instance Typeable139,40

./Internal/WithView.hs,70
module AOP.Internal.WithView (3,4
withView ::12,13
withView v13,14

./JPStackT.hs,301
module AOP.JPStackT (9,10
newtype JPStackT m21,22
newtype JPStackT m a = JPStackT {run21,22
newtype JPStackT m a = JPStackT {run :: StateT21,22
evalJPStackT ::24,25
evalJPStackT c25,26
instance Monad27,28
data RPair s57,58
data RPair s a = RPair a57,58
toRP   (a,s)61,62
fromRP (RPair62,63

./Membranes.hs,27
module AOP.Membranes (0,1

./MembranesZipper.hs,33
module AOP.MembranesZipper (0,1

./MonadJPStack.hs,213
module AOP.MonadJPStack (3,4
data EJP =12,13
data EJP = forall a12,13
type JPStack =13,14
class Monad m => MonadJPStack m15,16
      getJPStack  ::16,17
      pushJPStack ::17,18
      popJPStack  ::18,19

./Semantics/Default.hs,70
module AOP.Semantics.Default where7,8
instance (Typeable1Monad16,17

./Semantics/EL/ELT.hs,364
module AOP.Semantics.EL.ELT (8,9
newtype ELT m26,27
newtype ELT m a = ELT {26,27
newtype ELT m a = ELT { unELT ::26,27
run =29,30
mkELT =30,31
runELT ::32,33
runELT c33,34
inc ::35,36
inc =36,37
dec ::38,39
dec =39,40
at ::41,42
at l42,43
instance (Monad45,46
data RPair s84,85
data RPair s a = RPair a84,85
toRP   (a,s)88,89
fromRP (RPair89,90

./Semantics/EL/MonadEL.hs,155
module AOP.Semantics.EL.MonadEL (Level,0,1
type Level =2,3
class Monad m => MonadEL m5,6
  current ::6,7
  up ::7,8
  down ::8,9
  lambda_at ::9,10

./Semantics/Membranes/MembraneGraph.hs,874
module AOP.Semantics.Membranes.MembraneGraph where8,9
type MembraneId =20,21
newtype MembraneT m23,24
newtype MembraneT m a = MembraneT {23,24
newtype MembraneT m a = MembraneT { unMembraneT ::23,24
runMG =26,27
mkMembraneT =27,28
data Membrane m30,31
data Membrane m n t = (Monad m,30,31
                  Membrane { -- | The node31,32
                             mbId  ::32,33
                             jpIn  ::34,35
                             jpOut ::36,37
                             mbTag   ::40,41
                             mbView  ::42,43
data EMembrane =46,47
data EMembrane = forall m46,47
type MembraneGraph =47,48
emptyMembraneGraph ::50,51
emptyMembraneGraph =51,52
makeMembrane ::54,55
makeMembrane graph66,67
addMembrane ::70,71
addMembrane membrane71,72
bindMembranes ::74,75
bindMembranes (mbId1,75,76
instance Show77,78

./Semantics/Membranes/MembraneT.hs,1898
module AOP.Semantics.Membranes.MembraneT (9,10
runMembraneT ::57,58
runMembraneT c58,59
belongsToGraph ::60,61
belongsToGraph mbId61,62
mbAt ::63,64
mbAt mb64,65
_currentMembrane ::66,67
_currentMembrane =67,68
_getGraph ::69,70
_getGraph =70,71
_newMembrane ::72,73
_newMembrane jpIn78,79
_advise ::82,83
_advise mb183,84
_advises ::85,86
_advises mb186,87
_evalIn ::91,92
_evalIn mb92,93
_lambda_evalIn ::94,95
_lambda_evalIn f95,96
unregister ::97,98
unregister asp@(Aspect100,101
data CombinationAdvice  =104,105
data CombinationAdvice  = CombinationAdvice104,105
data ReplacementAdvice  =105,106
data ReplacementAdvice  = ReplacementAdvice105,106
data AugmentationAdvice =106,107
data AugmentationAdvice = AugmentationAdvice106,107
data NarrowingAdvice    =107,108
data NarrowingAdvice    = NarrowingAdvice107,108
type AnyAdvice          =108,109
data NoAdvice           =109,110
data NoAdvice           = NoAdvice109,110
data CanBeRegistered  m112,113
data CanBeRegistered  m a b c = CanBeRegistered (Advice112,113
data Combination  m113,114
data Combination  m a b c  = Combination  (Advice113,114
data Replacement  m114,115
data Replacement  m a b c  = Replacement  (Replace114,115
data Augmentation m115,116
data Augmentation m a b c  = Augmentation (Augment115,116
data Narrowing    m116,117
data Narrowing    m a b c  = Narrowing    (Narrow116,117
instance Register127,128
_register ::139,140
_register (asp@(Aspect143,144
liftViewAdv ::165,166
liftViewAdv view166,167
liftViewPC ::168,169
liftViewPC view172,173
liftViewJp ::174,175
liftViewJp view175,176
unliftViewPC ::177,178
unliftViewPC view181,182
unliftViewJp ::183,184
unliftViewJp view184,185
_getJpOut ::228,229
_getJpOut =229,230
getJpOut ::235,236
getJpOut =236,237
data RPair s256,257
data RPair s a = RPair a256,257
toRP   (a,s)259,260
fromRP (RPair260,261

./Semantics/Membranes/MonadMembrane.hs,339
module AOP.Semantics.Membranes.MonadMembrane (MonadMembrane(..))7,8
      evalIn          :: Monad n => Membrane m36,37
      currentMembrane ::17,18
      getGraph        ::19,20
      newMembrane     ::21,22
      advise          ::32,33
      advises         ::34,35
      evalIn          ::36,37
      lambda_evalIn   ::38,39

./Test/AOT.hs,3031
module AOP.Test.AOT (tests)4,5
tests =12,13
cat_a ::32,33
cat_a s33,34
adv ::35,36
adv proceed36,37
adv2 ::38,39
adv2 proceed39,40
adv3 ::41,42
adv3 proceed42,43
type AOID =46,47
runAOID ::47,48
runAOID c48,49
successor ::50,51
successor n51,52
successor2 ::53,54
successor2 n54,55
successor3 ::56,57
successor3 n57,58
successor'' ::59,60
successor'' n60,61
successor2'' ::62,63
successor2'' n63,64
client1 n65,66
program ::66,67
program n67,68
prop_client1 s72,73
test_client1 =73,74
client3 n76,77
program3 ::77,78
program3 n78,79
prop_client3 n84,85
test_client3 =85,86
client4 n89,90
program4 ::90,91
program4 n91,92
prop_client4 n97,98
test_client4 =98,99
client5 n102,103
program5 ::103,104
program5 n104,105
prop_client5 n114,115
test_client5 =115,116
adv6 ::118,119
adv6 proceed119,120
client6 n122,123
program6 ::123,124
program6 n124,125
prop_client6 n131,132
test_client6 =132,133
client7 n135,136
program7 ::136,137
program7 n137,138
prop_client7 n145,146
test_client7 =146,147
genericAdvice ::150,151
genericAdvice proceed151,152
typc1 n154,155
typprogram1 ::155,156
typprogram1 n156,157
prop_typc1 n162,163
test_typc1 =163,164
typc2 n167,168
typprogram2 ::168,169
typprogram2 n169,170
prop_typc2 n176,177
test_typc2 =177,178
strAdvice ::179,180
strAdvice proceed180,181
typc3 n183,184
typprogram3 ::184,185
typprogram3 n185,186
prop_typc3 n193,194
test_typc3 =194,195
typc4 n197,198
typprogram4 ::198,199
typprogram4 n199,200
prop_typc4 n204,205
test_typc4 =205,206
polyHead ::213,214
polyHead xs214,215
concreteAdvice ::216,217
concreteAdvice proceed217,218
poly1 xs220,221
polyProgram1 ::221,222
polyProgram1 xs222,223
prop_poly1 xs227,228
test_poly1 =228,229
concreteFunction ::235,236
concreteFunction =236,237
concreteFunction2 ::238,239
concreteFunction2 =239,240
polyAdvice ::Advice241,242
polyAdvice proceed242,243
poly2 n245,246
polyProgram2 ::246,247
polyProgram2 n247,248
prop_poly2 n251,252
test_poly2 =252,253
polyAdvice' ::256,257
polyAdvice' proceed257,258
poly2' n259,260
polyProgram2' ::260,261
polyProgram2' n261,262
prop_poly2' n265,266
test_poly2' =266,267
poly3' x270,271
polyProgram3' ::271,272
polyProgram3' x272,273
prop_poly3' x276,277
test_poly3' =277,278
polyAdvice2 ::280,281
polyAdvice2 proceed281,282
constraintPoly x283,284
constraintPolyProgram ::284,285
constraintPolyProgram x285,286
prop_constraintPoly x289,290
test_constraintPoly =290,291
concreteFunction3 ::292,293
concreteFunction3 n293,294
poly4 n295,296
polyProgram4 ::296,297
polyProgram4 n297,298
prop_poly4 n301,302
test_poly4 =302,303
polyHead2 ::314,315
polyHead2 xs315,316
polyAdvice3 ::317,318
polyAdvice3 proceed318,319
polyAdvice3' ::320,321
polyAdvice3' proceed321,322
poly5' ::325,326
poly5' xs326,327
polyProgram5' ::327,328
polyProgram5' xs328,329
prop_poly5' xs332,333
test_poly5' =333,334
poly6 xs338,339
polyProgram6 xs339,340
prop_poly6 xs351,352
test_poly6 =352,353

./Test/Cflow.hs,407
module AOP.Test.Cflow (tests)5,6
tests =17,18
runProg c21,22
sucTag =24,25
sucTag2 =25,26
successor  =27,28
successor2 =29,30
adv  proceed32,33
adv2 proceed33,34
client1 n36,37
program1 n37,38
prop_client1 (n::Integer)42,43
test_client1 =43,44
client2 n46,47
program2 n47,48
prop_client2 n52,53
test_client2 =53,54
client3 n57,58
program3 n58,59
prop_client3 n63,64
test_client3 =64,65

./Test/CriticalComputation.hs,406
module AOP.Test.CriticalComputation (8,9
newtype AOT_cflow m21,22
newtype AOT_cflow m a = AOT_cflow (AOT_s21,22
instance Typeable1Monad24,25
clift ::28,29
clift (Function29,30
runSafe (AOT_cflow33,34
stdTag =35,36
stdComputation ::36,37
stdComputation =37,38
criticalTag =39,40
_criticalComputation ::40,41
_criticalComputation  =41,42
criticalComputation ::43,44
criticalComputation =44,45

./Test/ELT.hs,194
module AOP.Test.ELT (tests)4,5
tests =14,15
testELT1 =17,18
type M =21,22
runProgEL c23,24
showTag =25,26
showM ::27,28
showM =28,29
logAdv ::30,31
logAdv proceed31,32
program =40,41

./Test/Macros.hs,593
module AOP.Test.Macros (tests)5,6
tests =20,21
type AOID =42,43
runAOID ::43,44
runAOID c44,45
class Bar a48,49
      doBar ::49,50
instance Bar51,52
advice ::57,58
advice proceed58,59
thclient n60,61
thprogram ::61,62
thprogram n62,63
prop_thclient n68,69
test_thclient =69,70
class Foo a76,77
type AOLog =80,81
runAOLog ::81,82
runAOLog c82,83
polyHeadTag =87,88
polyHead ::89,90
polyHead =90,91
polyAdvice ::92,93
polyAdvice proceed93,94
thclient2 =97,98
thprogram2 =98,99
test_thclient2 =103,104
thclient3 =106,107
thprogram3 =107,108
test_thclient3 =112,113

./Test/Membranes.hs,1024
module AOP.Test.Membranes (tests)7,8
tests =18,19
accessDiskTag =33,34
accessDisk ::34,35
accessDisk =35,36
getUrlTag =37,38
getUrl ::38,39
getUrl =39,40
checkCacheTag =41,42
checkCache ::42,43
checkCache =43,44
runBrowserTag =45,46
runBrowser ::46,47
runBrowser =47,48
cacheAdvice ::49,50
cacheAdvice proceed50,51
quotaAdvice ::52,53
quotaAdvice proceed53,54
type MS =55,56
runMS c56,57
towerExample ::59,60
towerExample =60,61
testTowerExample =73,74
treeExample ::77,78
treeExample =78,79
testTreeExample =91,92
graphExample ::95,96
graphExample =96,97
testGraphExample =107,108
opaqueExample ::111,112
opaqueExample =112,113
testOpaqueExample =119,120
traceAdvice ::122,123
traceAdvice proceed123,124
translucentExample1 ::128,129
translucentExample1 =129,130
testTranslucentExample1 =139,140
translucentExample2 ::145,146
translucentExample2 =146,147
testTranslucentExample2 =157,158
translucentExample3 ::163,164
translucentExample3 =164,165
testTranslucentExample3 =175,176

./Test/NIAOT.hs,471
module AOP.Test.NIAOT (tests)10,11
tests =17,18
type NIAOState =23,24
runNIAOState c25,26
cachingSucc ::30,31
cachingSucc =31,32
successor ::36,37
successor =37,38
pureAdv proceed39,40
cachTag =43,44
succTag =44,45
clientNI c48,49
niAsp ::51,52
niAsp =52,53
programNI ::56,57
programNI s57,58
prop_programNI s62,63
test_programNI =63,64
programNI2 ::65,66
programNI2 s66,67
niFoo ::68,69
niFoo n69,70
prop_programNI2 s71,72
test_programNI2 =72,73

./Test/SecureAOT.hs,182
main =14,15
tests =16,17
runProg c25,26
adv proceed27,28
client1 n29,30
program1 n30,31
prop_client1 (n::Integer)34,35
test_client1 =35,36
runProg2 c37,38
--client2 n41,42

./Test/SecurePrivilegedAOT.hs,345
module AOP.Test.SecurePrivilegedAOT (tests)5,6
tests =16,17
runProg pc19,20
stdTag =21,22
criticalTag =22,23
stdComputation =24,25
criticalComputation  =26,27
adv proceed28,29
client1 n33,34
program1 n34,35
prop_client1 (n::Integer)40,41
test_client1 =41,42
client2 n46,47
program2 n47,48
prop_client2 n52,53
test_client2 =53,54

./Test/TestSuite.hs,31
main =16,17
testSuite =18,19

/Users/ismael/.haskdogs/HUnit-1.2.5.2/examples/Example.hs,250
module Main where5,6
foo ::10,11
foo x11,12
partA ::13,14
partA v14,15
partB ::16,17
partB v17,18
test1 ::19,20
test1 =20,21
test2 ::22,23
test2 =23,24
tests ::28,29
tests =29,30
tests' ::31,32
tests' =32,33
main ::37,38
main =38,39

/Users/ismael/.haskdogs/HUnit-1.2.5.2/Setup.hs,11
main =1,2

/Users/ismael/.haskdogs/HUnit-1.2.5.2/Test/HUnit/Base.hs,1489
module Test.HUnit.Base10,11
(11,12
assertBool ::51,52
assertBool msg54,55
assertString ::58,59
assertString s60,61
assertEqual ::68,69
assertEqual preface72,73
class Assertable t91,92
 where assert ::92,93
instance Assertable94,95
class ListAssertable t107,108
 where listAssert ::108,109
type AssertionPredicate =139,140
class AssertionPredicable t143,144
 where assertionPredicate ::144,145
infix  1156,157
(@?) :: (AssertionPredicable160,161
predi @?163,164
(@=?) :: (Eq167,168
expected @=?170,171
(@?=) :: (Eq174,175
actual @?=177,178
data Test185,186
    = TestCase Assertion187,188
    | TestList [Test]189,190
    | TestLabel String191,192
class Testable t203,204
 where test ::204,205
(~?) :: (AssertionPredicable224,225
(~=?) :: (Eq232,233
(~?=) :: (Eq240,241
(~:) :: (Testable250,251
label ~:251,252
data Counts =266,267
data Counts = Counts {266,267
data Counts = Counts { cases, tried, errors, failures :: Int }266,267
data State =272,273
data State = State {272,273
data State = State { path ::272,273
data State = State { path :: Path, counts :: Counts272,273
type ReportStart us276,277
type ReportStart us =276,277
type ReportProblem us280,281
type Path =284,285
data Node  =287,288
data Node  = ListItem Int287,288
data Node  = ListItem Int | Label String287,288
testCasePaths ::291,292
testCasePaths t0292,293
testCaseCount ::299,300
testCaseCount (TestCase300,301
performTest ::318,319
performTest reportStart324,325

/Users/ismael/.haskdogs/HUnit-1.2.5.2/Test/HUnit/Lang.hs,343
module Test.HUnit.Lang8,9
type Assertion =51,52
assertFailure ::62,63
performTestCase ::73,74
data HUnitFailure =81,82
data HUnitFailure = HUnitFailure String81,82
hunitFailureTc ::87,88
hunitFailureTc =89,90
instance Typeable95,96
assertFailure msg102,103
performTestCase action104,105
hunitPrefix =132,133
nhc98Prefix =134,135

/Users/ismael/.haskdogs/HUnit-1.2.5.2/Test/HUnit/Terminal.hs,101
module Test.HUnit.Terminal (3,4
terminalAppearance ::16,17
terminalAppearance str17,18
ta f33,34

/Users/ismael/.haskdogs/HUnit-1.2.5.2/Test/HUnit/Text.hs,343
module Test.HUnit.Text3,4
data PutText st36,37
data PutText st = PutText (String36,37
putTextToHandle handle55,56
putTextToShowS ::71,72
putTextToShowS =72,73
runTestText ::82,83
runTestText (PutText83,84
showCounts ::99,100
showCounts Counts{100,101
showPath ::110,111
showPath []111,112
runTestTT ::125,126
runTestTT t126,127

/Users/ismael/.haskdogs/HUnit-1.2.5.2/Test/HUnit.hs,25
module Test.HUnit70,71

/Users/ismael/.haskdogs/HUnit-1.2.5.2/tests/HUnitTestExtended.hs,164
module HUnitTestExtended (0,1
assertionMessage ::17,18
assertionMessage =18,19
assertion ::25,26
assertion =26,27
extendedTests ::30,31
extendedTests =31,32

/Users/ismael/.haskdogs/HUnit-1.2.5.2/tests/HUnitTestOptimize.hs,254
module HUnitTestOptimize (8,9
optimizationLevel ::18,19
optimizationLevel =20,21
simpleTestRunner ::32,33
simpleTestRunner t33,34
optimizationTests ::42,43
optimizationTests =43,44
undefinedSwallowsTests ::99,100
undefinedSwallowsTests =100,101

/Users/ismael/.haskdogs/HUnit-1.2.5.2/tests/HUnitTests.hs,50
module Main (main)4,5
main ::14,15
main =15,16

/Users/ismael/.haskdogs/HUnit-1.2.5.2/tests/TerminalTest.hs,108
module TerminalTest (terminalTests)2,3
try ::7,8
try lab8,9
terminalTests ::10,11
terminalTests =11,12

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/All.hs,524
module Test.QuickCheck.All(4,5
polyQuickCheck ::26,27
polyQuickCheck x27,28
polyVerboseCheck ::31,32
polyVerboseCheck x32,33
type Error =34,35
mono ::40,41
mono t41,42
infoType ::52,53
infoType (ClassOpI53,54
deconstructType ::57,58
deconstructType err58,59
monomorphise ::65,66
monomorphise err66,67
forAllProperties ::78,79
forAllProperties =79,80
quickCheckAll ::104,105
quickCheckAll =105,106
verboseCheckAll ::109,110
verboseCheckAll =110,111
runQuickCheckAll ::112,113
runQuickCheckAll ps113,114

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Arbitrary.hs,1187
module Test.QuickCheck.Arbitrary0,1
class Arbitrary a93,94
  arbitrary ::95,96
  arbitrary =96,97
  shrink ::100,101
  shrink _101,102
instance (CoArbitrary105,106
shrinkList ::141,142
shrinkList shr142,143
{-159,160
arbitrarySizedIntegral ::294,295
arbitrarySizedIntegral =295,296
arbitrarySizedFractional ::302,303
arbitrarySizedFractional =303,304
arbitraryBoundedIntegral ::315,316
arbitraryBoundedIntegral =316,317
arbitraryBoundedRandom ::324,325
arbitraryBoundedRandom =325,326
arbitraryBoundedEnum ::328,329
arbitraryBoundedEnum =329,330
arbitrarySizedBoundedIntegral ::339,340
arbitrarySizedBoundedIntegral =340,341
shrinkNothing ::353,354
shrinkNothing _354,355
shrinkIntegral ::357,358
shrinkIntegral x358,359
shrinkRealFrac ::375,376
shrinkRealFrac x376,377
class CoArbitrary a392,393
  coarbitrary ::399,400
(><) :: (Gen411,412
(><) f412,413
coarbitraryIntegral ::534,535
coarbitraryIntegral =535,536
coarbitraryReal ::538,539
coarbitraryReal x539,540
coarbitraryShow ::542,543
coarbitraryShow x543,544
coarbitraryEnum ::546,547
coarbitraryEnum =547,548
vector ::555,556
vector k556,557
orderedList ::559,560
orderedList =560,561

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Exception.hs,354
module Test.QuickCheck.Exception where4,5
type AnException =39,40
type AnException =41,42
tryEvaluate ::47,48
tryEvaluate x48,49
tryEvaluateIO ::50,51
tryEvaluateIO m51,52
--tryEvaluateIO m52,53
isInterrupt ::56,57
isInterrupt (E.DynException60,61
discard ::77,78
isDiscard ::79,80
(discard, isDiscard)80,81
finally ::94,95
finally =95,96

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Function.hs,598
module Test.QuickCheck.Function19,20
data a :->44,45
  Pair  ::45,46
  (:+:) :: (a :->46,47
  Unit  ::47,48
  Nil   ::48,49
  Table ::49,50
  Map   ::50,51
instance Functor52,53
showFunction ::64,65
showFunction p65,66
abstract ::74,75
abstract (Pair75,76
table ::83,84
table (Pair84,85
class Function a95,96
  function ::96,97
functionMap ::131,132
functionMap g132,133
functionShow ::134,135
functionShow f135,136
shrinkFun ::217,218
shrinkFun shr218,219
data Fun a261,262
data Fun a b = Fun (a261,262
mkFun ::263,264
mkFun p264,265
apply ::266,267
apply (Fun267,268

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Gen.hs,767
module Test.QuickCheck.Gen where1,2
newtype Gen a26,27
newtype Gen a = MkGen{ unGen26,27
newtype Gen a = MkGen{ unGen ::26,27
instance Functor28,29
variant ::51,52
variant k052,53
sized ::61,62
sized f62,63
resize ::66,67
resize n67,68
choose ::70,71
choose rng71,72
promote ::74,75
promote m75,76
sample' ::78,79
sample' (MkGen79,80
sample ::85,86
sample g86,87
suchThat ::94,95
gen `suchThat` p =95,96
suchThatMaybe ::102,103
gen `suchThatMaybe` p =103,104
oneof ::111,112
oneof []112,113
frequency ::117,118
frequency []118,119
elements ::129,130
elements []130,131
growingElements ::137,138
growingElements []138,139
listOf ::154,155
listOf gen155,156
listOf1 ::161,162
listOf1 gen162,163
vectorOf ::167,168
vectorOf k168,169

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Modifiers.hs,1112
module Test.QuickCheck.Modifiers37,38
newtype Blind a66,67
newtype Blind a = Blind a66,67
instance Show73,74
newtype Fixed a83,84
newtype Fixed a = Fixed a83,84
newtype OrderedList a97,98
newtype OrderedList a = Ordered {getOrdered97,98
newtype OrderedList a = Ordered {getOrdered :: [a]}97,98
newtype NonEmptyList a111,112
newtype NonEmptyList a = NonEmpty {getNonEmpty111,112
newtype NonEmptyList a = NonEmpty {getNonEmpty :: [a]}111,112
newtype Positive a125,126
newtype Positive a = Positive {getPositive125,126
newtype Positive a = Positive {getPositive :: a}125,126
newtype NonZero a144,145
newtype NonZero a = NonZero {getNonZero144,145
newtype NonZero a = NonZero {getNonZero :: a}144,145
newtype NonNegative a158,159
newtype NonNegative a = NonNegative {getNonNegative158,159
newtype NonNegative a = NonNegative {getNonNegative :: a}158,159
newtype Shrink2 a183,184
newtype Shrink2 a = Shrink2 a183,184
data Smart a205,206
  Smart Int206,207
{-225,226
data Shrinking s250,251
  Shrinking s251,252
class ShrinkState s253,254
  shrinkInit  ::254,255
  shrinkState ::255,256

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Monadic.hs,594
module Test.QuickCheck.Monadic where7,8
newtype PropertyM m26,27
  MkPropertyM {27,28
  MkPropertyM { unPropertyM ::27,28
instance Functor29,30
stop ::37,38
stop p38,39
--assert ::41,42
assert ::42,43
assert True43,44
pre ::47,48
pre True48,49
run ::52,53
run m53,54
pick ::55,56
pick gen56,57
wp ::62,63
wp m63,64
forAllM ::65,66
forAllM gen66,67
monitor ::68,69
monitor f69,70
monadic ::73,74
monadic runner74,75
monadic' ::76,77
monadic' (MkPropertyM77,78
monadicIO ::79,80
monadicIO =80,81
monadicST ::83,84
monadicST m84,85
runSTGen ::86,87
runSTGen g87,88

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Poly.hs,549
module Test.QuickCheck.Poly12,13
newtype A =28,29
newtype A = A{ unA28,29
newtype A = A{ unA ::28,29
instance Show31,32
newtype B =43,44
newtype B = B{ unB43,44
newtype B = B{ unB ::43,44
newtype C =58,59
newtype C = C{ unC58,59
newtype C = C{ unC ::58,59
newtype OrdA =76,77
newtype OrdA = OrdA{ unOrdA76,77
newtype OrdA = OrdA{ unOrdA ::76,77
newtype OrdB =95,96
newtype OrdB = OrdB{ unOrdB95,96
newtype OrdB = OrdB{ unOrdB ::95,96
newtype OrdC =114,115
newtype OrdC = OrdC{ unOrdC114,115
newtype OrdC = OrdC{ unOrdC ::114,115

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Property.hs,2495
module Test.QuickCheck.Property where1,2
infixr 020,21
type Property =57,58
class Testable prop60,61
  property ::61,62
  exhaustive ::62,63
  exhaustive _63,64
instance Testable65,66
morallyDubiousIOProperty ::82,83
morallyDubiousIOProperty =83,84
protect ::89,90
protect f90,91
newtype Prop =95,96
newtype Prop = MkProp{ unProp95,96
newtype Prop = MkProp{ unProp ::95,96
data Rose a99,100
data Rose a = MkRose a99,100
data Rose a = MkRose a [Rose a] | IORose (IO99,100
ioRose ::102,103
ioRose =103,104
joinRose ::105,106
joinRose (IORose106,107
reduceRose ::126,127
reduceRose r@(MkRose127,128
onRose ::132,133
onRose f133,134
protectRose ::137,138
protectRose =138,139
protectResults ::141,142
protectResults =142,143
data Callback150,151
  = PostTest CallbackKind151,152
  | PostFinalFailure CallbackKind152,153
data CallbackKind =153,154
data CallbackKind = Counterexample    --153,154
                  | NotCounterexample --154,155
data Result157,158
  = MkResult158,159
  { ok          ::159,160
result ::168,169
result =169,170
exception ::180,181
exception msg181,182
formatException ::186,187
formatException msg187,188
protectResult ::191,192
protectResult =192,193
succeeded ::194,195
succeeded =195,196
failed ::197,198
failed =198,199
rejected ::200,201
rejected =201,202
liftBool ::206,207
liftBool True207,208
mapResult ::210,211
mapResult f211,212
mapTotalResult ::213,214
mapTotalResult f214,215
mapRoseResult ::217,218
mapRoseResult f218,219
mapProp ::220,221
mapProp f221,222
mapSize ::227,228
mapSize f228,229
shrinking ::233,234
shrinking shrinker237,238
noShrinking ::243,244
noShrinking =244,245
callback ::247,248
callback cb248,249
printTestCase ::251,252
printTestCase s252,253
whenFail ::262,263
whenFail m263,264
whenFail' ::270,271
whenFail' m271,272
verbose ::280,281
verbose =281,282
expectFailure ::290,291
expectFailure =291,292
once ::294,295
once =295,296
label ::299,300
label s300,301
collect ::305,306
collect x306,307
classify ::309,310
classify b313,314
cover ::317,318
cover True322,323
(==>) ::330,331
(==>) :: Testable330,331
False ==>331,332
True  ==>332,333
within ::336,337
within n337,338
forAll ::354,355
forAll gen356,357
forAllShrink ::361,362
forAllShrink gen363,364
(.&.) :: (Testable371,372
p1 .&.372,373
(.&&.) :: (Testable378,379
conjoin ::382,383
conjoin ps383,384
(.||.) :: (Testable407,408
disjoin ::411,412
disjoin ps412,413

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/State.hs,581
module Test.QuickCheck.State where0,1
data State10,11
  = MkState11,12
  { terminal                  ::13,14
  , maxSuccessTests           ::14,15
  , maxDiscardedTests         ::15,16
  , computeSize               ::16,17
  , numSuccessTests           ::20,21
  , numDiscardedTests         ::21,22
  , numRecentlyDiscardedTests ::22,23
  , collected                 ::23,24
  , expectedFailure           ::24,25
  , randomSeed                ::25,26
  , numSuccessShrinks         ::28,29
  , numTryShrinks             ::29,30
  , numTotTryShrinks          ::30,31

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Test.hs,2021
module Test.QuickCheck.Test where0,1
data Args34,35
  = Args35,36
  { replay          ::36,37
  , maxSuccess      ::37,38
  , maxDiscardRatio ::38,39
  , maxSize         ::39,40
  , chatty          ::40,41
data Result45,46
  = Success                            --46,47
    { numTests       ::47,48
    , labels         ::48,49
    , output         ::49,50
  | GaveUp                             --51,52
    { numTests       ::52,53
    , labels         ::53,54
    , output         ::54,55
  | Failure                            --56,57
    { numTests       ::57,58
    , numShrinks     ::58,59
    , usedSeed       ::59,60
    , usedSize       ::60,61
    , reason         ::61,62
    , interrupted    ::62,63
    , labels         ::63,64
    , output         ::64,65
  | NoExpectedFailure                  --66,67
    { numTests       ::67,68
    , labels         ::68,69
    , output         ::69,70
isSuccess ::74,75
isSuccess Success{}75,76
stdArgs ::79,80
stdArgs =80,81
quickCheck ::90,91
quickCheck p91,92
quickCheckWith ::94,95
quickCheckWith args95,96
quickCheckResult ::98,99
quickCheckResult p99,100
quickCheckWithResult ::102,103
quickCheckWithResult a103,104
verboseCheck ::137,138
verboseCheck p138,139
verboseCheckWith ::142,143
verboseCheckWith args143,144
verboseCheckResult ::147,148
verboseCheckResult p148,149
verboseCheckWithResult ::152,153
verboseCheckWithResult a153,154
test ::158,159
test st159,160
doneTesting ::164,165
doneTesting st165,166
giveUp ::191,192
giveUp st192,193
runATest ::207,208
runATest st208,209
summary ::266,267
summary st267,268
success ::278,279
success st279,280
foundFailure ::325,326
foundFailure st326,327
localMin ::329,330
localMin st330,331
localMin' ::353,354
localMin' st354,355
localMinFound ::364,365
localMinFound st365,366
callbackPostTest ::387,388
callbackPostTest st388,389
callbackPostFinalFailure ::391,392
callbackPostFinalFailure st392,393
safely ::395,396
safely st396,397

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck/Text.hs,1146
module Test.QuickCheck.Text0,1
newtype Str =44,45
newtype Str = MkStr String44,45
instance Show46,47
ranges ::49,50
ranges k50,51
number ::57,58
number n58,59
short ::60,61
short n61,62
showErr ::68,69
showErr =69,70
oneLine ::71,72
oneLine =72,73
isOneLine ::74,75
isOneLine xs75,76
bold ::77,78
--bold s79,80
bold s80,81
data Terminal85,86
  = MkTerminal (IORef86,87
data Output88,89
  = Output (String89,90
newTerminal ::91,92
newTerminal out92,93
withBuffering ::96,97
withBuffering action97,98
withStdioTerminal ::104,105
withStdioTerminal action105,106
withNullTerminal ::110,111
withNullTerminal action111,112
terminalOutput ::116,117
terminalOutput (MkTerminal117,118
handle ::119,120
handle h120,121
output ::124,125
output f125,126
put ::129,130
put (Output130,131
get ::134,135
get (Output135,136
flush ::137,138
flush (MkTerminal138,139
postpone ::143,144
postpone (MkTerminal144,145
putPart, putTemp, putLine :: Terminal ->148,149
putPart, putTemp, putLine ::148,149
putPart, putTemp,148,149
putPart tm@(MkTerminal149,150
putTemp tm@(MkTerminal153,154
putLine tm@(MkTerminal161,162

/Users/ismael/.haskdogs/QuickCheck-2.6/Test/QuickCheck.hs,27
module Test.QuickCheck1,2

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Applicative.hs,1058
module Control.Applicative (34,35
class Functor f => Applicative f115,116
    pure ::117,118
    (<*>) :: f120,121
    (*>) :: f123,124
    (*>) =124,125
    (<*) :: f127,128
class Applicative f => Alternative f140,141
    empty ::142,143
    (<|>) :: f144,145
    some ::147,148
    some v148,149
    many ::154,155
    many v155,156
instance Applicative162,163
newtype Const a242,243
newtype Const a b = Const {242,243
newtype Const a b = Const { getConst ::242,243
newtype WrappedMonad m251,252
newtype WrappedMonad m a = WrapMonad {251,252
newtype WrappedMonad m a = WrapMonad { unwrapMonad ::251,252
newtype WrappedArrow a264,265
newtype WrappedArrow a b c = WrapArrow {264,265
newtype WrappedArrow a b c = WrapArrow { unwrapArrow ::264,265
newtype ZipList a281,282
newtype ZipList a = ZipList {281,282
newtype ZipList a = ZipList { getZipList ::281,282
(<**>) :: Applicative293,294
liftA ::298,299
liftA f299,300
liftA2 ::302,303
liftA2 f303,304
liftA3 ::306,307
liftA3 f307,308
optional ::310,311
optional v311,312

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Arrow.hs,1395
module Control.Arrow (20,21
class Category a => Arrow a78,79
    arr ::81,82
    first ::85,86
    second ::91,92
    second f92,93
    (***) :: a102,103
    f ***103,104
    (&&&) :: a110,111
"compose/arr"   forall114,115
"first/arr"     forall116,117
"second/arr"    forall118,119
"product/arr"   forall120,121
"fanout/arr"    forall122,123
"compose/first" forall124,125
"compose/second" forall126,127
instance Arrow132,133
newtype Kleisli m141,142
newtype Kleisli m a b = Kleisli {141,142
newtype Kleisli m a b = Kleisli { runKleisli ::141,142
returnA ::153,154
returnA =154,155
(^>>) :: Arrow157,158
(>>^) :: Arrow161,162
a >>^162,163
(<<^) :: Arrow165,166
(^<<) :: Arrow169,170
class Arrow a => ArrowZero a172,173
    zeroArrow ::173,174
class ArrowZero a => ArrowPlus a179,180
    (<+>) :: a181,182
class Arrow a => ArrowChoice a209,210
    left ::213,214
    right ::219,220
    right f220,221
    (+++) :: a232,233
    (|||) :: a240,241
"left/arr"      forall247,248
"right/arr"     forall249,250
"sum/arr"       forall251,252
"fanin/arr"     forall253,254
"compose/left"  forall255,256
"compose/right" forall257,258
class Arrow a => ArrowApply a284,285
    app ::285,286
newtype ArrowMonad a296,297
newtype ArrowMonad a b = ArrowMonad (a296,297
leftApp ::313,314
leftApp f314,315
class Arrow a => ArrowLoop a345,346
    loop ::346,347

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Category.hs,291
module Control.Category where15,16
class Category cat24,25
    id ::26,27
    (.) :: cat29,30
"identity/left" forall32,33
"identity/right"        forall34,35
"association"   forall36,37
instance Category40,41
(<<<) :: Category45,46
(<<<) =46,47
(>>>) :: Category49,50
f >>>50,51

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Concurrent/Chan.hs,531
module Control.Concurrent.Chan20,21
data Chan a54,55
 = Chan _UPK_(MVar55,56
type Stream a61,62
type Stream a =61,62
data ChItem a63,64
data ChItem a = ChItem a63,64
newChan ::75,76
newChan =76,77
writeChan ::88,89
writeChan (Chan89,90
readChan ::107,108
readChan (Chan108,109
dupChan ::131,132
dupChan (Chan132,133
unGetChan ::138,139
unGetChan (Chan139,140
isEmptyChan ::147,148
isEmptyChan (Chan148,149
getChanContents ::159,160
getChanContents ch160,161
writeList2Chan ::168,169
writeList2Chan ch169,170

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Concurrent/MVar.hs,463
module Control.Concurrent.MVar123,124
readMVar ::175,176
readMVar m176,177
swapMVar ::187,188
swapMVar mvar188,189
withMVar ::204,205
withMVar m205,206
modifyMVar_ ::220,221
modifyMVar_ m221,222
modifyMVar ::232,233
modifyMVar m233,234
modifyMVarMasked_ ::245,246
modifyMVarMasked_ m246,247
modifyMVarMasked ::257,258
modifyMVarMasked m258,259
addMVarFinalizer ::266,267
addMVarFinalizer =267,268
mkWeakMVar ::271,272
mkWeakMVar m@(MVar272,273

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Concurrent/QSem.hs,211
module Control.Concurrent.QSem20,21
newtype QSem =45,46
newtype QSem = QSem (MVar45,46
newQSem ::51,52
newQSem initial52,53
waitQSem ::59,60
waitQSem (QSem60,61
signalQSem ::80,81
signalQSem (QSem81,82

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Concurrent/QSemN.hs,223
module Control.Concurrent.QSemN21,22
newtype QSemN =40,41
newtype QSemN = QSemN (MVar40,41
newQSemN ::46,47
newQSemN initial47,48
waitQSemN ::54,55
waitQSemN (QSemN55,56
signalQSemN ::68,69
signalQSemN (QSemN69,70

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Concurrent/SampleVar.hs,438
module Control.Concurrent.SampleVar20,21
newtype SampleVar a63,64
newtype SampleVar a = SampleVar (63,64
newEmptySampleVar ::74,75
newEmptySampleVar =75,76
newSampleVar ::80,81
newSampleVar a81,82
emptySampleVar ::86,87
emptySampleVar (SampleVar87,88
readSampleVar ::96,97
readSampleVar (SampleVar97,98
writeSampleVar ::109,110
writeSampleVar (SampleVar110,111
isEmptySampleVar ::132,133
isEmptySampleVar (SampleVar133,134

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Concurrent.hs,958
module Control.Concurrent (27,28
type ThreadId =154,155
>   main189,190
forkFinally ::222,223
forkFinally action223,224
max_buff_size ::231,232
max_buff_size =232,233
mergeIO ::236,237
nmergeIO ::237,238
mergeIO ls247,248
type Buffer a261,262
type Buffer a261,262
suckIO ::264,265
suckIO branches_running266,267
nmergeIO lss287,288
forkOS ::383,384
forkOS_entry ::391,392
forkOS_entry stableAction392,393
failNonThreaded ::399,400
failNonThreaded =400,401
forkOS action0403,404
isCurrentThreadBound ::429,430
isCurrentThreadBound =430,431
runInBoundThread ::444,445
runInBoundThread action446,447
runInUnboundThread ::475,476
runInUnboundThread action477,478
unsafeResult ::489,490
unsafeResult =490,491
threadWaitRead ::504,505
threadWaitRead fd505,506
threadWaitWrite ::529,530
threadWaitWrite fd530,531
withThread ::541,542
withThread io542,543
waitFd ::550,551
waitFd fd551,552
iNFINITE ::555,556
iNFINITE =556,557

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Exception/Base.hs,3434
module Control.Exception.Base (22,23
data Exception   =155,156
data Exception   = IOException    IOException155,156
                 | ArithException ArithException156,157
                 | ArrayException ArrayException157,158
                 | AsyncException AsyncException158,159
                 | ExitException  ExitCode159,160
class ({-Typeable e,-} Show e) => Exception e where162,163
    toException   ::163,164
    fromException ::164,165
data SomeException =166,167
data SomeException = forall e166,167
instance Show170,171
type IOException =176,177
data ArithException185,186
data ArrayException186,187
data AsyncException187,188
data AssertionFailed188,189
data PatternMatchFail189,190
data NoMethodError190,191
data Deadlock191,192
data BlockedIndefinitelyOnMVar192,193
data BlockedIndefinitelyOnSTM193,194
data ErrorCall194,195
data RecConError195,196
data RecSelError196,197
data RecUpdError197,198
catch   ::212,213
catch io216,217
throwIO  ::218,219
throwIO   =219,220
throw    ::221,222
throw     =222,223
evaluate ::224,225
evaluate x225,226
assert ::227,228
assert True228,229
mask   ::231,232
mask action232,233
class (Typeable e, Show e) => Exception e where238,239
    toException   ::239,240
    fromException ::240,241
    toException e242,243
    fromException (DynamicException243,244
data ErrorCall =282,283
data ErrorCall = ErrorCall String282,283
data BlockedIndefinitelyOnMVar =292,293
data BlockedIndefinitelyOnMVar = BlockedIndefinitelyOnMVar292,293
data BlockedIndefinitelyOnSTM =293,294
data BlockedIndefinitelyOnSTM = BlockedIndefinitelyOnSTM293,294
data Deadlock =294,295
data Deadlock = Deadlock294,295
data AssertionFailed =295,296
data AssertionFailed = AssertionFailed String295,296
data AsyncException296,297
  = StackOverflow297,298
  | HeapOverflow298,299
  | ThreadKilled299,300
  | UserInterrupt300,301
throw ::327,328
throwIO ::330,331
block   ::337,338
block    =338,339
unblock ::339,340
unblock  =340,341
blocked ::341,342
blocked  =342,343
catch   ::382,383
catchJust p414,415
handle     ::424,425
handle     =425,426
handleJust ::429,430
handleJust p430,431
mapException ::440,441
mapException f441,442
try ::460,461
try a461,462
tryJust ::466,467
tryJust p467,468
onException ::477,478
onException io478,479
bracket before509,510
finally ::520,521
a `finally` sequel =524,525
bracket_ ::532,533
bracket_ before533,534
bracketOnError before542,543
assert ::548,549
data PatternMatchFail =558,559
data PatternMatchFail = PatternMatchFail String558,559
data RecSelError =580,581
data RecSelError = RecSelError String580,581
data RecConError =600,601
data RecConError = RecConError String600,601
data RecUpdError =622,623
data RecUpdError = RecUpdError String622,623
data NoMethodError =642,643
data NoMethodError = NoMethodError String642,643
data NonTermination =663,664
data NonTermination = NonTermination663,664
data NestedAtomically =682,683
data NestedAtomically = NestedAtomically682,683
recSelError              s700,701
runtimeError             s702,703
absentError              s703,704
nonExhaustiveGuardsError s705,706
irrefutPatError          s706,707
recConError              s707,708
noMethodBindingError     s708,709
patError                 s709,710
nonTermination ::712,713
nonTermination =713,714
nestedAtomically ::716,717
nestedAtomically =717,718

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Exception.hs,307
module Control.Exception (33,34
data Handler a164,165
data Handler a = forall e164,165
instance Functor166,167
> f173,174
>          `catch` \ (ex174,175
catches ::187,188
catches io188,189
catchesHandler ::190,191
catchesHandler handlers191,192
allowInterrupt ::246,247
allowInterrupt =247,248

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/Fix.hs,121
module Control.Monad.Fix (20,21
class (Monad m) => MonadFix m where56,57
        mfix ::61,62
instance MonadFix66,67

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/Instances.hs,61
module Control.Monad.Instances (Functor(..),Monad(..))20,21

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/ST/Imp.hs,144
module Control.Monad.ST.Imp (21,22
fixST ::57,58
fixST f58,59
unsafeInterleaveST ::60,61
unsafeInterleaveST =61,62
instance MonadFix66,67

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/ST/Lazy/Imp.hs,479
module Control.Monad.ST.Lazy.Imp (21,22
newtype ST s71,72
newtype ST s a = ST (State71,72
data State s72,73
data State s = S# (State#72,73
instance Functor74,75
runST ::100,101
runST st101,102
fixST ::106,107
fixST m107,108
strictToLazyST ::127,128
strictToLazyST m128,129
lazyToStrictST ::139,140
lazyToStrictST (ST140,141
stToIO ::148,149
stToIO =149,150
unsafeInterleaveST ::155,156
unsafeInterleaveST =156,157
unsafeIOToST ::159,160
unsafeIOToST =160,161

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/ST/Lazy/Safe.hs,42
module Control.Monad.ST.Lazy.Safe (20,21

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/ST/Lazy/Unsafe.hs,44
module Control.Monad.ST.Lazy.Unsafe (20,21

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/ST/Lazy.hs,135
module Control.Monad.ST.Lazy (18,19
unsafeInterleaveST ::44,45
unsafeInterleaveST =45,46
unsafeIOToST ::48,49
unsafeIOToST =49,50

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/ST/Safe.hs,37
module Control.Monad.ST.Safe (20,21

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/ST/Strict.hs,39
module Control.Monad.ST.Strict (14,15

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/ST/Unsafe.hs,39
module Control.Monad.ST.Unsafe (20,21

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/ST.hs,173
module Control.Monad.ST (18,19
unsafeInterleaveST ::42,43
unsafeInterleaveST =43,44
unsafeIOToST ::46,47
unsafeIOToST =47,48
unsafeSTToIO ::50,51
unsafeSTToIO =51,52

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad/Zip.hs,214
module Control.Monad.Zip where17,18
class Monad m => MonadZip m36,37
    mzip ::38,39
    mzip =39,40
    mzipWith ::41,42
    mzipWith f42,43
    munzip ::44,45
    munzip mab45,46
instance MonadZip50,51

/Users/ismael/.haskdogs/base-4.6.0.1/Control/Monad.hs,1639
module Control.Monad16,17
infixr 186,87
{-# SPECIALISE92,93
(=<<)           ::93,94
(=<<)           :: Monad93,94
f =<<94,95
sequence       ::98,99
sequence ms100,101
sequence_        ::106,107
sequence_ ms108,109
mapM            ::111,112
mapM f113,114
mapM_           ::116,117
mapM_ f118,119
class Monad m => MonadPlus m126,127
   mzero ::132,133
   mplus ::134,135
instance MonadPlus136,137
guard           ::151,152
guard True152,153
filterM          ::157,158
filterM _158,159
forM            ::165,166
forM            =167,168
forM_           ::170,171
forM_           =172,173
msum        ::176,177
msum        =178,179
(>=>)       :: Monad183,184
(<=<)       :: Monad187,188
forever     ::191,192
forever a193,194
void ::198,199
void =199,200
join              ::207,208
join x208,209
mapAndUnzipM      ::213,214
mapAndUnzipM f214,215
zipWithM          ::217,218
zipWithM f218,219
zipWithM_         ::221,222
zipWithM_ f222,223
the list arguments. This could be an issue where @('>>')@ and the `folded226,227
==  232,233
foldM             ::243,244
foldM _244,245
foldM_            ::248,249
foldM_ f249,250
replicateM        ::253,254
replicateM n254,255
replicateM_       ::257,258
replicateM_ n258,259
when              ::268,269
when p269,270
unless            ::273,274
unless p274,275
liftM   ::277,278
liftM f278,279
liftM2  ::286,287
liftM2 f287,288
liftM3  ::291,292
liftM3 f292,293
liftM4  ::296,297
liftM4 f297,298
liftM5  ::301,302
liftM5 f302,303
>       return f `ap` x1 `ap`307,308
ap                ::315,316
mfilter ::328,329
mfilter p329,330

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Bits.hs,1590
module Data.Bits (21,22
infixl 8 `shift`, `rotate`, `shiftL`,65,66
infixl 6 `xor`67,68
be implemented using `testBitDefault', 'bitDefault, and79,80
class Eq a => Bits a82,83
    (.&.) :: a84,85
    (.|.) :: a87,88
    xor ::90,91
    complement        ::93,94
    shift             ::104,105
    rotate            ::118,119
    x `rotate`  i |120,121
    bit               ::139,140
    setBit            ::142,143
    clearBit          ::145,146
    complementBit     ::148,149
    testBit           ::151,152
    bitSize           ::157,158
    isSigned          ::161,162
    x `setBit` i        =166,167
    x `clearBit` i      =167,168
    x `complementBit` i =168,169
    shiftL            ::176,177
    x `shiftL`  i =178,179
    unsafeShiftL            ::185,186
    x `unsafeShiftL` i =187,188
    shiftR            ::200,201
    x `shiftR`  i =202,203
    unsafeShiftR            ::212,213
    x `unsafeShiftR` i =214,215
    rotateL           ::222,223
    x `rotateL` i =224,225
    rotateR           ::232,233
    x `rotateR` i =234,235
    popCount          ::238,239
bitDefault ::243,244
bitDefault i244,245
testBitDefault ::250,251
testBitDefault x251,252
popCountDefault ::258,259
popCountDefault =259,260
instance Bits265,266
posAnd, posOr, posXOr :: Integer ->425,426
posAnd, posOr, posXOr ::425,426
posAnd, posOr,425,426
posAnd x426,427
posOr x427,428
posXOr x428,429
longZipWith ::430,431
longZipWith f431,432
toInts ::435,436
toInts n436,437
fromInts ::442,443
fromInts =443,444
numInts =446,447
goes to:454,455

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Bool.hs,25
module Data.Bool (17,18

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Char.hs,1833
module Data.Char17,18
digitToInt ::84,85
digitToInt c85,86
isAsciiUpper, isAsciiLower :: Char92,93
isAsciiUpper, isAsciiLower92,93
isAsciiLower c93,94
isAsciiUpper c94,95
data GeneralCategory100,101
        = UppercaseLetter       --101,102
        | LowercaseLetter       --102,103
        | TitlecaseLetter       --103,104
        | ModifierLetter        --104,105
        | OtherLetter           --105,106
        | NonSpacingMark        --106,107
        | SpacingCombiningMark  --107,108
        | EnclosingMark         --108,109
        | DecimalNumber         --109,110
        | LetterNumber          --110,111
        | OtherNumber           --111,112
        | ConnectorPunctuation  --112,113
        | DashPunctuation       --113,114
        | OpenPunctuation       --114,115
        | ClosePunctuation      --115,116
        | InitialQuote          --116,117
        | FinalQuote            --117,118
        | OtherPunctuation      --118,119
        | MathSymbol            --119,120
        | CurrencySymbol        --120,121
        | ModifierSymbol        --121,122
        | OtherSymbol           --122,123
        | Space                 --123,124
        | LineSeparator         --124,125
        | ParagraphSeparator    --125,126
        | Control               --126,127
        | Format                --127,128
        | Surrogate             --128,129
        | PrivateUse            --129,130
        | NotAssigned           --130,131
generalCategory ::134,135
generalCategory c136,137
isLetter ::147,148
isLetter c148,149
isMark ::158,159
isMark c159,160
isNumber ::167,168
isNumber c168,169
isPunctuation ::176,177
isPunctuation c177,178
isSymbol ::189,190
isSymbol c190,191
isSeparator ::198,199
isSeparator c199,200
toTitle ::207,208
toTitle =208,209

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Complex.hs,425
module Data.Complex20,21
data Complex a68,69
  = !a :+69,70
realPart ::81,82
realPart (x82,83
imagPart ::85,86
imagPart (_86,87
conjugate        ::90,91
conjugate (x:+y)91,92
mkPolar          ::95,96
mkPolar r96,97
cis              ::101,102
cis theta102,103
polar            ::109,110
polar z110,111
magnitude ::114,115
magnitude (x:+y)115,116
phase ::124,125
phase (0125,126
instance  (RealFloat135,136

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Data.hs,5576
module Data.Data (27,28
> data192,193
  gunfold :: (forall b r. Data b => c (b ->247,248
  gfoldl  ::226,227
  gfoldl _244,245
  gunfold ::247,248
  toConstr   ::256,257
  dataTypeOf  ::260,261
------------------------------------------------------------------------------268,269
-}380,381
newtype ID x422,423
newtype ID x = ID {422,423
newtype ID x = ID { unID ::422,423
newtype CONST c426,427
newtype CONST c a = CONST {426,427
newtype CONST c a = CONST { unCONST ::426,427
data Qi q430,431
data Qi q a = Qi Int430,431
newtype Qr r434,435
newtype Qr r a = Qr {434,435
newtype Qr r a = Qr { unQr  ::434,435
newtype Mp m438,439
newtype Mp m x = Mp {438,439
newtype Mp m x = Mp { unMp ::438,439
fromConstr ::450,451
fromConstr =451,452
fromConstrB ::455,456
fromConstrB f459,460
fromConstrM ::469,470
fromConstrM f473,474
data DataType =494,495
data DataType = DataType494,495
                        { tycon   ::495,496
                        , datarep ::496,497
data Constr =504,505
data Constr = Constr504,505
                        { conrep    ::505,506
                        , constring ::506,507
                        , confields ::507,508
                        , confixity ::508,509
                        , datatype  ::509,510
instance Show512,513
data DataRep =522,523
data DataRep = AlgRep [Constr]522,523
             | IntRep523,524
             | FloatRep524,525
             | CharRep525,526
             | NoRep526,527
data ConstrRep =533,534
data ConstrRep = AlgConstr    ConIndex533,534
               | IntConstr    Integer534,535
               | FloatConstr  Rational535,536
               | CharConstr   Char536,537
type ConIndex =543,544
data Fixity =547,548
data Fixity = Prefix547,548
            | Infix     --548,549
dataTypeName ::561,562
dataTypeName =562,563
dataTypeRep ::567,568
dataTypeRep =568,569
constrType ::572,573
constrType =573,574
constrRep ::577,578
constrRep =578,579
repConstr ::582,583
repConstr dt583,584
mkDataType ::601,602
mkDataType str602,603
mkConstr ::609,610
mkConstr dt610,611
dataTypeConstrs ::624,625
dataTypeConstrs dt625,626
constrFields ::633,634
constrFields =634,635
constrFixity ::638,639
constrFixity =639,640
showConstr ::651,652
showConstr =652,653
readConstr ::656,657
readConstr dt657,658
isAlgType ::690,691
isAlgType dt691,692
indexConstr ::697,698
indexConstr dt698,699
constrIndex ::704,705
constrIndex con705,706
maxConstrIndex ::711,712
maxConstrIndex dt712,713
mkIntType ::726,727
mkIntType =727,728
mkFloatType ::731,732
mkFloatType =732,733
mkStringType ::737,738
mkStringType =738,739
mkCharType ::741,742
mkCharType =742,743
mkPrimType ::746,747
mkPrimType dr747,748
mkPrimCon ::754,755
mkPrimCon dt755,756
mkIntConstr ::765,766
mkIntConstr =766,767
mkIntegralConstr ::768,769
mkIntegralConstr dt769,770
mkFloatConstr ::775,776
mkFloatConstr dt776,777
mkRealConstr ::778,779
mkRealConstr dt779,780
mkStringConstr ::785,786
mkStringConstr dt786,787
mkCharConstr ::794,795
mkCharConstr dt795,796
mkNorepType ::809,810
mkNorepType str810,811
mkNoRepType ::816,817
mkNoRepType str817,818
isNorepType ::823,824
isNorepType dt824,825
tyconUQname ::840,841
tyconUQname x841,842
tyconModule ::847,848
tyconModule x848,849
falseConstr ::868,869
falseConstr  =869,870
trueConstr ::870,871
trueConstr   =871,872
boolDataType ::873,874
boolDataType =874,875
charType ::888,889
charType =889,890
floatType ::901,902
floatType =902,903
doubleType ::914,915
doubleType =915,916
intType ::927,928
intType =928,929
integerType ::940,941
integerType =941,942
int8Type ::953,954
int8Type =954,955
int16Type ::966,967
int16Type =967,968
int32Type ::979,980
int32Type =980,981
int64Type ::992,993
int64Type =993,994
wordType ::1005,1006
wordType =1006,1007
word8Type ::1018,1019
word8Type =1019,1020
word16Type ::1031,1032
word16Type =1032,1033
word32Type ::1044,1045
word32Type =1045,1046
word64Type ::1057,1058
word64Type =1058,1059
ratioConstr ::1070,1071
ratioConstr =1071,1072
ratioDataType ::1073,1074
ratioDataType =1074,1075
nilConstr ::1086,1087
nilConstr    =1087,1088
consConstr ::1088,1089
consConstr   =1089,1090
listDataType ::1091,1092
listDataType =1092,1093
nothingConstr ::1120,1121
nothingConstr =1121,1122
justConstr ::1122,1123
justConstr    =1123,1124
maybeDataType ::1125,1126
maybeDataType =1126,1127
ltConstr ::1143,1144
ltConstr         =1144,1145
eqConstr ::1145,1146
eqConstr         =1146,1147
gtConstr ::1147,1148
gtConstr         =1148,1149
orderingDataType ::1150,1151
orderingDataType =1151,1152
leftConstr ::1170,1171
leftConstr     =1171,1172
rightConstr ::1173,1174
rightConstr    =1174,1175
eitherDataType ::1176,1177
eitherDataType =1177,1178
tuple0Constr ::1194,1195
tuple0Constr =1195,1196
tuple0DataType ::1197,1198
tuple0DataType =1198,1199
tuple2Constr ::1209,1210
tuple2Constr =1210,1211
tuple2DataType ::1212,1213
tuple2DataType =1213,1214
tuple3Constr ::1226,1227
tuple3Constr =1227,1228
tuple3DataType ::1229,1230
tuple3DataType =1230,1231
tuple4Constr ::1242,1243
tuple4Constr =1243,1244
tuple4DataType ::1245,1246
tuple4DataType =1246,1247
tuple5Constr ::1260,1261
tuple5Constr =1261,1262
tuple5DataType ::1263,1264
tuple5DataType =1264,1265
tuple6Constr ::1278,1279
tuple6Constr =1279,1280
tuple6DataType ::1281,1282
tuple6DataType =1282,1283
tuple7Constr ::1296,1297
tuple7Constr =1297,1298
tuple7DataType ::1299,1300
tuple7DataType =1300,1301

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Dynamic.hs,402
module Data.Dynamic25,26
data Dynamic =87,88
data Dynamic = Dynamic TypeRep87,88
instance Show92,93
type Obj =105,106
data Obj =114,115
data Obj = Obj114,115
toDyn ::126,127
toDyn v127,128
fromDyn ::131,132
fromDyn (Dynamic137,138
fromDynamic (Dynamic149,150
dynApply ::155,156
dynApply (Dynamic156,157
dynApp ::161,162
dynApp f162,163
dynTypeRep ::168,169
dynTypeRep (Dynamic169,170

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Either.hs,400
module Data.Either (20,21
type @'Either' a47,48
data  Either a54,55
data  Either a b  =  Left a54,55
data  Either a b  =  Left a | Right b54,55
instance Functor57,58
either                  ::69,70
either f70,71
lefts   ::79,80
lefts x80,81
rights   ::85,86
rights x86,87
partitionEithers ::93,94
partitionEithers =94,95
prop_partitionEithers ::103,104
prop_partitionEithers x104,105

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Eq.hs,23
module Data.Eq (17,18

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Fixed.hs,1063
module Data.Fixed26,27
div' ::54,55
div' n55,56
divMod' ::58,59
divMod' n59,60
mod' ::63,64
mod' n64,65
newtype Fixed a68,69
newtype Fixed a = MkFixed Integer68,69
tyFixed ::78,79
tyFixed =79,80
conMkFixed ::80,81
conMkFixed =81,82
instance (Typeable82,83
class HasResolution a89,90
    resolution ::90,91
withType ::92,93
withType foo93,94
withResolution ::95,96
withResolution foo96,97
chopZeros ::134,135
chopZeros 0135,136
showIntegerZeros ::140,141
showIntegerZeros True141,142
withDot ::146,147
withDot ""147,148
showFixed ::151,152
showFixed chopTrailingZeros152,153
readsFixed ::161,162
readsFixed =162,163
data E0 =186,187
data E0 = E0186,187
type Uni =193,194
data E1 =195,196
data E1 = E1195,196
type Deci =202,203
data E2 =204,205
data E2 = E2204,205
type Centi =211,212
data E3 =213,214
data E3 = E3213,214
type Milli =220,221
data E6 =222,223
data E6 = E6222,223
type Micro =229,230
data E9 =231,232
data E9 = E9231,232
type Nano =238,239
data E12 =240,241
data E12 = E12240,241
type Pico =247,248

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Foldable.hs,1341
module Data.Foldable (23,24
    foldMap :: Monoid m => (a -> m)116,117
    fold ::111,112
    fold =112,113
    foldMap ::116,117
    foldMap f117,118
    foldr ::122,123
    foldr f123,124
    foldr' ::127,128
    foldr' f128,129
    foldl ::134,135
    foldl f135,136
    foldl' ::141,142
    foldl' f142,143
    foldr1 ::149,150
    foldr1 f150,151
    foldl1 ::160,161
    foldl1 f161,162
instance Foldable169,170
foldrM ::191,192
foldrM f192,193
foldlM ::197,198
foldlM f198,199
traverse_ ::203,204
traverse_ f204,205
for_ ::207,208
for_ =209,210
mapM_ ::213,214
mapM_ f214,215
forM_ ::217,218
forM_ =219,220
sequenceA_ ::223,224
sequenceA_ =224,225
sequence_ ::228,229
sequence_ =229,230
asum ::232,233
asum =234,235
msum ::237,238
msum =239,240
toList ::244,245
toList t247,248
concat ::253,254
concat =254,255
concatMap ::258,259
concatMap =259,260
and ::264,265
and =265,266
or ::270,271
or =271,272
any ::274,275
any p275,276
all ::278,279
all p279,280
sum ::282,283
sum =283,284
product ::286,287
product =287,288
maximum ::290,291
maximum =291,292
maximumBy ::295,296
maximumBy cmp296,297
minimum ::302,303
minimum =303,304
minimumBy ::307,308
minimumBy cmp308,309
elem ::314,315
elem =315,316
notElem ::318,319
notElem x319,320
find ::324,325
find p325,326

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Function.hs,84
module Data.Function16,17
infixl 0 `on`26,27
fix ::30,31
fix f31,32
on ::85,86

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Functor.hs,84
module Data.Functor16,17
(<$) :: Functor26,27
(<$) =27,28
(<$>) :: Functor33,34

/Users/ismael/.haskdogs/base-4.6.0.1/Data/HashTable.hs,2384
module Data.HashTable21,22
iNSTRUMENTED ::76,77
iNSTRUMENTED =77,78
readHTArray  ::81,82
writeMutArray ::82,83
newMutArray   ::83,84
newMutArray =84,85
type MutArray a85,86
type MutArray a =85,86
type HTArray a86,87
readHTArray  =88,89
writeMutArray =89,90
data HashTable key95,96
data HashTable key val = HashTable {95,96
                                     cmp     ::96,97
                                     hash_fn ::97,98
                                     tab     ::98,99
data HT key102,103
  = HT {103,104
        kcount  ::104,105
        bmask   ::105,106
        buckets ::106,107
modifyIORef ::116,117
modifyIORef r117,118
data HashData =121,122
data HashData = HD {121,122
  tables ::122,123
  insertions ::123,124
  lookups ::124,125
  totBuckets ::125,126
  maxEntries ::126,127
  maxChain ::127,128
  maxBuckets ::128,129
hashData ::132,133
hashData =133,134
instrument ::137,138
instrument i138,139
recordNew ::141,142
recordNew =142,143
recordIns ::146,147
recordIns i147,148
recordResize ::152,153
recordResize older153,154
recordLookup ::158,159
recordLookup =159,160
golden ::180,181
golden =181,182
hashInt32 ::187,188
hashInt32 x188,189
hashInt ::201,202
hashInt x202,203
mulHi ::205,206
mulHi a206,207
hashString ::238,239
hashString =239,240
prime ::244,245
prime =245,246
tABLE_MAX ::250,251
tABLE_MAX  =251,252
tABLE_MIN ::252,253
tABLE_MIN  =253,254
hLOAD ::255,256
hLOAD =256,257
hYSTERESIS ::258,259
hYSTERESIS =259,260
new cmpr276,277
bitTwiddleSameAs ::295,296
bitTwiddleSameAs v0296,297
powerOver ::310,311
powerOver n311,312
newHint cmpr325,326
insert ::349,350
insert ht351,352
tooBig ::359,360
tooBig k360,361
bucketIndex ::363,364
bucketIndex mask364,365
findBucket ::377,378
findBucket HashTable{378,379
data Inserts =384,385
data Inserts = CanInsert384,385
             | Can'tInsert385,386
updatingBucket ::402,403
updatingBucket canEnlarge405,406
expandHashTable ::422,423
expandHashTable hash423,424
deleteBucket ::450,451
deleteBucket _451,452
delete ::459,460
delete ht@HashTable{461,462
update ::475,476
update ht@HashTable{477,478
lookup ::487,488
lookup ht@HashTable{489,490
fromList ::502,503
fromList hash503,504
toList ::510,511
toList =511,512
mapReduce ::514,515
mapReduce m515,516
longestChain ::529,530
longestChain =530,531

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Int.hs,36
module Data.Int17,18
* Right60,61

/Users/ismael/.haskdogs/base-4.6.0.1/Data/IORef.hs,357
module Data.IORef17,18
mkWeakIORef ::66,67
mkWeakIORef r@(IORef67,68
modifyIORef ::84,85
modifyIORef ref85,86
modifyIORef' ::88,89
modifyIORef' ref89,90
atomicModifyIORef ::113,114
atomicModifyIORef =115,116
atomicModifyIORef' ::133,134
atomicModifyIORef' ref134,135
atomicWriteIORef ::142,143
atomicWriteIORef ref143,144
>  maybePrint155,156

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Ix.hs,21
module Data.Ix19,20

/Users/ismael/.haskdogs/base-4.6.0.1/Data/List.hs,4641
module Data.List17,18
dropWhileEnd ::238,239
dropWhileEnd p239,240
stripPrefix ::249,250
stripPrefix []250,251
elemIndex       ::258,259
elemIndex x259,260
elemIndices     ::263,264
elemIndices x264,265
find            ::269,270
find p270,271
findIndex       ::275,276
findIndex p276,277
findIndices      ::280,281
findIndices p283,284
isPrefixOf              ::295,296
isPrefixOf []296,297
isSuffixOf              ::303,304
isSuffixOf x304,305
isInfixOf               ::314,315
isInfixOf needle315,316
nub                     ::322,323
nub                     =324,325
nubBy                   ::338,339
nubBy eq340,341
elem_by ::355,356
elem_by _356,357
delete                  ::369,370
delete                  =370,371
deleteBy                ::374,375
deleteBy _375,376
(\\)                    :: (Eq387,388
(\\)                    =388,389
union                   ::401,402
union                   =402,403
unionBy                 ::405,406
unionBy eq406,407
intersect               ::421,422
intersect               =422,423
intersectBy             ::425,426
intersectBy _426,427
intersperse             ::436,437
intersperse _437,438
prependToAll            ::445,446
prependToAll _446,447
intercalate ::452,453
intercalate xs453,454
transpose               ::460,461
transpose []461,462
partition               ::472,473
partition p474,475
select ::476,477
select p477,478
mapAccumL ::484,485
mapAccumL _490,491
mapAccumR ::499,500
mapAccumR _505,506
insert ::516,517
insert e517,518
insertBy ::520,521
insertBy _521,522
maximum                 ::533,534
maximum []534,535
{-# RULES537,538
strictMaximum           ::545,546
strictMaximum []546,547
minimum                 ::553,554
minimum []554,555
strictMinimum           ::562,563
strictMinimum []563,564
maximumBy               ::571,572
maximumBy _572,573
minimumBy               ::582,583
minimumBy _583,584
genericLength           ::593,594
genericLength []594,595
strictGenericLength     ::602,603
strictGenericLength l603,604
genericTake             ::610,611
genericTake n611,612
genericDrop             ::617,618
genericDrop n618,619
genericSplitAt          ::625,626
genericSplitAt n626,627
genericIndex ::633,634
genericIndex (x:_)634,635
genericReplicate        ::642,643
genericReplicate n643,644
zip4                    ::647,648
zip4                    =648,649
zip5                    ::652,653
zip5                    =653,654
zip6                    ::657,658
zip6                    =659,660
zip7                    ::663,664
zip7                    =665,666
zipWith4                ::670,671
zipWith4 z671,672
zipWith5                ::678,679
zipWith5 z680,681
zipWith6                ::687,688
zipWith6 z689,690
zipWith7                ::696,697
zipWith7 z698,699
unzip4                  ::704,705
unzip4                  =705,706
unzip5                  ::711,712
unzip5                  =712,713
unzip6                  ::718,719
unzip6                  =719,720
unzip7          ::725,726
unzip7          =726,727
deleteFirstsBy          ::734,735
deleteFirstsBy eq735,736
group                   ::745,746
group                   =746,747
groupBy                 ::749,750
groupBy _750,751
inits                   ::761,762
inits xs762,763
tails                   ::773,774
tails xs774,775
subsequences            ::781,782
subsequences xs782,783
nonEmptySubsequences         ::788,789
nonEmptySubsequences []789,790
permutations            ::797,798
permutations xs0798,799
sort ::814,815
sortBy ::817,818
sort =820,821
sortBy cmp821,822
mergesort ::909,910
mergesort cmp910,911
mergesort' ::912,913
mergesort' _913,914
merge_pairs ::917,918
merge_pairs _918,919
merge ::922,923
merge _923,924
wrap ::930,931
wrap x931,932
qsort ::938,939
qsort _939,940
qpart ::944,945
qpart cmp945,946
rqsort ::955,956
rqsort _956,957
rqpart ::960,961
rqpart cmp961,962
unfoldr      ::994,995
unfoldr f995,996
foldl'           ::1003,1004
foldl' f1005,1006
foldl1                  ::1016,1017
foldl1 f1017,1018
foldl1'                  ::1022,1023
foldl1' f1023,1024
sum                     ::1035,1036
product                 ::1037,1038
sum                     =1039,1040
product                 =1040,1041
lines                   ::1057,1058
lines ""1058,1059
unlines                 ::1079,1080
unlines                 =1081,1082
words                   ::1091,1092
words s1092,1093
unwords                 ::1100,1101
unwords []1102,1103
errorEmptyList ::1114,1115
errorEmptyList fun1115,1116

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Maybe.hs,594
module Data.Maybe17,18
data  Maybe a67,68
data  Maybe a  =  Nothing |67,68
data  Maybe a  =  Nothing | Just a67,68
instance  Functor70,71
maybe ::91,92
maybe n92,93
isJust         ::98,99
isJust Nothing99,100
isNothing         ::103,104
isNothing Nothing104,105
fromJust          ::109,110
fromJust Nothing110,111
fromMaybe     ::116,117
fromMaybe d117,118
maybeToList            ::121,122
maybeToList  Nothing122,123
listToMaybe           ::127,128
listToMaybe []128,129
catMaybes              ::133,134
catMaybes ls134,135
mapMaybe          ::141,142
mapMaybe _142,143

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Monoid.hs,1156
module Data.Monoid (19,20
class Monoid a77,78
        mempty  ::78,79
        mappend ::80,81
        mconcat ::82,83
        mconcat =89,90
(<>) :: Monoid94,95
(<>) =95,96
instance Monoid100,101
newtype Dual a145,146
newtype Dual a = Dual {145,146
newtype Dual a = Dual { getDual ::145,146
newtype Endo a153,154
newtype Endo a = Endo {153,154
newtype Endo a = Endo { appEndo ::153,154
newtype All =160,161
newtype All = All {160,161
newtype All = All { getAll ::160,161
newtype Any =168,169
newtype Any = Any {168,169
newtype Any = Any { getAny ::168,169
newtype Sum a176,177
newtype Sum a = Sum {176,177
newtype Sum a = Sum { getSum ::176,177
newtype Product a184,185
newtype Product a = Product {184,185
newtype Product a = Product { getProduct ::184,185
newtype First a236,237
newtype First a = First {236,237
newtype First a = First { getFirst ::236,237
newtype Last a245,246
newtype Last a = Last {245,246
newtype Last a = Last { getLast ::245,246
prop_mconcatMaybe ::260,261
prop_mconcatMaybe x261,262
prop_mconcatFirst ::264,265
prop_mconcatFirst x265,266
prop_mconcatLast ::267,268
prop_mconcatLast x268,269

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Ord.hs,131
module Data.Ord (17,18
comparing ::35,36
comparing p36,37
newtype Down a44,45
newtype Down a = Down a44,45
instance Ord46,47

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Ratio.hs,82
module Data.Ratio17,18
approxRational          ::73,74
approxRational rat74,75

/Users/ismael/.haskdogs/base-4.6.0.1/Data/STRef/Lazy.hs,203
module Data.STRef.Lazy (16,17
newSTRef    ::29,30
readSTRef   ::30,31
writeSTRef  ::31,32
modifySTRef ::32,33
newSTRef        =34,35
readSTRef       =35,36
writeSTRef  r36,37
modifySTRef r37,38

/Users/ismael/.haskdogs/base-4.6.0.1/Data/STRef/Strict.hs,33
module Data.STRef.Strict (16,17

/Users/ismael/.haskdogs/base-4.6.0.1/Data/STRef.hs,114
module Data.STRef (17,18
modifySTRef ::56,57
modifySTRef ref57,58
modifySTRef' ::60,61
modifySTRef' ref61,62

/Users/ismael/.haskdogs/base-4.6.0.1/Data/String.hs,98
module Data.String (17,18
class IsString a36,37
    fromString ::37,38
instance IsString40,41

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Traversable.hs,826
module Data.Traversable (34,35
    sequence :: Monad m => t (m104,105
    traverse ::89,90
    traverse f90,91
    sequenceA ::94,95
    sequenceA =95,96
    mapM ::99,100
    mapM f100,101
    sequence ::104,105
    sequence =105,106
instance Traversable109,110
for ::126,127
for =128,129
forM ::131,132
forM =133,134
newtype StateL s136,137
newtype StateL s a = StateL {136,137
newtype StateL s a = StateL { runStateL ::136,137
mapAccumL ::152,153
mapAccumL f153,154
newtype StateR s156,157
newtype StateR s a = StateR {156,157
newtype StateR s a = StateR { runStateR ::156,157
mapAccumR ::172,173
mapAccumR f173,174
fmapDefault ::179,180
fmapDefault f181,182
foldMapDefault ::185,186
foldMapDefault f186,187
newtype Id a190,191
newtype Id a = Id {190,191
newtype Id a = Id { getId ::190,191

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Tuple.hs,277
module Data.Tuple19,20
fst                     ::90,91
fst (x,_)91,92
snd                     ::94,95
snd (_,y)95,96
curry                   ::98,99
curry f99,100
uncurry                 ::102,103
uncurry f103,104
swap                    ::107,108
swap (a,b)108,109

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Typeable/Internal.hs,2109
module Data.Typeable.Internal (24,25
data TypeRep =86,87
data TypeRep = TypeRep {-#86,87
instance Eq89,90
data TyCon =97,98
data TyCon = TyCon {97,98
   tyConHash    ::98,99
   tyConPackage ::99,100
   tyConModule  ::100,101
   tyConName    ::101,102
mkTyCon ::121,122
mkTyCon ::123,124
mkTyCon high#125,126
mkTyConApp  ::129,130
mkTyConApp tc@(TyCon130,131
mkFunTy  ::141,142
mkFunTy f142,143
splitTyConApp ::145,146
splitTyConApp (TypeRep146,147
funResultTy ::152,153
funResultTy trFun153,154
mkAppTy ::159,160
mkAppTy (TypeRep160,161
mkTyCon3 ::174,175
mkTyCon3 pkg178,179
typeRepTyCon ::184,185
typeRepTyCon (TypeRep185,186
typeRepArgs ::188,189
typeRepArgs (TypeRep189,190
tyConString ::193,194
tyConString =194,195
lambda, thus207,208
class Typeable a220,221
  typeOf ::221,222
class Typeable1 t228,229
  typeOf1 ::229,230
typeOfDefault ::233,234
typeOfDefault =234,235
typeOfDefault ::241,242
class Typeable2 t249,250
  typeOf2 ::250,251
typeOf1Default ::254,255
typeOf1Default =255,256
typeOf1Default ::262,263
class Typeable3 t270,271
  typeOf3 ::271,272
typeOf2Default ::275,276
typeOf2Default =276,277
typeOf2Default ::283,284
class Typeable4 t291,292
  typeOf4 ::292,293
typeOf3Default ::296,297
typeOf3Default =297,298
typeOf3Default ::304,305
class Typeable5 t312,313
  typeOf5 ::313,314
typeOf4Default ::317,318
typeOf4Default =318,319
typeOf4Default ::325,326
class Typeable6 t333,334
  typeOf6 ::334,335
typeOf5Default ::338,339
typeOf5Default =339,340
typeOf5Default ::346,347
class Typeable7 t354,355
  typeOf7 ::355,356
typeOf6Default ::359,360
typeOf6Default =360,361
typeOf6Default ::367,368
showsTypeRep ::436,437
showsTypeRep =437,438
isTupleTyCon ::442,443
isTupleTyCon (TyCon443,444
showArgs ::448,449
showArgs []449,450
showTuple ::453,454
showTuple args454,455
listTc ::460,461
listTc =461,462
funTc ::463,464
funTc =464,465
    Can't make a derived instance of `Typeable2 (->)':483,484
    Can't make a derived instance of `Typeable RealWorld':565,566
realWorldTc ::569,570
realWorldTc =570,571

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Typeable.hs,332
module Data.Typeable37,38
typeRepKey ::142,143
typeRepKey (TypeRep143,144
newtype TypeRepKey =156,157
newtype TypeRepKey = TypeRepKey Fingerprint156,157
mkTyCon ::163,164
mkTyCon name165,166
cast ::174,175
cast x175,176
gcast ::182,183
gcast x183,184
gcast1 ::192,193
gcast1 x193,194
gcast2 ::202,203
gcast2 x203,204

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Unique.hs,209
module Data.Unique (21,22
newtype Unique =41,42
newtype Unique = Unique Integer41,42
uniqSource ::47,48
uniqSource =48,49
newUnique ::55,56
newUnique =56,57
hashUnique ::78,79
hashUnique (Unique80,81

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Version.hs,376
module Data.Version (28,29
data Version =81,82
  Version {82,83
  Version { versionBranch ::82,83
           versionTags ::96,97
versionTc ::108,109
versionTc =109,110
instance Typeable111,112
  v1 `compare` v2 =121,122
showVersion ::130,131
showVersion (Version131,132
parseVersion ::138,139
parseVersion ::140,141
parseVersion ::142,143
parseVersion =144,145

/Users/ismael/.haskdogs/base-4.6.0.1/Data/Word.hs,55
module Data.Word17,18
type Word =40,41
* Right64,65

/Users/ismael/.haskdogs/base-4.6.0.1/Debug/Trace.hs,335
module Debug.Trace (20,21
traceIO ::64,65
traceIO msg65,66
putTraceMsg ::81,82
putTraceMsg =82,83
> trace93,94
trace ::100,101
trace string101,102
traceShow ::118,119
traceShow =119,120
traceEvent ::146,147
traceEvent msg147,148
traceEventIO ::157,158
traceEventIO msg159,160
traceStack ::175,176
traceStack str176,177

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/C/Error.hs,4317
module Foreign.C.Error (18,19
newtype Errno =140,141
newtype Errno = Errno CInt140,141
instance Eq142,143
eOK             =167,168
e2BIG           =171,172
eACCES          =172,173
eADDRINUSE      =173,174
eADDRNOTAVAIL   =174,175
eADV            =175,176
eAFNOSUPPORT    =176,177
eAGAIN          =177,178
eALREADY        =178,179
eBADF           =179,180
eBADMSG         =180,181
eBADRPC         =181,182
eBUSY           =182,183
eCHILD          =183,184
eCOMM           =184,185
eCONNABORTED    =185,186
eCONNREFUSED    =186,187
eCONNRESET      =187,188
eDEADLK         =188,189
eDESTADDRREQ    =189,190
eDIRTY          =190,191
eDOM            =191,192
eDQUOT          =192,193
eEXIST          =193,194
eFAULT          =194,195
eFBIG           =195,196
eFTYPE          =196,197
eHOSTDOWN       =197,198
eHOSTUNREACH    =198,199
eIDRM           =199,200
eILSEQ          =200,201
eINPROGRESS     =201,202
eINTR           =202,203
eINVAL          =203,204
eIO             =204,205
eISCONN         =205,206
eISDIR          =206,207
eLOOP           =207,208
eMFILE          =208,209
eMLINK          =209,210
eMSGSIZE        =210,211
eMULTIHOP       =211,212
eNAMETOOLONG    =212,213
eNETDOWN        =213,214
eNETRESET       =214,215
eNETUNREACH     =215,216
eNFILE          =216,217
eNOBUFS         =217,218
eNODATA         =218,219
eNODEV          =219,220
eNOENT          =220,221
eNOEXEC         =221,222
eNOLCK          =222,223
eNOLINK         =223,224
eNOMEM          =224,225
eNOMSG          =225,226
eNONET          =226,227
eNOPROTOOPT     =227,228
eNOSPC          =228,229
eNOSR           =229,230
eNOSTR          =230,231
eNOSYS          =231,232
eNOTBLK         =232,233
eNOTCONN        =233,234
eNOTDIR         =234,235
eNOTEMPTY       =235,236
eNOTSOCK        =236,237
eNOTTY          =237,238
eNXIO           =238,239
eOPNOTSUPP      =239,240
ePERM           =240,241
ePFNOSUPPORT    =241,242
ePIPE           =242,243
ePROCLIM        =243,244
ePROCUNAVAIL    =244,245
ePROGMISMATCH   =245,246
ePROGUNAVAIL    =246,247
ePROTO          =247,248
ePROTONOSUPPORT =248,249
ePROTOTYPE      =249,250
eRANGE          =250,251
eREMCHG         =251,252
eREMOTE         =252,253
eROFS           =253,254
eRPCMISMATCH    =254,255
eRREMOTE        =255,256
eSHUTDOWN       =256,257
eSOCKTNOSUPPORT =257,258
eSPIPE          =258,259
eSRCH           =259,260
eSRMNT          =260,261
eSTALE          =261,262
eTIME           =262,263
eTIMEDOUT       =263,264
eTOOMANYREFS    =264,265
eTXTBSY         =265,266
eUSERS          =266,267
eWOULDBLOCK     =267,268
eXDEV           =268,269
isValidErrno               ::275,276
isValidErrno (Errno279,280
getErrno ::287,288
getErrno =293,294
resetErrno ::302,303
resetErrno =306,307
throwErrno     ::317,318
throwErrno loc319,320
throwErrnoIf    ::331,332
throwErrnoIf pred336,337
throwErrnoIf_   ::344,345
throwErrnoIf_ pred345,346
throwErrnoIfRetry            ::351,352
throwErrnoIfRetry pred352,353
throwErrnoIfRetryMayBlock pred375,376
throwErrnoIfRetry_            ::391,392
throwErrnoIfRetry_ pred392,393
throwErrnoIfRetryMayBlock_ ::396,397
throwErrnoIfRetryMayBlock_ pred397,398
throwErrnoIfMinus1 ::403,404
throwErrnoIfMinus1  =404,405
throwErrnoIfMinus1_ ::408,409
throwErrnoIfMinus1_  =409,410
throwErrnoIfMinus1Retry ::415,416
throwErrnoIfMinus1Retry  =416,417
throwErrnoIfMinus1Retry_ ::420,421
throwErrnoIfMinus1Retry_  =421,422
throwErrnoIfMinus1RetryMayBlock ::425,426
throwErrnoIfMinus1RetryMayBlock  =427,428
throwErrnoIfMinus1RetryMayBlock_ ::431,432
throwErrnoIfMinus1RetryMayBlock_  =433,434
throwErrnoIfNull ::438,439
throwErrnoIfNull  =439,440
throwErrnoIfNullRetry ::445,446
throwErrnoIfNullRetry  =446,447
throwErrnoIfNullRetryMayBlock ::450,451
throwErrnoIfNullRetryMayBlock  =451,452
throwErrnoPath ::455,456
throwErrnoPath loc456,457
throwErrnoPathIf ::464,465
throwErrnoPathIf pred465,466
throwErrnoPathIf_ ::473,474
throwErrnoPathIf_ pred474,475
throwErrnoPathIfNull ::479,480
throwErrnoPathIfNull  =480,481
throwErrnoPathIfMinus1 ::485,486
throwErrnoPathIfMinus1 =486,487
throwErrnoPathIfMinus1_ ::491,492
throwErrnoPathIfMinus1_  =492,493
errnoToIOError  ::501,502
errnoToIOError loc506,507

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/C/String.hs,1961
module Foreign.C.String (25,26
type CString    =132,133
type CStringLen =136,137
peekCString    ::146,147
peekCString =148,149
peekCStringLen           ::155,156
peekCStringLen =157,158
newCString ::170,171
newCString =172,173
newCStringLen     ::184,185
newCStringLen =186,187
withCString ::200,201
withCString =202,203
withCStringLen         ::214,215
withCStringLen =216,217
charIsRepresentable ::227,228
charIsRepresentable c228,229
charIsRepresentable ::232,233
castCCharToChar ::243,244
castCCharToChar ch244,245
castCharToCChar ::248,249
castCharToCChar ch249,250
castCUCharToChar ::253,254
castCUCharToChar ch254,255
castCharToCUChar ::258,259
castCharToCUChar ch259,260
castCSCharToChar ::263,264
castCSCharToChar ch264,265
castCharToCSChar ::268,269
castCharToCSChar ch269,270
peekCAString    ::273,274
peekCAString cp275,276
peekCAStringLen           ::291,292
peekCAStringLen (cp,293,294
newCAString ::318,319
newCAString  =320,321
newCAStringLen     ::338,339
newCAStringLen str340,341
withCAString ::362,363
withCAString  =364,365
withCAStringLen         ::383,384
withCAStringLen str384,385
nUL ::404,405
nUL  =405,406
newArrayLen        ::408,409
newArrayLen xs409,410
cCharsToChars ::416,417
cCharsToChars xs417,418
charsToCChars ::421,422
charsToCChars xs422,423
type CWString    =433,434
type CWStringLen =438,439
peekCWString    ::442,443
peekCWString cp443,444
peekCWStringLen           ::449,450
peekCWStringLen (cp,450,451
newCWString ::462,463
newCWString  =463,464
newCWStringLen     ::472,473
newCWStringLen str473,474
withCWString ::484,485
withCWString  =485,486
withCWStringLen         ::495,496
withCWStringLen str496,497
wNUL ::502,503
wNUL =503,504
cWcharsToChars ::505,506
charsToCWchars ::506,507
cWcharsToChars =513,514
charsToCWchars =521,522
castCWcharToChar ::537,538
castCWcharToChar ch538,539
castCharToCWchar ::540,541
castCharToCWchar ch541,542

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/C/Types.hs,2007
module Foreign.C.Types27,28
"fromIntegral/a->CChar"   fromIntegral135,136
"fromIntegral/a->CSChar"  fromIntegral136,137
"fromIntegral/a->CUChar"  fromIntegral137,138
"fromIntegral/a->CShort"  fromIntegral138,139
"fromIntegral/a->CUShort" fromIntegral139,140
"fromIntegral/a->CInt"    fromIntegral140,141
"fromIntegral/a->CUInt"   fromIntegral141,142
"fromIntegral/a->CLong"   fromIntegral142,143
"fromIntegral/a->CULong"  fromIntegral143,144
"fromIntegral/a->CLLong"  fromIntegral144,145
"fromIntegral/a->CULLong" fromIntegral145,146
"fromIntegral/CChar->a"   fromIntegral147,148
"fromIntegral/CSChar->a"  fromIntegral148,149
"fromIntegral/CUChar->a"  fromIntegral149,150
"fromIntegral/CShort->a"  fromIntegral150,151
"fromIntegral/CUShort->a" fromIntegral151,152
"fromIntegral/CInt->a"    fromIntegral152,153
"fromIntegral/CUInt->a"   fromIntegral153,154
"fromIntegral/CLong->a"   fromIntegral154,155
"fromIntegral/CULong->a"  fromIntegral155,156
"fromIntegral/CLLong->a"  fromIntegral156,157
"fromIntegral/CULLong->a" fromIntegral157,158
"realToFrac/a->CFloat"    realToFrac172,173
"realToFrac/a->CDouble"   realToFrac173,174
"realToFrac/CFloat->a"    realToFrac175,176
"realToFrac/CDouble->a"   realToFrac176,177
"fromIntegral/a->CPtrdiff"   fromIntegral193,194
"fromIntegral/a->CSize"      fromIntegral194,195
"fromIntegral/a->CWchar"     fromIntegral195,196
"fromIntegral/a->CSigAtomic" fromIntegral196,197
"fromIntegral/CPtrdiff->a"   fromIntegral198,199
"fromIntegral/CSize->a"      fromIntegral199,200
"fromIntegral/CWchar->a"     fromIntegral200,201
"fromIntegral/CSigAtomic->a" fromIntegral201,202
data CFile =215,216
data CFile = CFile215,216
data CFpos =217,218
data CFpos = CFpos217,218
data CJmpBuf =219,220
data CJmpBuf = CJmpBuf219,220
"fromIntegral/a->CIntPtr"  fromIntegral227,228
"fromIntegral/a->CUIntPtr" fromIntegral228,229
"fromIntegral/a->CIntMax"  fromIntegral229,230
"fromIntegral/a->CUIntMax" fromIntegral230,231
instance Bits296,297

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/C.hs,23
module Foreign.C17,18

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Concurrent.hs,140
module Foreign.Concurrent17,18
newForeignPtr ::37,38
newForeignPtr =44,45
addForeignPtrFinalizer ::46,47
addForeignPtrFinalizer =51,52

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/ForeignPtr/Imp.hs,487
module Foreign.ForeignPtr.Imp20,21
instance Eq91,92
newForeignPtr ::103,104
newForeignPtr finalizer109,110
withForeignPtr ::114,115
withForeignPtr fo134,135
newForeignPtrEnv ::145,146
newForeignPtrEnv finalizer147,148
mallocForeignPtr ::154,155
mallocForeignPtr =155,156
mallocForeignPtrBytes ::159,160
mallocForeignPtrBytes n160,161
mallocForeignPtrArray ::169,170
mallocForeignPtrArray  =170,171
mallocForeignPtrArray0      ::179,180
mallocForeignPtrArray0 size180,181

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/ForeignPtr/Safe.hs,39
module Foreign.ForeignPtr.Safe (21,22

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/ForeignPtr/Unsafe.hs,41
module Foreign.ForeignPtr.Unsafe (21,22

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/ForeignPtr.hs,95
module Foreign.ForeignPtr (20,21
unsafeForeignPtrToPtr ::61,62
unsafeForeignPtrToPtr =62,63

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Marshal/Alloc.hs,506
module Foreign.Marshal.Alloc (45,46
malloc ::103,104
malloc  =104,105
mallocBytes      ::116,117
mallocBytes size117,118
alloca ::127,128
alloca  =128,129
allocaBytes ::142,143
allocaBytes (I#143,144
allocaBytesAligned ::153,154
allocaBytesAligned (I#154,155
allocaBytes      ::164,165
allocaBytesAligned ::167,168
realloc ::181,182
realloc  =182,183
reallocBytes          ::202,203
reallocBytes ptr203,204
free ::212,213
free  =213,214
failWhenNULL ::222,223
failWhenNULL name223,224

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Marshal/Array.hs,1034
module Foreign.Marshal.Array (18,19
mallocArray ::86,87
mallocArray  =87,88
mallocArray0      ::95,96
mallocArray0 size96,97
allocaArray ::101,102
allocaArray  =102,103
allocaArray0      ::111,112
allocaArray0 size112,113
reallocArray ::119,120
reallocArray  =120,121
reallocArray0          ::127,128
reallocArray0 ptr128,129
peekArray          ::137,138
peekArray size138,139
peekArray0            ::146,147
peekArray0 marker147,148
pokeArray ::153,154
pokeArray ptr155,156
pokeArray0 ::165,166
pokeArray0 marker167,168
newArray      ::184,185
newArray vals185,186
newArray0             ::193,194
newArray0 marker194,195
withArray ::202,203
withArray vals203,204
withArrayLen ::208,209
withArrayLen vals209,210
withArray0 ::219,220
withArray0 marker220,221
withArrayLen0 ::224,225
withArrayLen0 marker225,226
copyArray ::240,241
copyArray  =241,242
moveArray ::249,250
moveArray  =250,251
lengthArray0            ::261,262
lengthArray0 marker262,263
advancePtr ::274,275
advancePtr  =275,276

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Marshal/Error.hs,284
module Foreign.Marshal.Error (18,19
throwIf ::51,52
throwIf pred56,57
throwIf_                 ::63,64
throwIf_ pred64,65
throwIfNeg ::68,69
throwIfNeg  =69,70
throwIfNeg_ ::73,74
throwIfNeg_  =74,75
throwIfNull ::78,79
throwIfNull  =79,80
void     ::83,84
void act84,85

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Marshal/Pool.hs,817
module Foreign.Marshal.Pool (22,23
newtype Pool =80,81
newtype Pool = Pool (IORef80,81
newPool ::84,85
newPool =85,86
freePool ::90,91
freePool (Pool91,92
withPool ::98,99
withPool act100,101
pooledMalloc ::118,119
pooledMalloc =119,120
pooledMallocBytes ::126,127
pooledMallocBytes (Pool127,128
pooledRealloc ::136,137
pooledRealloc =137,138
pooledReallocBytes ::144,145
pooledReallocBytes (Pool145,146
pooledMallocArray ::156,157
pooledMallocArray =157,158
pooledMallocArray0 ::165,166
pooledMallocArray0 pool166,167
pooledReallocArray ::171,172
pooledReallocArray =172,173
pooledReallocArray0 ::179,180
pooledReallocArray0 pool180,181
pooledNew ::188,189
pooledNew pool189,190
pooledNewArray ::197,198
pooledNewArray pool198,199
pooledNewArray0 ::206,207
pooledNewArray0 pool207,208

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Marshal/Safe.hs,34
module Foreign.Marshal.Safe19,20

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Marshal/Unsafe.hs,89
module Foreign.Marshal.Unsafe (17,18
unsafeLocalState ::46,47
unsafeLocalState =47,48

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Marshal/Utils.hs,495
module Foreign.Marshal.Utils (17,18
new     ::77,78
new val78,79
with       ::91,92
with val92,93
fromBool       ::104,105
fromBool False105,106
toBool ::110,111
toBool  =111,112
maybeNew ::121,122
maybeNew  =123,124
maybeWith ::128,129
maybeWith  =130,131
maybePeek                           ::135,136
maybePeek peek136,137
withMany ::146,147
withMany _150,151
copyBytes               ::161,162
copyBytes dest162,163
moveBytes               ::168,169
moveBytes dest169,170

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Marshal.hs,80
module Foreign.Marshal17,18
unsafeLocalState ::55,56
unsafeLocalState =56,57

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Ptr.hs,230
module Foreign.Ptr (27,28
ptrToWordPtr ::125,126
ptrToWordPtr (Ptr126,127
wordPtrToPtr ::129,130
wordPtrToPtr (WordPtr130,131
ptrToIntPtr ::133,134
ptrToIntPtr (Ptr134,135
intPtrToPtr ::137,138
intPtrToPtr (IntPtr138,139

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Safe.hs,26
module Foreign.Safe20,21

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/StablePtr.hs,31
module Foreign.StablePtr19,20

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign/Storable.hs,585
module Foreign.Storable23,24
class Storable a101,102
   sizeOf      ::103,104
   alignment   ::107,108
   peekElemOff ::112,113
   pokeElemOff ::126,127
   peekByteOff ::133,134
   pokeByteOff ::139,140
   peek        ::145,146
   poke        ::155,156
   peekElemOff =161,162
   pokeElemOff ptr167,168
   peekByteOff ptr169,170
   pokeByteOff ptr170,171
   peek ptr172,173
   poke ptr173,174
sizeOfPtr ::176,177
sizeOfPtr px177,178
instance Storable182,183
peekFingerprint ::261,262
peekFingerprint p0262,263
pokeFingerprint ::274,275
pokeFingerprint p0275,276

/Users/ismael/.haskdogs/base-4.6.0.1/Foreign.hs,70
module Foreign18,19
unsafePerformIO ::52,53
unsafePerformIO =53,54

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Char.hs,83
module GHC.Char (chr)3,4
chr ::9,10
 | int2Word# i# `leWord#` 0x10FFFF## =11,12

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Conc/IO.hs,344
module GHC.Conc.IO32,33
ensureIOManagerIsRunning ::71,72
ensureIOManagerIsRunning =73,74
threadWaitRead ::84,85
threadWaitRead fd85,86
threadWaitWrite ::100,101
threadWaitWrite fd101,102
closeFdWith ::118,119
closeFdWith close121,122
threadDelay ::134,135
threadDelay time135,136
registerDelay ::149,150
registerDelay usecs150,151

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Conc/Signal.hs,275
module GHC.Conc.Signal3,4
type Signal =30,31
maxSig ::32,33
maxSig =33,34
type HandlerFun =35,36
signal_handlers ::40,41
signal_handlers =41,42
setHandler ::50,51
setHandler sig52,53
runHandlers ::61,62
runHandlers p_info62,63
sharedCAF ::80,81
sharedCAF a81,82

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Conc/Windows.hs,1818
module GHC.Conc.Windows21,22
asyncRead ::76,77
asyncRead  (I#77,78
asyncWrite ::81,82
asyncWrite  (I#82,83
asyncDoProc ::86,87
asyncDoProc (FunPtr87,88
asyncReadBA ::97,98
asyncReadBA fd98,99
asyncWriteBA ::101,102
asyncWriteBA fd102,103
threadDelay ::115,116
threadDelay time116,117
registerDelay ::126,127
registerDelay usecs127,128
waitForDelayEvent ::133,134
waitForDelayEvent usecs134,135
waitForDelayEventSTM ::142,143
waitForDelayEventSTM usecs143,144
calculateTarget ::150,151
calculateTarget usecs151,152
data DelayReq155,156
  = Delay    {-#156,157
  | DelaySTM {-#157,158
pendingDelays ::160,161
pendingDelays =161,162
ioManagerThread ::169,170
ioManagerThread =170,171
ensureIOManagerIsRunning ::177,178
ensureIOManagerIsRunning178,179
startIOManagerThread ::182,183
startIOManagerThread =183,184
insertDelay ::195,196
insertDelay d196,197
delayTime ::201,202
delayTime (Delay202,203
type USecs =205,206
type NSecs =206,207
getMonotonicUSec ::211,212
getMonotonicUSec =212,213
prodding ::215,216
prodding =216,217
prodServiceThread ::223,224
prodServiceThread =224,225
ioManager ::234,235
ioManager =235,236
service_loop ::239,240
service_loop wakeup243,244
service_cont ::266,267
service_cont wakeup267,268
io_MANAGER_WAKEUP, io_MANAGER_DIE :: Word32273,274
io_MANAGER_WAKEUP, io_MANAGER_DIE273,274
io_MANAGER_WAKEUP =274,275
io_MANAGER_DIE    =275,276
data ConsoleEvent277,278
 = ControlC278,279
 | Break279,280
 | Close280,281
 | Logoff282,283
 | Shutdown283,284
start_console_handler ::286,287
start_console_handler r287,288
toWin32ConsoleEvent ::294,295
toWin32ConsoleEvent ev295,296
win32ConsoleHandler ::304,305
win32ConsoleHandler =305,306
wakeupIOManager ::307,308
wakeupIOManager =308,309
getDelay ::313,314
getDelay _314,315

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/ConsoleHandler.hs,213
module GHC.ConsoleHandler19,20
data Handler50,51
 = Default51,52
 | Ignore52,53
 | Catch (ConsoleEvent53,54
installHandler ::74,75
installHandler handler75,76
flushConsole ::143,144
flushConsole h144,145

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Constants.hs,31
module GHC.Constants where3,4

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Desugar.hs,199
module GHC.Desugar ((>>>),22,23
(>>>) :: forall29,30
f >>>34,35
data AnnotationWrapper =37,38
data AnnotationWrapper = forall a.37,38
toAnnotationWrapper ::39,40
toAnnotationWrapper what40,41

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Environment.hs,103
module GHC.Environment (getFullArgs)3,4
getFullArgs ::22,23
getFullArgs =23,24
getFullArgs ::48,49

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Event/Array.hs,1129
module GHC.Event.Array3,4
if (_k_)49,50
newtype Array a55,56
newtype Array a = Array (IORef55,56
data AC a58,59
data AC a = AC58,59
empty ::63,64
empty =64,65
allocArray ::68,69
allocArray n69,70
reallocArray ::74,75
reallocArray p75,76
new ::88,89
new c89,90
duplicate ::95,96
duplicate a96,97
length ::108,109
length (Array109,110
capacity ::113,114
capacity (Array114,115
unsafeRead ::118,119
unsafeRead (Array119,120
unsafeWrite ::125,126
unsafeWrite (Array126,127
unsafeWrite' ::130,131
unsafeWrite' (AC131,132
unsafeLoad ::136,137
unsafeLoad (Array137,138
ensureCapacity ::143,144
ensureCapacity (Array144,145
ensureCapacity' ::150,151
ensureCapacity' ac@(AC151,152
useAsPtr ::161,162
useAsPtr (Array162,163
snoc ::166,167
snoc (Array167,168
clear ::174,175
clear (Array175,176
forM_ ::180,181
forM_ ary181,182
loop ::195,196
loop ary196,197
findIndex ::212,213
findIndex =213,214
concat ::230,231
concat (Array231,232
copy ::238,239
copy (Array239,240
copy' ::246,247
copy' d247,248
removeAt ::266,267
removeAt a267,268
firstPowerOf2 ::292,293
firstPowerOf2 !n293,294

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Event/Control.hs,879
module GHC.Event.Control8,9
data ControlMessage =55,56
data ControlMessage = CMsgWakeup55,56
                    | CMsgDie56,57
                    | CMsgSignal {-#57,58
data Control =62,63
data Control = W {62,63
      controlReadFd  ::63,64
    , controlWriteFd ::64,65
    , controlEventFd ::66,67
    , wakeupReadFd   ::68,69
    , wakeupWriteFd  ::69,70
wakeupReadFd ::74,75
wakeupReadFd =75,76
setNonBlock ::79,80
setNonBlock fd80,81
newControl ::89,90
newControl =90,91
closeControl ::123,124
closeControl w124,125
io_MANAGER_WAKEUP, io_MANAGER_DIE :: Word8135,136
io_MANAGER_WAKEUP, io_MANAGER_DIE135,136
io_MANAGER_WAKEUP =136,137
io_MANAGER_DIE    =137,138
readControlMessage ::142,143
readControlMessage ctrl143,144
sendWakeup ::175,176
sendWakeup c177,178
sendDie ::192,193
sendDie c193,194
sendMessage ::196,197
sendMessage fd197,198

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Event/Internal.hs,843
module GHC.Event.Internal3,4
newtype Event =34,35
newtype Event = Event Int34,35
evtNothing ::37,38
evtNothing =38,39
evtRead ::42,43
evtRead =43,44
evtWrite ::47,48
evtWrite =48,49
evtClose ::52,53
evtClose =53,54
eventIs ::56,57
eventIs (Event57,58
instance Show59,60
evtCombine ::72,73
evtCombine (Event73,74
evtConcat ::76,77
evtConcat =77,78
data Timeout =81,82
data Timeout = Timeout {-#81,82
             | Forever82,83
data Backend =86,87
data Backend = forall a.86,87
      _beState ::87,88
    , _bePoll ::91,92
    , _beModifyFd ::98,99
    , _beDelete ::104,105
backend ::107,108
backend bPoll112,113
poll ::115,116
poll (Backend116,117
modifyFd ::119,120
modifyFd (Backend120,121
delete ::123,124
delete (Backend124,125
throwErrnoIfMinus1NoRetry ::132,133
throwErrnoIfMinus1NoRetry loc133,134

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Event/IntMap.hs,1197
module GHC.Event.IntMap44,45
type Nat =85,86
natFromInt ::87,88
natFromInt i88,89
intFromNat ::90,91
intFromNat w91,92
shiftRL ::93,94
shiftRL (W#96,97
data IntMap a105,106
data IntMap a = Nil105,106
              | Tip {-#106,107
              | Bin {-#107,108
type Prefix =112,113
type Mask   =113,114
type Key    =114,115
lookup ::121,122
lookup k122,123
lookupN ::124,125
lookupN k125,126
member ::140,141
member k141,142
empty ::153,154
empty =154,155
insertWith ::165,166
insertWith f166,167
delete ::187,188
delete k188,189
updateWith ::200,201
updateWith f201,202
foldWithKey ::223,224
foldWithKey f224,225
toList ::232,233
toList t233,234
foldr ::236,237
foldr f237,238
foldr' ::244,245
foldr' f245,246
keys  ::256,257
keys m257,258
instance Eq263,264
equal ::267,268
equal (Bin268,269
nequal ::275,276
nequal (Bin276,277
join ::290,291
join p1291,292
bin ::299,300
bin _300,301
zero ::307,308
zero i308,309
nomatch ::310,311
nomatch i311,312
mask ::313,314
mask i314,315
zeroN ::316,317
zeroN i317,318
maskW ::322,323
maskW i323,324
branchMask ::325,326
branchMask p1326,327
highestBitMask ::366,367
highestBitMask x0367,368

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Event/Manager.hs,1881
module GHC.Event.Manager10,11
import Control.Monad54,55
data FdData =89,90
data FdData = FdData {89,90
      fdKey       ::90,91
    , fdEvents    ::91,92
    , _fdCallback ::92,93
data FdKey =96,97
data FdKey = FdKey {96,97
      keyFd     ::97,98
    , keyUnique ::98,99
type IOCallback =102,103
newtype TimeoutKey   =105,106
newtype TimeoutKey   = TK Unique105,106
type TimeoutCallback =109,110
data State =111,112
data State = Created111,112
           | Running112,113
           | Dying113,114
           | Finished114,115
type TimeoutQueue =118,119
type TimeoutEdit =147,148
data EventManager =150,151
data EventManager = EventManager150,151
    { emBackend      ::151,152
    , emFds          ::152,153
    , emTimeouts     ::153,154
    , emState        ::154,155
    , emUniqueSource ::155,156
    , emControl      ::156,157
handleControlEvent ::162,163
handleControlEvent mgr163,164
newDefaultBackend ::170,171
newDefaultBackend =172,173
new ::182,183
new =183,184
newWith ::185,186
newWith be186,187
shutdown ::209,210
shutdown mgr210,211
finished ::214,215
finished mgr215,216
cleanup ::217,218
cleanup EventManager{..}218,219
loop ::231,232
loop mgr@EventManager{..}232,233
step ::246,247
step mgr@EventManager{..}247,248
registerFd_ ::276,277
registerFd_ EventManager{..}278,279
registerFd ::296,297
registerFd mgr297,298
wakeManager ::304,305
wakeManager mgr305,306
eventsOf ::307,308
eventsOf =308,309
pairEvents ::310,311
pairEvents prev311,312
unregisterFd_ ::320,321
unregisterFd_ EventManager{..}321,322
unregisterFd ::336,337
unregisterFd mgr337,338
closeFd ::342,343
closeFd mgr343,344
registerTimeout ::360,361
registerTimeout mgr361,362
unregisterTimeout ::379,380
unregisterTimeout mgr380,381
updateTimeout ::387,388
updateTimeout mgr388,389
onFdEvent ::400,401
onFdEvent mgr401,402

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Event/PSQ.hs,2668
module GHC.Event.PSQ51,52
data Elem a97,98
data Elem a = E97,98
    { key   ::98,99
    , prio  ::99,100
    , value ::100,101
type Prio =106,107
type Key =107,108
data PSQ a109,110
data PSQ a = Void109,110
           | Winner {-#110,111
size ::116,117
size Void117,118
null ::121,122
null Void122,123
lookup ::127,128
lookup k128,129
empty ::140,141
empty =141,142
singleton ::144,145
singleton k145,146
insert ::153,154
insert k154,155
delete ::173,174
delete k174,175
adjust ::189,190
adjust f190,191
fromList ::211,212
fromList =212,213
toList ::215,216
toList =216,217
toAscList ::219,220
toAscList q220,221
toAscLists ::222,223
toAscLists q223,224
toDescList ::229,230
toDescList q230,231
toDescLists ::232,233
toDescLists q233,234
findMin ::242,243
findMin Void243,244
deleteMin ::248,249
deleteMin Void249,250
minView ::254,255
minView Void255,256
secondBest ::258,259
secondBest Start259,260
atMost ::265,266
atMost pt266,267
atMosts ::269,270
atMosts !pt270,271
type Size =287,288
data LTree a289,290
data LTree a = Start289,290
             | LLoser {-#290,291
             | RLoser {-#295,296
size' ::302,303
size' Start303,304
left, right :: LTree307,308
left, right307,308
left Start309,310
right Start313,314
maxKey ::317,318
maxKey Void318,319
lloser, rloser :: Key321,322
lloser, rloser321,322
lloser k322,323
rloser k323,324
omega ::329,330
omega =330,331
lbalance, rbalance :: Key332,333
lbalance, rbalance332,333
lbalance k334,335
rbalance k340,341
lbalanceLeft ::346,347
lbalanceLeft  k347,348
lbalanceRight ::351,352
lbalanceRight k352,353
rbalanceLeft ::356,357
rbalanceLeft  k357,358
rbalanceRight ::361,362
rbalanceRight k362,363
lsingleLeft ::366,367
lsingleLeft k1367,368
rsingleLeft ::374,375
rsingleLeft k1375,376
lsingleRight ::381,382
lsingleRight k1382,383
rsingleRight ::388,389
rsingleRight k1389,390
ldoubleLeft ::396,397
ldoubleLeft k1397,398
ldoubleRight ::403,404
ldoubleRight k1404,405
rdoubleLeft ::410,411
rdoubleLeft k1411,412
rdoubleRight ::417,418
rdoubleRight k1418,419
play ::427,428
Void `play` t' =428,429
unsafePlay ::437,438
Void `unsafePlay` t' =438,439
data TourView a445,446
data TourView a = Null445,446
                | Single {-#446,447
                | (PSQ a)447,448
tourView ::449,450
tourView Void450,451
moduleError ::460,461
moduleError fun461,462
newtype Sequ a467,468
newtype Sequ a = Sequ ([a]467,468
emptySequ ::469,470
emptySequ =470,471
singleSequ ::472,473
singleSequ a473,474
(<>) :: Sequ475,476
Sequ x1476,477
seqToList ::479,480
seqToList (Sequ480,481
instance Show482,483

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Event/Thread.hs,589
module GHC.Event.Thread3,4
threadDelay ::37,38
threadDelay usecs38,39
registerDelay ::47,48
registerDelay usecs48,49
threadWaitRead ::60,61
threadWaitRead =61,62
threadWaitWrite ::70,71
threadWaitWrite =71,72
closeFdWith ::79,80
closeFdWith close82,83
threadWait ::86,87
threadWait evt87,88
getSystemEventManager ::100,101
getSystemEventManager =101,102
eventManager ::106,107
eventManager =107,108
ioManager ::116,117
ioManager =117,118
ensureIOManagerIsRunning ::121,122
ensureIOManagerIsRunning122,123
startIOManagerThread ::127,128
startIOManagerThread =128,129

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Event/Unique.hs,289
module GHC.Event.Unique2,3
newtype UniqueSource =23,24
newtype UniqueSource = US (TVar23,24
newtype Unique =25,26
newtype Unique = Unique {25,26
newtype Unique = Unique { asInt64 ::25,26
instance Show28,29
newSource ::31,32
newSource =32,33
newUnique ::34,35
newUnique (US35,36

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Event.hs,23
module GHC.Event10,11

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Exts.hs,406
module GHC.Exts18,19
maxTupleSize ::78,79
maxTupleSize =79,80
the ::83,84
the (x:xs)84,85
sortWith ::91,92
sortWith f92,93
groupWith ::98,99
groupWith f99,100
groupByFB ::101,102
groupByFB c102,103
traceEvent ::111,112
traceEvent =112,113
data SpecConstrAnnotation =129,130
data SpecConstrAnnotation = NoSpecConstr |129,130
data SpecConstrAnnotation = NoSpecConstr | ForceSpecConstr129,130

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Fingerprint/Type.hs,118
module GHC.Fingerprint.Type (Fingerprint(..))11,12
data Fingerprint =18,19
data Fingerprint = Fingerprint {-#18,19

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Fingerprint.hs,268
module GHC.Fingerprint (16,17
fingerprint0 ::39,40
fingerprint0 =40,41
fingerprintFingerprints ::42,43
fingerprintFingerprints fs43,44
fingerprintData ::47,48
fingerprintData buf48,49
fingerprintString ::57,58
fingerprintString str58,59
data MD5Context69,70

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Float/ConversionUtils.hs,383
module GHC.Float.ConversionUtils (22,23
toByte64# ::36,37
toByte64# i37,38
elim64# ::40,41
elim64# n41,42
elim64# ::52,53
elimZerosInteger ::58,59
elimZerosInteger m59,60
elimZerosInt# ::61,62
elimZerosInt# n62,63
zeroCount ::69,70
zeroCount i70,71
toByte# ::74,75
toByte# i75,76
data BA =78,79
data BA = BA ByteArray#78,79
zeroCountArr ::81,82
zeroCountArr =82,83

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Float/RealFracMethods.hs,1542
module GHC.Float.RealFracMethods25,26
uncheckedIShiftRA64# ::79,80
uncheckedIShiftRA64# =80,81
uncheckedIShiftL64# ::82,83
uncheckedIShiftL64# =83,84
properFractionFloatInt ::99,100
properFractionFloatInt (F#100,101
floorFloatInt ::108,109
floorFloatInt (F#109,110
ceilingFloatInt ::114,115
ceilingFloatInt (F#115,116
roundFloatInt ::120,121
roundFloatInt x121,122
properFractionFloatInteger ::135,136
properFractionFloatInteger v@(F#136,137
truncateFloatInteger ::155,156
truncateFloatInteger x156,157
floorFloatInteger ::163,164
floorFloatInteger (F#164,165
ceilingFloatInteger ::177,178
ceilingFloatInteger (F#178,179
roundFloatInteger ::182,183
roundFloatInteger x183,184
properFractionDoubleInt ::195,196
properFractionDoubleInt (D#196,197
floorDoubleInt ::204,205
floorDoubleInt (D#205,206
ceilingDoubleInt ::210,211
ceilingDoubleInt (D#211,212
roundDoubleInt ::216,217
roundDoubleInt x217,218
properFractionDoubleInteger ::233,234
properFractionDoubleInteger v@(D#234,235
truncateDoubleInteger ::259,260
truncateDoubleInteger x260,261
floorDoubleInteger ::267,268
floorDoubleInteger (D#268,269
ceilingDoubleInteger ::280,281
ceilingDoubleInteger (D#281,282
roundDoubleInteger ::285,286
roundDoubleInteger x286,287
double2Int ::292,293
double2Int (D#293,294
int2Double ::295,296
int2Double (I#296,297
float2Int ::298,299
float2Int (F#299,300
int2Float ::301,302
int2Float (I#302,303
double2Integer ::312,313
double2Integer (D#313,314
float2Integer ::322,323
float2Integer (F#323,324

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Foreign.hs,884
module GHC.Foreign (17,18
c_DEBUG_DUMP ::68,69
c_DEBUG_DUMP =69,70
putDebugMsg ::71,72
putDebugMsg |72,73
type CString    =77,78
type CStringLen =78,79
peekCString    ::85,86
peekCString enc86,87
peekCStringLen           ::92,93
peekCStringLen =93,94
newCString ::103,104
newCString enc104,105
newCStringLen     ::113,114
newCStringLen enc114,115
withCString ::125,126
withCString enc126,127
withCStringLen         ::135,136
withCStringLen enc136,137
charIsRepresentable ::144,145
charIsRepresentable enc145,146
nUL ::151,152
nUL  =152,153
cCharSize ::155,156
cCharSize =156,157
peekEncodedCString ::160,161
peekEncodedCString (TextEncoding163,164
withEncodedCString ::189,190
withEncodedCString (TextEncoding194,195
newEncodedCString ::210,211
newEncodedCString (TextEncoding214,215
tryFillBufferAndCall ::234,235
tryFillBufferAndCall encoder236,237

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/ForeignPtr.hs,1827
module GHC.ForeignPtr25,26
data ForeignPtr a78,79
data ForeignPtr a = ForeignPtr Addr#78,79
data Finalizers91,92
  = NoFinalizers92,93
  | CFinalizers93,94
  | HaskellFinalizers94,95
data ForeignPtrContents97,98
  = PlainForeignPtr !(IORef98,99
  | MallocPtr      (MutableByteArray#99,100
  | PlainPtr       (MutableByteArray#100,101
instance Eq102,103
type FinalizerPtr a116,117
type FinalizerPtr a        =116,117
type FinalizerEnvPtr env117,118
type FinalizerEnvPtr env a117,118
newConcForeignPtr ::119,120
newConcForeignPtr p136,137
mallocForeignPtr ::141,142
mallocForeignPtr =160,161
mallocForeignPtrBytes ::176,177
mallocForeignPtrBytes size177,178
mallocForeignPtrAlignedBytes ::190,191
mallocForeignPtrAlignedBytes size191,192
mallocPlainForeignPtr ::214,215
mallocPlainForeignPtr =215,216
mallocPlainForeignPtrBytes ::231,232
mallocPlainForeignPtrBytes size232,233
mallocPlainForeignPtrAlignedBytes ::244,245
mallocPlainForeignPtrAlignedBytes size245,246
addForeignPtrFinalizer ::253,254
addForeignPtrFinalizer (FunPtr257,258
addForeignPtrFinalizerEnv ::269,270
addForeignPtrFinalizerEnv (FunPtr275,276
finalizeForeign ::287,288
finalizeForeign w288,289
addForeignPtrConcFinalizer ::293,294
addForeignPtrConcFinalizer (ForeignPtr308,309
addForeignPtrConcFinalizer_ ::311,312
addForeignPtrConcFinalizer_ (PlainForeignPtr312,313
noMixing ::331,332
noMixing ftype0333,334
foreignPtrFinalizer ::343,344
foreignPtrFinalizer r344,345
newForeignPtr_ ::348,349
newForeignPtr_ (Ptr351,352
touchForeignPtr ::355,356
touchForeignPtr (ForeignPtr380,381
touch ::382,383
touch r383,384
unsafeForeignPtrToPtr ::385,386
unsafeForeignPtrToPtr (ForeignPtr400,401
castForeignPtr ::402,403
castForeignPtr f405,406
finalizeForeignPtr ::409,410
finalizeForeignPtr (ForeignPtr410,411

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Generics.hs,1969
module GHC.Generics  (10,11
data V1 p43,44
data U1 p46,47
data U1 p = U146,47
newtype Par1 p49,50
newtype Par1 p = Par1 {49,50
newtype Par1 p = Par1 { unPar1 ::49,50
newtype Rec1 f53,54
newtype Rec1 f p = Rec1 {53,54
newtype Rec1 f p = Rec1 { unRec1 ::53,54
newtype K1 i56,57
newtype K1 i c p = K1 {56,57
newtype K1 i c p = K1 { unK1 ::56,57
newtype M1 i59,60
newtype M1 i c f p = M1 {59,60
newtype M1 i c f p = M1 { unM1 ::59,60
data (:+:) f63,64
data (:+:) f g p = L1 (f p) |63,64
data (:+:) f g p = L1 (f p) | R1 (g p)63,64
data (:*:) f67,68
data (:*:) f g p = f p :*: g67,68
newtype (:.:) f71,72
newtype (:.:) f g p = Comp1 { unComp1 ::71,72
newtype (:.:) f g p = Comp1 { unComp1 :: f (g71,72
data R74,75
data P76,77
type Rec0  =79,80
type Par0  =81,82
data D86,87
data C88,89
data S90,91
type D1 =93,94
type C1 =96,97
type S1 =99,100
class Datatype d103,104
  datatypeName ::105,106
  moduleName   ::107,108
class Selector s111,112
  selName ::113,114
data NoSelector116,117
instance Selector118,119
class Constructor c121,122
  conName ::123,124
  conFixity ::126,127
  conFixity _127,128
  conIsRecord ::130,131
  conIsRecord _131,132
data Arity =135,136
data Arity = NoArity |135,136
data Arity = NoArity | Arity Int135,136
data Fixity =140,141
data Fixity = Prefix |140,141
data Fixity = Prefix | Infix Associativity140,141
prec ::144,145
prec Prefix145,146
data Associativity =149,150
data Associativity = LeftAssociative149,150
                   | RightAssociative150,151
                   | NotAssociative151,152
class Generic a156,157
  type Rep a158,159
  type Rep a ::158,159
  from  ::160,161
  to    ::162,163
class Generic1 f167,168
  type Rep1 f169,170
  type Rep1 f ::169,170
  from1  ::171,172
  to1    ::173,174
data D_Int207,208
data C_Int208,209
data D_Float224,225
data C_Float225,226
data D_Double241,242
data C_Double242,243
data D_Char258,259
data C_Char259,260

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/GHCi.hs,237
module GHC.GHCi {-#20,21
import GHC.Base24,25
class (Monad m) => GHCiSandboxIO m where28,29
    ghciStepIO ::29,30
instance GHCiSandboxIO31,32
newtype NoIO a35,36
newtype NoIO a = NoIO {35,36
newtype NoIO a = NoIO { noio ::35,36

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Handle.hs,28
module GHC.Handle {-#18,19

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Int.hs,3272
module GHC.Int (22,23
data {-# CTYPE52,53
data {-# CTYPE "HsInt8" #-} Int8 = I8# Int# deriving52,53
instance Show55,56
"fromIntegral/Int8->Int8" fromIntegral165,166
"fromIntegral/a->Int8"    fromIntegral166,167
"fromIntegral/Int8->a"    fromIntegral167,168
"properFraction/Float->(Int8,Float)"171,172
"truncate/Float->Int8"175,176
"floor/Float->Int8"177,178
"ceiling/Float->Int8"179,180
"round/Float->Int8"181,182
"properFraction/Double->(Int8,Double)"186,187
"truncate/Double->Int8"190,191
"floor/Double->Int8"192,193
"ceiling/Double->Int8"194,195
"round/Double->Int8"196,197
data {-# CTYPE207,208
data {-# CTYPE "HsInt16" #-} Int16 = I16# Int# deriving207,208
"fromIntegral/Word8->Int16"  fromIntegral320,321
"fromIntegral/Int8->Int16"   fromIntegral321,322
"fromIntegral/Int16->Int16"  fromIntegral322,323
"fromIntegral/a->Int16"      fromIntegral323,324
"fromIntegral/Int16->a"      fromIntegral324,325
"truncate/Float->Int16"332,333
"floor/Float->Int16"334,335
"ceiling/Float->Int16"336,337
"round/Float->Int16"338,339
"truncate/Double->Int16"347,348
"floor/Double->Int16"349,350
"ceiling/Double->Int16"351,352
"round/Double->Int16"353,354
data {-# CTYPE367,368
data {-# CTYPE "HsInt32" #-} Int32 = I32# Int# deriving367,368
"fromIntegral/Word8->Int32"  fromIntegral481,482
"fromIntegral/Word16->Int32" fromIntegral482,483
"fromIntegral/Int8->Int32"   fromIntegral483,484
"fromIntegral/Int16->Int32"  fromIntegral484,485
"fromIntegral/Int32->Int32"  fromIntegral485,486
"fromIntegral/a->Int32"      fromIntegral486,487
"fromIntegral/Int32->a"      fromIntegral487,488
"truncate/Float->Int32"495,496
"floor/Float->Int32"497,498
"ceiling/Float->Int32"499,500
"round/Float->Int32"501,502
"truncate/Double->Int32"510,511
"floor/Double->Int32"512,513
"ceiling/Double->Int32"514,515
"round/Double->Int32"516,517
data {-# CTYPE538,539
data {-# CTYPE "HsInt64" #-} Int64 = I64# Int64#538,539
divInt64#, modInt64# :: Int64#621,622
divInt64#, modInt64#621,622
x# `divInt64#` y#624,625
x# `modInt64#` y#635,636
iShiftL64#, iShiftRA64# :: Int64#684,685
iShiftL64#, iShiftRA64#684,685
a `iShiftL64#` b  |686,687
a `iShiftRA64#` b |689,690
"fromIntegral/Int->Int64"    fromIntegral695,696
"fromIntegral/Word->Int64"   fromIntegral696,697
"fromIntegral/Word64->Int64" fromIntegral697,698
"fromIntegral/Int64->Int"    fromIntegral698,699
"fromIntegral/Int64->Word"   fromIntegral699,700
"fromIntegral/Int64->Word64" fromIntegral700,701
"fromIntegral/Int64->Int64"  fromIntegral701,702
data {-# CTYPE712,713
data {-# CTYPE "HsInt64" #-} Int64 = I64# Int# deriving712,713
"fromIntegral/a->Int64" fromIntegral816,817
"fromIntegral/Int64->a" fromIntegral817,818
"truncate/Float->Int64"825,826
"floor/Float->Int64"827,828
"ceiling/Float->Int64"829,830
"round/Float->Int64"831,832
"truncate/Double->Int64"840,841
"floor/Double->Int64"842,843
"ceiling/Double->Int64"844,845
"round/Double->Int64"846,847
uncheckedIShiftL64# ::850,851
uncheckedIShiftL64#  =851,852
uncheckedIShiftRA64# ::853,854
uncheckedIShiftRA64# =854,855
Suppose we873,874
Note in880,881
test comes882,883
             _ -> x `primQuot` y894,895
Now if we have the call (x `quot` 2), and quot897,898
So instead927,928
so the989,990

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Buffer.hs,1828
module GHC.IO.Buffer (18,19
type RawBuffer e95,96
type RawBuffer e =95,96
readWord8Buf ::97,98
readWord8Buf arr98,99
writeWord8Buf ::100,101
writeWord8Buf arr101,102
type CharBufElem =104,105
type CharBufElem =106,107
type RawCharBuffer =109,110
peekCharBuf ::111,112
peekCharBuf arr112,113
readCharBuf ::117,118
readCharBuf arr118,119
writeCharBuf ::121,122
writeCharBuf arr122,123
readCharBufPtr ::125,126
readCharBufPtr p127,128
writeCharBufPtr ::139,140
writeCharBufPtr p141,142
charSize ::154,155
charSize =156,157
data Buffer e179,180
  = Buffer {180,181
	bufRaw   ::181,182
        bufState ::182,183
	bufSize  ::183,184
	bufL     ::184,185
	bufR     ::185,186
type CharBuffer =189,190
type CharBuffer =191,192
data BufferState =194,195
data BufferState = ReadBuffer |194,195
data BufferState = ReadBuffer | WriteBuffer deriving194,195
withBuffer ::196,197
withBuffer Buffer{197,198
withRawBuffer ::199,200
withRawBuffer raw200,201
isEmptyBuffer ::202,203
isEmptyBuffer Buffer{203,204
isFullBuffer ::205,206
isFullBuffer Buffer{206,207
isFullCharBuffer ::209,210
isFullCharBuffer buf211,212
isWriteBuffer ::216,217
isWriteBuffer buf217,218
bufferElems ::221,222
bufferElems Buffer{222,223
bufferAvailable ::224,225
bufferAvailable Buffer{225,226
bufferRemove ::227,228
bufferRemove i228,229
bufferAdjustL ::230,231
bufferAdjustL l231,232
bufferAdd ::235,236
bufferAdd i236,237
emptyBuffer ::238,239
emptyBuffer raw239,240
newByteBuffer ::242,243
newByteBuffer c243,244
newCharBuffer ::245,246
newCharBuffer c246,247
newBuffer ::248,249
newBuffer bytes249,250
slideContents ::254,255
slideContents buf@Buffer{255,256
summaryBuffer ::265,266
summaryBuffer buf266,267
checkBuffer ::277,278
checkBuffer buf@Buffer{278,279
check ::287,288
check _288,289

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/BufferedIO.hs,463
module GHC.IO.BufferedIO (18,19
class BufferedIO dev38,39
  newBuffer         ::42,43
  fillReadBuffer    ::47,48
  fillReadBuffer0   ::52,53
  emptyWriteBuffer  ::62,63
  emptyWriteBuffer _dev63,64
  flushWriteBuffer  ::68,69
  flushWriteBuffer0 ::73,74
readBuf ::92,93
readBuf dev93,94
readBufNonBlocking ::100,101
readBufNonBlocking ::100,101
writeBuf ::112,113
writeBuf dev113,114
writeBufNonBlocking ::120,121
writeBufNonBlocking dev121,122

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Device.hs,1021
module GHC.IO.Device (17,18
unsupportedOperation =41,42
class RawIO a45,46
  read                ::52,53
  readNonBlocking     ::57,58
  write               ::60,61
  writeNonBlocking    ::64,65
class IODevice a68,69
  ready ::74,75
  close ::78,79
  isTerminal ::81,82
  isTerminal _82,83
  isSeekable ::85,86
  isSeekable _86,87
  seek ::89,90
  seek _90,91
  tell ::93,94
  tell _94,95
  getSize ::97,98
  getSize _98,99
  setSize ::101,102
  setSize _102,103
  setEcho ::106,107
  setEcho _107,108
  getEcho ::110,111
  getEcho _111,112
  setRaw ::116,117
  setRaw _117,118
  devType ::120,121
  dup ::124,125
  dup _125,126
  dup2 ::130,131
  dup2 _131,132
ioe_unsupportedOperation ::133,134
ioe_unsupportedOperation =134,135
data IODeviceType146,147
  = Directory --147,148
  | Stream    --155,156
  | RegularFile --159,160
  | RawDevice --161,162
data SeekMode171,172
  = AbsoluteSeek        --172,173
  | RelativeSeek        --173,174
  | SeekFromEnd         --175,176

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding/CodePage/Table.hs,471
module GHC.IO.Encoding.CodePage.Table where35,36
data ConvArray a40,41
data ConvArray a = ConvArray Addr#40,41
data CompactArray a41,42
data CompactArray a b = CompactArray {41,42
    encoderMax ::42,43
    encoderIndices ::43,44
    encoderValues ::44,45
data CodePageArrays =47,48
data CodePageArrays = SingleByteCP {47,48
    decoderArray ::48,49
    encoderArray ::49,50
blockBitSize ::52,53
blockBitSize =53,54
codePageMap ::54,55
codePageMap =55,56

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding/CodePage.hs,822
module GHC.IO.Encoding.CodePage(4,5
getCurrentCodePage ::44,45
getCurrentCodePage =45,46
currentCodePage ::59,60
currentCodePage =60,61
localeEncoding ::62,63
localeEncoding =63,64
mkLocaleEncoding ::65,66
mkLocaleEncoding cfm66,67
codePageEncoding ::69,70
codePageEncoding =70,71
mkCodePageEncoding ::72,73
mkCodePageEncoding cfm73,74
buildEncoding ::80,81
buildEncoding cfm81,82
simpleCodec ::88,89
simpleCodec r91,92
decodeFromSingleByte ::99,100
decodeFromSingleByte convArr100,101
encodeToSingleByte ::121,122
encodeToSingleByte CompactArray122,123
lookupConv ::153,154
lookupConv a154,155
lookupCompact ::157,158
lookupCompact maxVal158,159
indexInt ::169,170
indexInt (ConvArray170,171
indexWord8 ::173,174
indexWord8 (ConvArray174,175
indexChar ::177,178
indexChar (ConvArray178,179

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding/Failure.hs,785
module GHC.IO.Encoding.Failure (17,18
data CodingFailureMode41,42
  = ErrorOnCodingFailure42,43
  | IgnoreCodingFailure44,45
  | TransliterateCodingFailure47,48
  | RoundtripFailure50,51
codingFailureModeSuffix ::95,96
codingFailureModeSuffix ErrorOnCodingFailure96,97
unrepresentableChar ::106,107
unrepresentableChar =107,108
isSurrogate ::124,125
isSurrogate c125,126
escapeToRoundtripCharacterSurrogate ::131,132
escapeToRoundtripCharacterSurrogate b132,133
unescapeRoundtripCharacterSurrogate ::140,141
unescapeRoundtripCharacterSurrogate c141,142
recoverDecode ::146,147
recoverDecode cfm148,149
recoverEncode ::162,163
recoverEncode cfm164,165
ioe_decodingError ::195,196
ioe_decodingError =196,197
ioe_encodingError ::200,201
ioe_encodingError =201,202

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding/Iconv.hs,570
module GHC.IO.Encoding.Iconv (22,23
c_DEBUG_DUMP ::48,49
c_DEBUG_DUMP =49,50
iconv_trace ::51,52
iconv_trace s52,53
localeEncodingName ::60,61
localeEncodingName =61,62
type IConv =69,70
haskellChar ::84,85
haskellChar |86,87
char_shift ::93,94
char_shift |94,95
iconvEncoding ::97,98
iconvEncoding =98,99
mkIconvEncoding ::100,101
mkIconvEncoding cfm101,102
newIConv ::111,112
newIConv from115,116
iconvDecode ::130,131
iconvDecode iconv_t131,132
iconvEncode ::133,134
iconvEncode iconv_t134,135
iconvRecode ::136,137
iconvRecode iconv_t138,139

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding/Latin1.hs,493
module GHC.IO.Encoding.Latin1 (25,26
latin1 ::44,45
latin1 =45,46
mkLatin1 ::47,48
mkLatin1 cfm48,49
latin1_DF ::52,53
latin1_DF cfm53,54
latin1_EF ::62,63
latin1_EF cfm63,64
latin1_checked ::72,73
latin1_checked =73,74
mkLatin1_checked ::75,76
mkLatin1_checked cfm76,77
latin1_checked_EF ::80,81
latin1_checked_EF cfm81,82
latin1_decode ::91,92
latin1_decode 92,93
latin1_encode ::112,113
latin1_encode113,114
latin1_checked_encode ::131,132
latin1_checked_encode132,133

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding/Types.hs,713
module GHC.IO.Encoding.Types (18,19
data BufferCodec from35,36
data BufferCodec from to state = BufferCodec {35,36
  encode ::36,37
  recover ::55,56
  close  ::72,73
  getState ::77,78
  setState ::90,91
type DecodeBuffer =95,96
type EncodeBuffer =98,99
type TextDecoder state101,102
type TextDecoder state =101,102
type TextEncoder state102,103
data TextEncoding109,110
  = forall dstate110,111
        textEncodingName ::111,112
        mkTextDecoder ::114,115
        mkTextEncoder ::117,118
instance Show122,123
data CodingProgress =126,127
data CodingProgress = InputUnderflow  --126,127
                    | OutputUnderflow --128,129
                    | InvalidSequence --129,130

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding/UTF16.hs,1259
module GHC.IO.Encoding.UTF16 (27,28
utf16  ::56,57
utf16 =57,58
mkUTF16 ::59,60
mkUTF16 cfm60,61
utf16_DF ::64,65
utf16_DF cfm65,66
utf16_EF ::75,76
utf16_EF cfm76,77
utf16_encode ::86,87
utf16_encode done_bom87,88
utf16_decode ::100,101
utf16_decode seen_bom101,102
bomB, bomL, bom1, bom2 :: Word8124,125
bomB, bomL, bom1, bom2 :: Word8124,125
bomB, bomL, bom1, bom2124,125
bomB, bomL,124,125
bomB =125,126
bomL =126,127
utf16_native_decode ::129,130
utf16_native_decode =130,131
utf16_native_encode ::132,133
utf16_native_encode =133,134
bom1 =135,136
bom2 =136,137
utf16be ::141,142
utf16be =142,143
mkUTF16be ::144,145
mkUTF16be cfm145,146
utf16be_DF ::149,150
utf16be_DF cfm150,151
utf16be_EF ::159,160
utf16be_EF cfm160,161
utf16le ::169,170
utf16le =170,171
mkUTF16le ::172,173
mkUTF16le cfm173,174
utf16le_DF ::177,178
utf16le_DF cfm178,179
utf16le_EF ::187,188
utf16le_EF cfm188,189
utf16be_decode ::198,199
utf16be_decode 199,200
utf16le_decode ::232,233
utf16le_decode 233,234
utf16be_encode ::266,267
utf16be_encode267,268
utf16le_encode ::303,304
utf16le_encode304,305
chr2 ::340,341
chr2 (W16#341,342
validate1    ::349,350
validate1 x1350,351
validate2       ::353,354
validate2 x1354,355

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding/UTF32.hs,1238
module GHC.IO.Encoding.UTF32 (26,27
utf32  ::55,56
utf32 =56,57
mkUTF32 ::58,59
mkUTF32 cfm59,60
utf32_DF ::63,64
utf32_DF cfm64,65
utf32_EF ::74,75
utf32_EF cfm75,76
utf32_encode ::85,86
utf32_encode done_bom86,87
utf32_decode ::101,102
utf32_decode seen_bom102,103
bom0, bom1, bom2, bom3 :: Word8127,128
bom0, bom1, bom2, bom3 :: Word8127,128
bom0, bom1, bom2, bom3127,128
bom0, bom1,127,128
bom0 =128,129
bom1 =129,130
bom2 =130,131
bom3 =131,132
utf32_native_decode ::134,135
utf32_native_decode =135,136
utf32_native_encode ::137,138
utf32_native_encode =138,139
utf32be ::143,144
utf32be =144,145
mkUTF32be ::146,147
mkUTF32be cfm147,148
utf32be_DF ::151,152
utf32be_DF cfm152,153
utf32be_EF ::161,162
utf32be_EF cfm162,163
utf32le ::172,173
utf32le =173,174
mkUTF32le ::175,176
mkUTF32le cfm176,177
utf32le_DF ::180,181
utf32le_DF cfm181,182
utf32le_EF ::190,191
utf32le_EF cfm191,192
utf32be_decode ::201,202
utf32be_decode 202,203
utf32le_decode ::229,230
utf32le_decode 230,231
utf32be_encode ::257,258
utf32be_encode258,259
utf32le_encode ::281,282
utf32le_encode282,283
chr4 ::305,306
chr4 (W8#306,307
ord4 ::319,320
ord4 c320,321
validate    ::329,330
validate c330,331

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding/UTF8.hs,1022
module GHC.IO.Encoding.UTF8 (26,27
utf8 ::42,43
utf8 =43,44
mkUTF8 ::45,46
mkUTF8 cfm46,47
utf8_DF ::51,52
utf8_DF cfm52,53
utf8_EF ::61,62
utf8_EF cfm62,63
utf8_bom ::71,72
utf8_bom =72,73
mkUTF8_bom ::74,75
mkUTF8_bom cfm75,76
utf8_bom_DF ::79,80
utf8_bom_DF cfm80,81
utf8_bom_EF ::90,91
utf8_bom_EF cfm91,92
utf8_bom_decode ::101,102
utf8_bom_decode ref102,103
utf8_bom_encode ::124,125
utf8_bom_encode ref125,126
bom0, bom1, bom2 :: Word8139,140
bom0, bom1, bom2 ::139,140
bom0, bom1,139,140
bom0 =140,141
bom1 =141,142
bom2 =142,143
utf8_decode ::144,145
utf8_decode 145,146
utf8_encode ::211,212
utf8_encode212,213
ord2   ::256,257
ord2 c257,258
ord3   ::263,264
ord3 c264,265
ord4   ::271,272
ord4 c272,273
chr2       ::280,281
chr2 (W8#281,282
chr3          ::289,290
chr3 (W8#290,291
chr4             ::300,301
chr4 (W8#301,302
between ::314,315
between x318,319
validate3          ::321,322
validate3 x1323,324
validate4             ::341,342
validate4 x1343,344

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Encoding.hs,1385
module GHC.IO.Encoding (18,19
latin1  ::60,61
latin1 =61,62
utf8  ::64,65
utf8 =65,66
utf8_bom  ::75,76
utf8_bom =76,77
utf16  ::80,81
utf16 =81,82
utf16le  ::84,85
utf16le =85,86
utf16be  ::88,89
utf16be =89,90
utf32  ::93,94
utf32 =94,95
utf32le  ::97,98
utf32le =98,99
utf32be  ::101,102
utf32be =102,103
getLocaleEncoding ::105,106
getFileSystemEncoding ::116,117
getForeignEncoding ::121,122
setLocaleEncoding, setFileSystemEncoding, setForeignEncoding :: TextEncoding ->123,124
setLocaleEncoding, setFileSystemEncoding, setForeignEncoding ::123,124
setLocaleEncoding, setFileSystemEncoding,123,124
(getLocaleEncoding, setLocaleEncoding)124,125
mkGlobal ::128,129
mkGlobal x129,130
initLocaleEncoding, initFileSystemEncoding, initForeignEncoding :: TextEncoding133,134
initLocaleEncoding, initFileSystemEncoding, initForeignEncoding ::133,134
initLocaleEncoding, initFileSystemEncoding,133,134
initLocaleEncoding     =146,147
initFileSystemEncoding =147,148
initForeignEncoding    =148,149
char8 ::162,163
char8 =163,164
mkTextEncoding ::191,192
mkTextEncoding e192,193
mkTextEncoding' ::206,207
mkTextEncoding' cfm207,208
latin1_encode ::222,223
latin1_encode input223,224
--latin1_encode =224,225
latin1_decode ::226,227
latin1_decode input227,228
--latin1_decode =228,229
unknownEncodingErr ::230,231
unknownEncodingErr e231,232

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Exception.hs,2057
module GHC.IO.Exception (19,20
data BlockedIndefinitelyOnMVar =56,57
data BlockedIndefinitelyOnMVar = BlockedIndefinitelyOnMVar56,57
instance Show61,62
blockedIndefinitelyOnMVar ::64,65
blockedIndefinitelyOnMVar =65,66
data BlockedIndefinitelyOnSTM =71,72
data BlockedIndefinitelyOnSTM = BlockedIndefinitelyOnSTM71,72
blockedIndefinitelyOnSTM ::79,80
blockedIndefinitelyOnSTM =80,81
data Deadlock =86,87
data Deadlock = Deadlock86,87
data AssertionFailed =97,98
data AssertionFailed = AssertionFailed String97,98
data AsyncException108,109
  = StackOverflow109,110
  | HeapOverflow115,116
  | ThreadKilled123,124
  | UserInterrupt128,129
data ArrayException137,138
  = IndexOutOfBounds    String138,139
  | UndefinedElement    String141,142
stackOverflow, heapOverflow :: SomeException148,149
stackOverflow, heapOverflow148,149
stackOverflow =149,150
heapOverflow  =150,151
data ExitCode175,176
  = ExitSuccess --176,177
  | ExitFailure Int177,178
ioException     ::186,187
ioException err187,188
ioError         ::190,191
ioError         =191,192
type IOError =202,203
data IOException208,209
 = IOError {209,210
     ioe_handle   ::210,211
     ioe_type     ::212,213
     ioe_location ::213,214
     ioe_description ::214,215
     ioe_errno    ::215,216
     ioe_filename ::216,217
data IOErrorType227,228
  = AlreadyExists229,230
  | NoSuchThing230,231
  | ResourceBusy231,232
  | ResourceExhausted232,233
  | EOF233,234
  | IllegalOperation234,235
  | PermissionDenied235,236
  | UserError236,237
  | UnsatisfiedConstraints238,239
  | SystemError239,240
  | ProtocolError240,241
  | OtherError241,242
  | InvalidArgument242,243
  | InappropriateType243,244
  | HardwareFault244,245
  | UnsupportedOperation245,246
  | TimeExpired246,247
  | ResourceVanished247,248
  | Interrupted248,249
userError       ::285,286
userError str286,287
assertError ::309,310
assertError str310,311
unsupportedOperation ::314,315
unsupportedOperation =315,316
untangle ::325,326
untangle coded326,327

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/FD.hs,2441
module GHC.IO.FD (25,26
c_DEBUG_DUMP ::70,71
c_DEBUG_DUMP =71,72
data FD =76,77
data FD = FD {76,77
  fdFD ::77,78
  fdIsSocket_ ::81,82
  fdIsNonBlocking ::86,87
fdIsSocket ::92,93
fdIsSocket fd93,94
instance Show96,97
dEFAULT_FD_BUFFER_SIZE ::125,126
dEFAULT_FD_BUFFER_SIZE =126,127
readBuf' ::135,136
readBuf' fd136,137
writeBuf' ::144,145
writeBuf' fd145,146
openFile filepath161,162
std_flags    =208,209
output_flags =209,210
read_flags   =210,211
write_flags  =211,212
rw_flags     =212,213
append_flags =213,214
nonblock_flags =214,215
mkFD ::221,222
mkFD fd233,234
getUniqueFileInfo ::276,277
getUniqueFileInfo _278,279
stdFD ::295,296
stdFD fd296,297
stdin, stdout, stderr :: FD307,308
stdin, stdout, stderr ::307,308
stdin, stdout,307,308
stdin  =308,309
stdout =309,310
stderr =310,311
close ::315,316
close fd316,317
release ::328,329
release fd329,330
isSeekable ::337,338
isSeekable fd338,339
seek ::342,343
seek fd343,344
tell ::353,354
tell fd354,355
getSize ::359,360
getSize fd360,361
setSize ::362,363
setSize fd363,364
devType ::367,368
devType fd368,369
dup ::370,371
dup fd371,372
dup2 ::375,376
dup2 fd376,377
setNonBlockingMode ::382,383
setNonBlockingMode fd383,384
ready ::391,392
ready fd392,393
isTerminal ::409,410
isTerminal fd410,411
setEcho ::417,418
setEcho fd418,419
getEcho ::420,421
getEcho fd421,422
setRaw ::423,424
setRaw fd424,425
fdRead ::429,430
fdRead fd430,431
fdReadNonBlocking ::434,435
fdReadNonBlocking fd435,436
fdWrite ::443,444
fdWrite fd444,445
fdWriteNonBlocking ::452,453
fdWriteNonBlocking fd453,454
readRawBufferPtr ::497,498
readRawBufferPtr loc498,499
readRawBufferPtrNoBlock ::514,515
readRawBufferPtrNoBlock loc515,516
writeRawBufferPtr ::530,531
writeRawBufferPtr loc531,532
writeRawBufferPtrNoBlock ::545,546
writeRawBufferPtrNoBlock loc546,547
isNonBlocking ::560,561
isNonBlocking fd561,562
readRawBufferPtr ::568,569
writeRawBufferPtr ::573,574
readRawBufferPtrNoBlock ::578,579
writeRawBufferPtrNoBlock ::581,582
asyncReadRawBufferPtr ::586,587
asyncReadRawBufferPtr loc587,588
asyncWriteRawBufferPtr ::595,596
asyncWriteRawBufferPtr loc596,597
blockingReadRawBufferPtr ::606,607
blockingReadRawBufferPtr loc607,608
blockingWriteRawBufferPtr ::613,614
blockingWriteRawBufferPtr loc614,615
throwErrnoIfMinus1RetryOnBlock  ::646,647
throwErrnoIfMinus1RetryOnBlock loc647,648

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Handle/FD.hs,719
module GHC.IO.Handle.FD (17,18
stdin ::49,50
stdin =51,52
stdout ::60,61
stdout =62,63
stderr ::71,72
stderr =73,74
stdHandleFinalizer ::82,83
stdHandleFinalizer fp83,84
setBinaryMode ::93,94
setBinaryMode fd95,96
isEOF ::112,113
isEOF =113,114
addFilePathToIOError ::118,119
addFilePathToIOError fun119,120
openFile ::148,149
openFile fp149,150
openFileBlocking ::158,159
openFileBlocking fp159,160
openBinaryFile ::173,174
openBinaryFile fp174,175
openFile' ::179,180
openFile' filepath180,181
mkHandleFromFD fd0210,211
fdToHandle' ::241,242
fdToHandle' fdint248,249
fdToHandle ::268,269
fdToHandle fdint269,270
dEFAULT_OPEN_IN_BINARY_MODE ::287,288
dEFAULT_OPEN_IN_BINARY_MODE =288,289

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Handle/Internals.hs,3095
module GHC.IO.Handle.Internals (29,30
c_DEBUG_DUMP ::83,84
c_DEBUG_DUMP =84,85
type HandleFinalizer =89,90
newFileHandle ::91,92
newFileHandle filepath92,93
withHandle ::124,125
withHandle fun125,126
withHandle' ::128,129
withHandle' fun130,131
withHandle_ ::138,139
withHandle_ fun139,140
withHandle_' ::142,143
withHandle_' fun143,144
withAllHandles__ ::147,148
withAllHandles__ fun148,149
withHandle__' ::153,154
withHandle__' fun155,156
do_operation ::162,163
do_operation fun163,164
augmentIOError ::212,213
augmentIOError ioe@IOError{213,214
wantWritableHandle ::224,225
wantWritableHandle fun225,226
wantWritableHandle' fun235,236
checkWritableHandle ::238,239
checkWritableHandle act239,240
wantReadableHandle ::260,261
wantReadableHandle fun261,262
wantReadableHandle_ ::263,264
wantReadableHandle_ fun264,265
wantReadableHandle' fun274,275
checkReadableHandle ::277,278
checkReadableHandle act278,279
wantSeekableHandle ::300,301
wantSeekableHandle fun301,302
checkSeekableHandle ::307,308
checkSeekableHandle act308,309
ioe_closedHandle =324,325
ioe_EOF =327,328
ioe_notReadable =329,330
ioe_notWritable =332,333
ioe_notSeekable =335,336
ioe_cannotFlushNotSeekable =338,339
ioe_finalizedHandle ::343,344
ioe_finalizedHandle fp344,345
ioe_bufsiz ::348,349
ioe_bufsiz n349,350
streamEncode ::369,370
streamEncode codec372,373
handleFinalizer ::411,412
handleFinalizer fp412,413
dEFAULT_CHAR_BUFFER_SIZE ::423,424
dEFAULT_CHAR_BUFFER_SIZE =424,425
getCharBuffer ::426,427
getCharBuffer dev428,429
mkUnBuffer ::439,440
mkUnBuffer state440,441
flushBuffer ::452,453
flushBuffer h_@Handle__{..}453,454
flushCharBuffer ::463,464
flushCharBuffer h_@Handle__{..}464,465
flushWriteBuffer ::479,480
flushWriteBuffer h_@Handle__{..}480,481
flushByteWriteBuffer ::484,485
flushByteWriteBuffer h_@Handle__{..}485,486
writeCharBuffer ::494,495
writeCharBuffer h_@Handle__{..}495,496
flushCharReadBuffer ::532,533
flushCharReadBuffer Handle__{..}533,534
flushByteReadBuffer ::579,580
flushByteReadBuffer h_@Handle__{..}580,581
mkHandle ::598,599
mkHandle dev608,609
mkFileHandle ::638,639
mkFileHandle dev651,652
mkDuplexHandle ::659,660
mkDuplexHandle dev661,662
ioModeToHandleType ::677,678
ioModeToHandleType ReadMode678,679
initBufferState ::683,684
initBufferState ReadHandle684,685
openTextEncoding Nothing693,694
closeTextCodecs ::707,708
closeTextCodecs Handle__{..}708,709
hClose_help ::721,722
hClose_help handle_722,723
trymaybe ::733,734
trymaybe io734,735
hClose_handle_ ::736,737
hClose_handle_ h_@Handle__{..}737,738
noCharBuffer ::765,766
noCharBuffer =766,767
noByteBuffer ::769,770
noByteBuffer =770,771
hLookAhead_ ::775,776
hLookAhead_ handle_@Handle__{..}776,777
debugIO ::790,791
debugIO s791,792
readTextDevice ::804,805
readTextDevice h_@Handle__{..}805,806
readTextDevice' ::841,842
readTextDevice' h_@Handle__{..}842,843
readTextDeviceNonBlocking ::885,886
readTextDeviceNonBlocking h_@Handle__{..}886,887
decodeByteBuf ::897,898
decodeByteBuf h_@Handle__{..}898,899

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Handle/Text.hs,2115
module GHC.IO.Handle.Text (29,30
hWaitForInput ::94,95
hWaitForInput h95,96
hGetChar ::134,135
hGetChar handle135,136
hGetLine ::191,192
hGetLine h192,193
hGetLineBuffered ::196,197
hGetLineBuffered handle_@Handle__{..}197,198
hGetLineBufferedLoop ::201,202
hGetLineBufferedLoop handle_@Handle__{..}204,205
maybeFillReadBuffer ::250,251
maybeFillReadBuffer handle_251,252
unpack ::265,266
unpack !buf266,267
unpack_nl ::295,296
unpack_nl !buf296,297
hGetContents ::380,381
hGetContents handle381,382
lazyRead ::390,391
lazyRead handle391,392
lazyReadBuffered ::401,402
lazyReadBuffered h402,403
getSomeCharacters ::430,431
getSomeCharacters handle_@Handle__{..}431,432
hPutChar ::469,470
hPutChar handle470,471
hPutcBuffered ::475,476
hPutcBuffered handle_@Handle__{..}476,477
hPutStr ::530,531
hPutStr handle531,532
hPutStrLn ::534,535
hPutStrLn handle535,536
hPutStr' ::540,541
hPutStr' handle541,542
hPutChars ::557,558
hPutChars _558,559
getSpareBuffer ::561,562
getSpareBuffer Handle__{haCharBuffer=ref,562,563
writeBlocks ::581,582
writeBlocks hdl582,583
commitBuffer hdl629,630
commitBuffer' ::650,651
commitBuffer' raw652,653
hPutBuf ::696,697
hPutBuf h700,701
hPutBufNonBlocking h708,709
hPutBuf':: Handle710,711
hPutBuf' handle715,716
bufWrite ::733,734
bufWrite h_@Handle__{..}734,735
writeChunk ::761,762
writeChunk h_@Handle__{..}762,763
writeChunkNonBlocking ::766,767
writeChunkNonBlocking h_@Handle__{..}767,768
hGetBuf ::789,790
hGetBuf h790,791
bufReadNonEmpty ::806,807
bufReadNonEmpty h_@Handle__{..}807,808
bufReadEmpty ::831,832
bufReadEmpty h_@Handle__{..}832,833
hGetBufSome ::871,872
hGetBufSome h872,873
haFD ::894,895
haFD h_@Handle__{..}895,896
hGetBufNonBlocking ::919,920
hGetBufNonBlocking h920,921
bufReadNBEmpty ::932,933
bufReadNBEmpty   h_@Handle__{..}933,934
bufReadNBNonEmpty ::958,959
bufReadNBNonEmpty h_@Handle__{..}959,960
copyToRawBuffer ::985,986
copyToRawBuffer raw986,987
copyFromRawBuffer ::991,992
copyFromRawBuffer ptr992,993
illegalBufferSize ::1003,1004
illegalBufferSize handle1004,1005

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Handle/Types.hs,1820
module GHC.IO.Handle.Types (23,24
data Handle 99,100
  = FileHandle                          --100,101
  | DuplexHandle                        --105,106
instance Eq118,119
data Handle__123,124
  = forall dev124,125
      haDevice      ::126,127
      haType        ::127,128
      haByteBuffer  ::128,129
      haBufferMode  ::129,130
      haLastDecode  ::130,131
      haCharBuffer  ::131,132
      haBuffers     ::132,133
      haEncoder     ::133,134
      haDecoder     ::134,135
      haCodec       ::135,136
      haInputNL     ::136,137
      haOutputNL    ::137,138
      haOtherSide   ::138,139
data BufferList e146,147
  = BufferListNil 147,148
  | BufferListCons (RawBuffer148,149
data HandleType153,154
 = ClosedHandle154,155
 | SemiClosedHandle155,156
 | ReadHandle156,157
 | WriteHandle157,158
 | AppendHandle158,159
 | ReadWriteHandle159,160
isReadableHandleType ::161,162
isReadableHandleType ReadHandle162,163
isWritableHandleType ::166,167
isWritableHandleType AppendHandle167,168
isReadWriteHandleType ::172,173
isReadWriteHandleType ReadWriteHandle{}173,174
checkHandleInvariants ::184,185
checkHandleInvariants h_186,187
data BufferMode  245,246
 = NoBuffering  --246,247
 | LineBuffering247,248
 | BlockBuffering (Maybe249,250
data is available,307,308
data Newline =353,354
data Newline = LF    --353,354
             | CRLF  --354,355
data NewlineMode 362,363
  = NewlineMode {363,364
  = NewlineMode { inputNL ::363,364
                  outputNL ::365,366
nativeNewline ::372,373
nativeNewline =374,375
universalNewlineMode ::387,388
universalNewlineMode  =388,389
nativeNewlineMode    ::396,397
nativeNewlineMode     =397,398
noNewlineTranslation ::404,405
noNewlineTranslation  =405,406
showHandle ::428,429
showHandle file429,430

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/Handle.hs,2013
module GHC.IO.Handle (22,23
hClose ::84,85
hClose h@(FileHandle85,86
hClose_maybethrow ::92,93
hClose_maybethrow Nothing93,94
hClose_rethrow ::96,97
hClose_rethrow e97,98
hClose' ::102,103
hClose' h103,104
hFileSize ::111,112
hFileSize handle112,113
hSetFileSize ::127,128
hSetFileSize handle128,129
hIsEOF ::148,149
hIsEOF handle149,150
hLookAhead ::175,176
hLookAhead handle176,177
hSetBuffering ::202,203
hSetBuffering handle203,204
hSetEncoding ::251,252
hSetEncoding hdl252,253
hGetEncoding ::273,274
hGetEncoding hdl274,275
hFlush ::291,292
hFlush handle292,293
hFlushAll ::311,312
hFlushAll handle312,313
data HandlePosn =317,318
data HandlePosn = HandlePosn Handle317,318
instance Eq319,320
type HandlePosition =330,331
hGetPosn ::335,336
hGetPosn handle336,337
hSetPosn ::348,349
hSetPosn (HandlePosn349,350
 - when seeking using `SeekFromEnd', positive offsets355,356
hSeek ::384,385
hSeek handle385,386
hTell ::415,416
hTell handle416,417
hIsOpen ::445,446
hIsOpen handle446,447
hIsClosed ::453,454
hIsClosed handle454,455
{- not460,461
hIsReadable ::470,471
hIsReadable (DuplexHandle471,472
hIsWritable ::479,480
hIsWritable (DuplexHandle480,481
hGetBuffering ::491,492
hGetBuffering handle492,493
hIsSeekable ::501,502
hIsSeekable handle502,503
hSetEcho ::515,516
hSetEcho handle516,517
hGetEcho ::528,529
hGetEcho handle529,530
hIsTerminalDevice ::541,542
hIsTerminalDevice handle542,543
hSetBinaryMode ::557,558
hSetBinaryMode handle558,559
hSetNewlineMode ::588,589
hSetNewlineMode handle589,590
hDuplicate ::603,604
hDuplicate h@(FileHandle604,605
dupHandle ::616,617
dupHandle filepath622,623
dupHandle_ ::633,634
dupHandle_ new_dev639,640
hDuplicateTo ::659,660
hDuplicateTo h1@(FileHandle660,661
ioe_dupHandlesNotCompatible ::678,679
ioe_dupHandlesNotCompatible h679,680
dupHandleTo ::683,684
dupHandleTo filepath690,691
hShow ::707,708
hShow h@(FileHandle708,709
showHandle' ::711,712
showHandle' filepath712,713

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO/IOMode.hs,289
module GHC.IO.IOMode (IOMode(..))18,19
data IOMode      =27,28
data IOMode      =  ReadMode |27,28
data IOMode      =  ReadMode | WriteMode |27,28
data IOMode      =  ReadMode | WriteMode | AppendMode |27,28
data IOMode      =  ReadMode | WriteMode | AppendMode | ReadWriteMode27,28

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IO.hs,1520
module GHC.IO (25,26
liftIO ::77,78
liftIO (IO78,79
failIO ::80,81
failIO s81,82
stToIO        ::90,91
stToIO (ST91,92
ioToST        ::93,94
ioToST (IO94,95
unsafeIOToST        ::99,100
unsafeIOToST (IO100,101
unsafeSTToIO ::102,103
unsafeSTToIO (ST103,104
different precautions:122,123
>     test150,151
unsafePerformIO ::164,165
unsafePerformIO m165,166
unsafeDupablePerformIO  ::176,177
unsafeDupablePerformIO (IO177,178
unsafeInterleaveIO ::207,208
unsafeInterleaveIO m208,209
unsafeDupableInterleaveIO ::229,230
unsafeDupableInterleaveIO (IO230,231
noDuplicate ::246,247
noDuplicate =247,248
type FilePath =254,255
catchException ::273,274
catchException (IO274,275
catchAny ::279,280
catchAny (IO280,281
throwIO ::298,299
throwIO e299,300
block ::321,322
block (IO322,323
unblock ::332,333
unblock =333,334
unsafeUnmask ::335,336
unsafeUnmask (IO336,337
blockUninterruptible ::338,339
blockUninterruptible (IO339,340
data MaskingState343,344
  = Unmasked --344,345
  | MaskedInterruptible 345,346
  | MaskedUninterruptible347,348
getMaskingState ::352,353
getMaskingState  =353,354
blocked ::363,364
blocked =364,365
onException ::366,367
onException io367,368
mask  ::412,413
mask_ ::415,416
uninterruptibleMask ::427,428
uninterruptibleMask_ ::431,432
mask_ io433,434
mask io435,436
uninterruptibleMask_ io441,442
uninterruptibleMask io443,444
bracket before455,456
finally ::462,463
a `finally` sequel =466,467
evaluate ::486,487
evaluate a487,488

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IOArray.hs,428
module GHC.IOArray (19,20
newtype IOArray i40,41
newtype IOArray i e = IOArray (STArray40,41
instance Eq43,44
newIOArray ::47,48
newIOArray lu49,50
unsafeReadIOArray  ::52,53
unsafeReadIOArray (IOArray54,55
unsafeWriteIOArray ::57,58
unsafeWriteIOArray (IOArray59,60
readIOArray  ::62,63
readIOArray (IOArray63,64
writeIOArray ::66,67
writeIOArray (IOArray67,68
boundsIOArray ::70,71
boundsIOArray (IOArray71,72

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IOBase.hs,340
module GHC.IOBase {-#18,19
type FD =66,67
data BlockedOnDeadMVar =69,70
data BlockedOnDeadMVar = BlockedOnDeadMVar69,70
instance Show74,75
blockedOnDeadMVar ::77,78
blockedOnDeadMVar =78,79
data BlockedIndefinitely =82,83
data BlockedIndefinitely = BlockedIndefinitely82,83
blockedIndefinitely ::90,91
blockedIndefinitely =91,92

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IORef.hs,288
module GHC.IORef (19,20
newtype IORef a32,33
newtype IORef a = IORef (STRef32,33
instance Eq35,36
newIORef    ::39,40
newIORef v40,41
readIORef   ::43,44
readIORef  (IORef44,45
writeIORef  ::47,48
writeIORef (IORef48,49
atomicModifyIORef ::50,51
atomicModifyIORef (IORef51,52

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/IP.hs,59
module GHC.IP (IP(..))5,6
class IP (x10,11
  ip ::11,12

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/MVar.hs,478
module GHC.MVar (19,20
data MVar a35,36
data MVar a = MVar (MVar#35,36
instance Eq43,44
--Defined in56,57
newEmptyMVar  ::59,60
newEmptyMVar =60,61
newMVar ::65,66
newMVar value66,67
takeMVar ::86,87
takeMVar (MVar87,88
putMVar  ::103,104
putMVar (MVar104,105
tryTakeMVar ::112,113
tryTakeMVar (MVar113,114
tryPutMVar  ::121,122
tryPutMVar (MVar122,123
isEmptyMVar ::133,134
isEmptyMVar (MVar134,135
addMVarFinalizer ::140,141
addMVarFinalizer (MVar141,142

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/PArr.hs,105
module GHC.PArr where23,24
data [::] e34,35
data [::] e = PArr !Int (Array# e)34,35
type PArr =36,37

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/TypeLits.hs,1073
{-# LANGUAGE11,12
module GHC.TypeLits18,19
import GHC.Base(Eq((==)),38,39
type Kind =50,51
data Nat54,55
data Symbol57,58
data family Sing61,62
newtype instance Sing63,64
newtype instance Sing (n :: Nat)    = SNat Integer63,64
newtype instance Sing65,66
newtype instance Sing (n :: Symbol) = SSym String65,66
unsafeSingNat ::67,68
unsafeSingNat =68,69
unsafeSingSymbol ::70,71
unsafeSingSymbol =71,72
class SingI a79,80
  sing ::82,83
class (m :: Nat)86,87
type family (m88,89
type family (m ::88,89
type family (m91,92
type family (m94,95
type family (m97,98
class (kparam ~ Kind) => SingE (kparam :: k)111,112
  fromSing ::112,113
instance SingE114,115
class    (SingI a, SingE (Kind :: k) rep) => SingRep (a :: k) rep | a124,125
withSing ::133,134
withSing f134,135
singThat ::142,143
singThat p143,144
data IsZero ::159,160
  IsZero ::160,161
  IsSucc ::161,162
isZero ::163,164
isZero (SNat164,165
data IsEven ::171,172
  IsEvenZero ::172,173
  IsEven     ::173,174
  IsOdd      ::174,175
isEven ::176,177
isEven (SNat177,178

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Unicode.hs,934
module GHC.Unicode (22,23
isAscii                 ::41,42
isAscii c42,43
isLatin1                ::46,47
isLatin1 c47,48
isAsciiLower ::51,52
isAsciiLower c52,53
isAsciiUpper ::56,57
isAsciiUpper c57,58
isControl               ::61,62
isPrint                 ::65,66
isSpace                 ::69,70
isSpace c73,74
isUpper                 ::85,86
isLower                 ::88,89
isAlpha                 ::93,94
isAlphaNum              ::100,101
isDigit                 ::103,104
isDigit c104,105
isOctDigit              ::107,108
isOctDigit c108,109
isHexDigit              ::112,113
isHexDigit c113,114
toUpper                 ::118,119
toLower                 ::122,123
toTitle                 ::128,129
isAlpha    c136,137
isAlphaNum c137,138
--isSpace    c138,139
isControl  c139,140
isPrint    c140,141
isUpper    c141,142
isLower    c142,143
toLower c144,145
toUpper c145,146
toTitle c146,147

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Windows.hs,196
module GHC.Windows (20,21
type HANDLE       =34,35
type DWORD        =35,36
type LPTSTR =37,38
iNFINITE ::39,40
iNFINITE =40,41
throwGetLastError ::42,43
throwGetLastError where_from43,44

/Users/ismael/.haskdogs/base-4.6.0.1/GHC/Word.hs,2697
module GHC.Word (22,23
data {-# CTYPE51,52
data {-# CTYPE "HsWord8" #-} Word8 = W8# Word# deriving51,52
instance Show54,55
"fromIntegral/Word8->Word8"   fromIntegral151,152
"fromIntegral/Word8->Integer" fromIntegral152,153
"fromIntegral/a->Word8"       fromIntegral153,154
"fromIntegral/Word8->a"       fromIntegral154,155
"properFraction/Float->(Word8,Float)"158,159
"truncate/Float->Word8"162,163
"floor/Float->Word8"164,165
"ceiling/Float->Word8"166,167
"round/Float->Word8"168,169
"properFraction/Double->(Word8,Double)"173,174
"truncate/Double->Word8"177,178
"floor/Double->Word8"179,180
"ceiling/Double->Word8"181,182
"round/Double->Word8"183,184
data {-# CTYPE194,195
data {-# CTYPE "HsWord16" #-} Word16 = W16# Word# deriving194,195
"fromIntegral/Word8->Word16"   fromIntegral294,295
"fromIntegral/Word16->Word16"  fromIntegral295,296
"fromIntegral/Word16->Integer" fromIntegral296,297
"fromIntegral/a->Word16"       fromIntegral297,298
"fromIntegral/Word16->a"       fromIntegral298,299
"truncate/Float->Word16"306,307
"floor/Float->Word16"308,309
"ceiling/Float->Word16"310,311
"round/Float->Word16"312,313
"truncate/Double->Word16"321,322
"floor/Double->Word16"323,324
"ceiling/Double->Word16"325,326
"round/Double->Word16"327,328
"truncate/Float->Word32"347,348
"floor/Float->Word32"349,350
"ceiling/Float->Word32"351,352
"round/Float->Word32"353,354
"truncate/Double->Word32"362,363
"floor/Double->Word32"364,365
"ceiling/Double->Word32"366,367
"round/Double->Word32"368,369
data {-# CTYPE374,375
data {-# CTYPE "HsWord32" #-} Word32 = W32# Word# deriving374,375
"fromIntegral/Word8->Word32"   fromIntegral478,479
"fromIntegral/Word16->Word32"  fromIntegral479,480
"fromIntegral/Word32->Word32"  fromIntegral480,481
"fromIntegral/Word32->Integer" fromIntegral481,482
"fromIntegral/a->Word32"       fromIntegral482,483
"fromIntegral/Word32->a"       fromIntegral483,484
data {-# CTYPE519,520
data {-# CTYPE "HsWord64" #-} Word64 = W64# Word64#519,520
shiftL64#, shiftRL64# :: Word64#615,616
shiftL64#, shiftRL64#615,616
a `shiftL64#` b  |617,618
a `shiftRL64#` b |620,621
"fromIntegral/Int->Word64"    fromIntegral624,625
"fromIntegral/Word->Word64"   fromIntegral625,626
"fromIntegral/Word64->Int"    fromIntegral626,627
"fromIntegral/Word64->Word"   fromIntegral627,628
"fromIntegral/Word64->Word64" fromIntegral628,629
data {-# CTYPE637,638
data {-# CTYPE "HsWord64" #-} Word64 = W64# Word# deriving637,638
"fromIntegral/a->Word64" fromIntegral726,727
"fromIntegral/Word64->a" fromIntegral727,728
uncheckedShiftL64# ::730,731
uncheckedShiftL64#  =731,732
uncheckedShiftRL64# ::733,734
uncheckedShiftRL64# =734,735

/Users/ismael/.haskdogs/base-4.6.0.1/Numeric.hs,597
module Numeric (18,19
readInt ::84,85
readInt base89,90
readOct ::92,93
readOct =93,94
readDec ::96,97
readDec =97,98
readHex ::101,102
readHex =102,103
readFloat ::106,107
readFloat =107,108
readFloatP ::109,110
readFloatP =110,111
readSigned ::121,122
readSigned readPos122,123
showInt ::137,138
showInt n0138,139
showEFloat    ::170,171
showFFloat    ::178,179
showGFloat    ::187,188
showEFloat d189,190
showFFloat d190,191
showGFloat d191,192
showIntAtBase ::199,200
showIntAtBase base200,201
showHex ::214,215
showHex =215,216
showOct ::218,219
showOct =219,220

/Users/ismael/.haskdogs/base-4.6.0.1/Prelude.hs,87
module Prelude (19,20
($!)    :: (a180,181
f $!182,183
seq ::191,192
seq _192,193

/Users/ismael/.haskdogs/base-4.6.0.1/Setup.hs,46
module Main (main)0,1
main ::4,5
main =5,6

/Users/ismael/.haskdogs/base-4.6.0.1/System/Console/GetOpt.hs,1693
module System.Console.GetOpt (41,42
data ArgOrder a69,70
  = RequireOrder                --70,71
  | Permute                     --71,72
  | ReturnInOrder (String72,73
data OptDescr a87,88
data OptDescr a =              -- description87,88
data ArgDescr a95,96
   = NoArg                   a96,97
   | ReqArg (String97,98
   | OptArg (Maybe98,99
data OptKind a100,101
   = Opt       a101,102
   | UnreqOpt  String102,103
   | NonOpt    String103,104
   | EndOfOpts                  --104,105
   | OptErr    String105,106
usageInfo ::110,111
usageInfo header113,114
fmtOpt ::120,121
fmtOpt (Option121,122
fmtShort ::131,132
fmtShort (NoArg132,133
fmtLong ::136,137
fmtLong (NoArg137,138
getOpt ::155,156
getOpt ordering159,160
getOpt' ::167,168
getOpt' _171,172
getNext ::187,188
getNext ('-':'-':[])188,189
longOpt ::194,195
longOpt ls195,196
shortOpt ::215,216
shortOpt y216,217
errAmbig ::234,235
errAmbig ods235,236
errReq ::238,239
errReq d239,240
errUnrec ::241,242
errUnrec optStr242,243
errNoArg ::244,245
errNoArg optStr245,246
data Flag =251,252
data Flag = Verbose |251,252
data Flag = Verbose | Version |251,252
data Flag = Verbose | Version | Name String251,252
data Flag = Verbose | Version | Name String | Output String251,252
data Flag = Verbose | Version | Name String | Output String | Arg String251,252
options ::253,254
options =254,255
out ::260,261
out Nothing261,262
test ::264,265
test order265,266
>     =305,306
>     , optShowVersion ::347,348
>     ,347,348
>     , optOutput      ::348,349
>     ,348,349
>     , optInput       ::349,350
>     ,349,350
>     , optLibDirs     ::350,351
>     ,350,351

/Users/ismael/.haskdogs/base-4.6.0.1/System/Environment.hs,1100
module System.Environment17,18
getWin32ProgArgv_certainly ::84,85
getWin32ProgArgv_certainly =85,86
withWin32ProgArgv ::91,92
withWin32ProgArgv argv92,93
getWin32ProgArgv ::99,100
getWin32ProgArgv =100,101
setWin32ProgArgv ::110,111
setWin32ProgArgv Nothing111,112
dropRTSArgs ::121,122
dropRTSArgs []122,123
getArgs ::132,133
getArgs =135,136
getProgName ::160,161
getProgName =163,164
unpackProgName  ::172,173
unpackProgName argv173,174
basename ::179,180
basename f180,181
getEnv ::204,205
getEnv name205,206
eRROR_ENVVAR_NOT_FOUND ::214,215
eRROR_ENVVAR_NOT_FOUND =215,216
foreign import217,218
lookupEnv ::228,229
lookupEnv name230,231
ioe_missingEnvVar ::255,256
ioe_missingEnvVar name256,257
withArgs ::263,264
withArgs xs264,265
withProgName ::272,273
withProgName nm273,274
withArgv ::280,281
withArgv new_args286,287
withProgArgv ::291,292
withProgArgv new_args292,293
freeProgArgv ::300,301
freeProgArgv argv301,302
setProgArgv ::307,308
setProgArgv argv308,309
getEnvironment ::322,323
getEnvironment =325,326
divvy ::368,369
divvy str369,370

/Users/ismael/.haskdogs/base-4.6.0.1/System/Exit.hs,152
module System.Exit17,18
exitWith ::74,75
exitWith ExitSuccess75,76
exitFailure ::86,87
exitFailure =87,88
exitSuccess ::92,93
exitSuccess =93,94

/Users/ismael/.haskdogs/base-4.6.0.1/System/Info.hs,222
module System.Info18,19
compilerVersion ::31,32
compilerVersion =32,33
os ::36,37
arch ::39,40
compilerName ::43,44
compilerVersionRaw ::45,46
compilerName =49,50
compilerVersionRaw =50,51
os =54,55
arch =55,56

/Users/ismael/.haskdogs/base-4.6.0.1/System/IO/Error.hs,3218
module System.IO.Error (17,18
tryIOError     ::136,137
tryIOError f137,138
mkIOError ::149,150
mkIOError t150,151
isAlreadyExistsError ::183,184
isAlreadyExistsError =184,185
isDoesNotExistError ::188,189
isDoesNotExistError  =189,190
isAlreadyInUseError ::195,196
isAlreadyInUseError  =196,197
isFullError         ::200,201
isFullError          =201,202
isEOFError          ::205,206
isEOFError           =206,207
isIllegalOperation  ::214,215
isIllegalOperation   =215,216
isPermissionError   ::220,221
isPermissionError    =221,222
isUserError         ::224,225
isUserError          =225,226
data IOErrorType =232,233
data IOErrorType = AlreadyExists |232,233
data IOErrorType = AlreadyExists | NoSuchThing |232,233
data IOErrorType = AlreadyExists | NoSuchThing | ResourceBusy232,233
                 | ResourceExhausted |233,234
                 | ResourceExhausted | EOF |233,234
                 | ResourceExhausted | EOF | IllegalOperation233,234
                 | PermissionDenied |234,235
                 | PermissionDenied | UserError234,235
alreadyExistsErrorType   ::239,240
alreadyExistsErrorType    =240,241
doesNotExistErrorType    ::244,245
doesNotExistErrorType     =245,246
alreadyInUseErrorType    ::249,250
alreadyInUseErrorType     =250,251
fullErrorType            ::253,254
fullErrorType             =254,255
eofErrorType             ::258,259
eofErrorType              =259,260
illegalOperationErrorType ::262,263
illegalOperationErrorType =263,264
permissionErrorType      ::267,268
permissionErrorType       =268,269
userErrorType            ::271,272
userErrorType             =272,273
isAlreadyExistsErrorType ::279,280
isAlreadyExistsErrorType AlreadyExists280,281
isDoesNotExistErrorType ::285,286
isDoesNotExistErrorType NoSuchThing286,287
isAlreadyInUseErrorType ::291,292
isAlreadyInUseErrorType ResourceBusy292,293
isFullErrorType ::296,297
isFullErrorType ResourceExhausted297,298
isEOFErrorType ::302,303
isEOFErrorType EOF303,304
isIllegalOperationErrorType ::307,308
isIllegalOperationErrorType IllegalOperation308,309
isPermissionErrorType ::313,314
isPermissionErrorType PermissionDenied314,315
isUserErrorType ::318,319
isUserErrorType UserError319,320
ioeGetErrorType       ::326,327
ioeGetErrorString     ::327,328
ioeGetLocation        ::328,329
ioeGetHandle          ::329,330
ioeGetFileName        ::330,331
ioeGetErrorType ioe332,333
ioeGetErrorString ioe334,335
ioeGetLocation ioe338,339
ioeGetHandle ioe340,341
ioeGetFileName ioe342,343
ioeSetErrorType   ::344,345
ioeSetErrorString ::345,346
ioeSetLocation    ::346,347
ioeSetHandle      ::347,348
ioeSetFileName    ::348,349
ioeSetErrorType   ioe350,351
ioeSetErrorString ioe351,352
ioeSetLocation    ioe352,353
ioeSetHandle      ioe353,354
ioeSetFileName    ioe354,355
ioeGetErrorType       ::357,358
ioeGetLocation        ::358,359
ioeSetErrorType   ::374,375
ioeSetErrorString ::375,376
ioeSetLocation    ::376,377
ioeSetHandle      ::377,378
ioeSetFileName    ::378,379
modifyIOError ::399,400
modifyIOError f400,401
annotateIOError ::408,409
annotateIOError ioe415,416
catchIOError ::456,457
catchIOError =457,458

/Users/ismael/.haskdogs/base-4.6.0.1/System/IO/Unsafe.hs,104
module System.IO.Unsafe (17,18
unsafeDupablePerformIO =35,36
unsafeFixIO ::54,55
unsafeFixIO k55,56

/Users/ismael/.haskdogs/base-4.6.0.1/System/IO.hs,1774
module System.IO (18,19
putChar         ::322,323
putChar c323,324
putStr          ::328,329
putStr s329,330
putStrLn        ::333,334
putStrLn s334,335
print           ::347,348
print x348,349
getChar         ::353,354
getChar         =354,355
getLine         ::359,360
getLine         =360,361
getContents     ::366,367
getContents     =367,368
interact        ::374,375
interact f375,376
readFile        ::382,383
readFile name383,384
writeFile ::387,388
writeFile f388,389
appendFile      ::399,400
appendFile f400,401
readLn          ::404,405
readLn          =405,406
readIO          ::412,413
readIO s413,414
localeEncoding ::424,425
localeEncoding =425,426
hReady          ::436,437
hReady h437,438
hPrint          ::449,450
hPrint hdl450,451
withFile ::459,460
withFile name460,461
withBinaryFile ::466,467
withBinaryFile name467,468
fixIO ::473,474
fixIO k474,475
openBinaryFile =499,500
hSetBinaryMode _500,501
type CMode =502,503
openTempFile ::520,521
openTempFile tmp_dir525,526
openBinaryTempFile ::529,530
openBinaryTempFile tmp_dir530,531
openTempFileWithDefaultPermissions ::534,535
openTempFileWithDefaultPermissions tmp_dir536,537
openBinaryTempFileWithDefaultPermissions ::540,541
openBinaryTempFileWithDefaultPermissions tmp_dir542,543
openTempFile' ::545,546
openTempFile' loc547,548
data OpenNewFileResult610,611
  = NewFileCreated CInt611,612
  | FileExists612,613
  | OpenNewError Errno613,614
openNewFile ::615,616
openNewFile filepath616,617
pathSeparator ::656,657
pathSeparator =658,659
std_flags, output_flags, rw_flags :: CInt665,666
std_flags, output_flags, rw_flags ::665,666
std_flags, output_flags,665,666
std_flags    =666,667
output_flags =667,668
rw_flags     =668,669

/Users/ismael/.haskdogs/base-4.6.0.1/System/Mem/StableName.hs,250
module System.Mem.StableName (34,35
{-|57,58
data StableName a85,86
data StableName a = StableName (StableName#85,86
makeStableName  ::90,91
makeStableName a92,93
hashStableName ::103,104
hashStableName (StableName105,106
instance Eq111,112

/Users/ismael/.haskdogs/base-4.6.0.1/System/Mem/Weak.hs,164
module System.Mem.Weak (52,53
mkWeakPtr ::86,87
mkWeakPtr key87,88
addFinalizer ::101,102
addFinalizer key102,103
mkWeakPair ::113,114
mkWeakPair key114,115

/Users/ismael/.haskdogs/base-4.6.0.1/System/Mem.hs,26
module System.Mem (20,21

/Users/ismael/.haskdogs/base-4.6.0.1/System/Posix/Internals.hs,1546
module System.Posix.Internals where24,25
puts ::77,78
puts s78,79
type CFLock     =88,89
type CGroup     =89,90
type CLconv     =90,91
type CPasswd    =91,92
type CSigaction =92,93
data {-# CTYPE93,94
type CStat      =94,95
type CTermios   =95,96
type CTm        =96,97
type CTms       =97,98
type CUtimbuf   =98,99
type CUtsname   =99,100
type FD =101,102
fdFileSize ::106,107
fdFileSize fd107,108
fileType ::118,119
fileType file119,120
fdStat ::128,129
fdStat fd129,130
fdType ::138,139
fdType fd139,140
statGetType ::141,142
statGetType p_stat142,143
ioe_unknownfiletype ::153,154
ioe_unknownfiletype =155,156
fdGetMode ::165,166
fdGetMode _167,168
withFilePath ::190,191
withFilePath =191,192
peekFilePath ::193,194
peekFilePath =194,195
withFilePath ::197,198
peekFilePath ::198,199
peekFilePathLen ::199,200
peekFilePathLen fp204,205
setEcho ::218,219
setEcho fd219,220
getEcho ::227,228
getEcho fd228,229
setCooked ::233,234
setCooked fd234,235
tcSetAttr ::251,252
tcSetAttr fd252,253
setCooked ::306,307
ioe_unk_error ::313,314
ioe_unk_error loc314,315
setEcho ::323,324
getEcho ::330,331
setNonBlockingFD ::354,355
setNonBlockingFD fd356,357
setCloseOnExec ::378,379
setCloseOnExec fd379,380
type CFilePath =388,389
type CFilePath =390,391
s_isreg  ::532,533
s_isreg cm533,534
s_ischr  ::534,535
s_ischr cm535,536
s_isblk  ::536,537
s_isblk cm537,538
s_isdir  ::538,539
s_isdir cm539,540
s_isfifo ::540,541
s_isfifo cm541,542
s_issock ::576,577
s_issock cmode578,579

/Users/ismael/.haskdogs/base-4.6.0.1/System/Posix/Types.hs,424
module System.Posix.Types (45,46
type LinkCount      =188,189
type UserID         =191,192
type GroupID        =194,195
type ByteCount      =199,200
type ClockTick      =200,201
type EpochTime      =201,202
type DeviceID       =202,203
type FileID         =203,204
type FileMode       =204,205
type ProcessID      =205,206
type FileOffset     =206,207
type ProcessGroupID =207,208
type Limit          =208,209

/Users/ismael/.haskdogs/base-4.6.0.1/System/Timeout.hs,146
module System.Timeout (24,25
newtype Timeout =36,37
newtype Timeout = Timeout Unique36,37
instance Show39,40
timeout ::74,75
timeout n76,77

/Users/ismael/.haskdogs/base-4.6.0.1/Text/ParserCombinators/ReadP.hs,1758
module Text.ParserCombinators.ReadP27,28
type ReadS a102,103
type ReadS a =102,103
data P a109,110
  = Get (Char110,111
  | Look (String111,112
  | Fail112,113
  | Result a113,114
  | Final [(a,String)]114,115
instance Monad118,119
newtype ReadP a162,163
newtype ReadP a = R (forall162,163
newtype ReadPN b165,166
newtype ReadPN b a = R ((a165,166
final ::185,186
final []187,188
run ::190,191
run (Get191,192
get ::200,201
get =203,204
look ::205,206
look =208,209
pfail ::210,211
pfail =212,213
(+++) :: ReadP214,215
R f1216,217
(<++) :: ReadP219,220
(<++) :: ReadPN221,222
gather ::255,256
gather (R263,264
satisfy ::276,277
satisfy p279,280
char ::281,282
char c283,284
eof ::285,286
eof =287,288
string ::291,292
string this293,294
munch ::299,300
munch p303,304
munch1 ::310,311
munch1 p314,315
choice ::319,320
choice []321,322
skipSpaces ::325,326
skipSpaces =327,328
count ::334,335
count n337,338
between ::339,340
between open342,343
option ::347,348
option x350,351
optional ::352,353
optional p354,355
many ::356,357
many p358,359
many1 ::360,361
many1 p362,363
skipMany ::364,365
skipMany p366,367
skipMany1 ::368,369
skipMany1 p370,371
sepBy ::372,373
sepBy p375,376
sepBy1 ::377,378
sepBy1 p380,381
endBy ::382,383
endBy p385,386
endBy1 ::387,388
endBy1 p390,391
chainr ::392,393
chainr p397,398
chainl ::399,400
chainl p404,405
chainr1 ::406,407
chainr1 p408,409
chainl1 ::415,416
chainl1 p417,418
manyTill ::424,425
manyTill ::426,427
manyTill p430,431
readP_to_S ::437,438
readP_to_S ::439,440
readP_to_S (R445,446
readS_to_P ::447,448
readS_to_P r451,452
>  type464,465
>	 ,517,518
>      [(this, drop (length this) s) | this `isPrefixOf` s]526,527

/Users/ismael/.haskdogs/base-4.6.0.1/Text/ParserCombinators/ReadPrec.hs,697
module Text.ParserCombinators.ReadPrec17,18
newtype ReadPrec a72,73
newtype ReadPrec a = P (Prec72,73
instance Functor76,77
type Prec =90,91
minPrec ::92,93
minPrec =93,94
lift ::98,99
lift m100,101
step ::102,103
step (P104,105
reset ::106,107
reset (P108,109
prec ::110,111
prec n117,118
get ::122,123
get =125,126
look ::127,128
look =130,131
(+++) :: ReadPrec132,133
P f1134,135
(<++) :: ReadPrec136,137
pfail ::142,143
pfail =144,145
choice ::146,147
choice ps148,149
readPrec_to_P ::153,154
readPrec_to_P (P154,155
readP_to_Prec ::156,157
readP_to_Prec f157,158
readPrec_to_S ::159,160
readPrec_to_S (P160,161
readS_to_Prec ::162,163
readS_to_Prec f163,164

/Users/ismael/.haskdogs/base-4.6.0.1/Text/Printf.hs,1397
module Text.Printf(19,20
printf ::81,82
printf fmts82,83
hPrintf ::86,87
hPrintf hdl87,88
class PrintfType t94,95
    spr ::95,96
class HPrintfType t100,101
    hspr ::101,102
instance PrintfType104,105
class PrintfArg a126,127
    toUPrintf ::127,128
uInteger ::180,181
uInteger x181,182
class IsChar c183,184
    toChar ::184,185
    fromChar ::185,186
data UPrintf =193,194
data UPrintf = UChar Char193,194
data UPrintf = UChar Char | UString String193,194
data UPrintf = UChar Char | UString String | UInteger Integer193,194
data UPrintf = UChar Char | UString String | UInteger Integer Integer | UFloat Float193,194
data UPrintf = UChar Char | UString String | UInteger Integer Integer | UFloat Float | UDouble Double193,194
uprintf ::195,196
uprintf ""196,197
fmt ::203,204
fmt cs204,205
fmti ::237,238
fmti prec238,239
fmtu ::242,243
fmtu b243,244
integral_prec ::247,248
integral_prec prec248,249
toint ::250,251
toint (UInteger251,252
tostr ::255,256
tostr n256,257
itosb ::259,260
itosb b260,261
stoi ::267,268
stoi a268,269
getSpecs ::271,272
getSpecs _272,273
getStar ::299,300
getStar us300,301
dfmt' ::306,307
dfmt' c307,308
dfmt ::311,312
dfmt c312,313
perror ::324,325
perror s325,326
fmterr, argerr, baderr :: a326,327
fmterr, argerr, baderr ::326,327
fmterr, argerr,326,327
fmterr =327,328
argerr =328,329
baderr =329,330

/Users/ismael/.haskdogs/base-4.6.0.1/Text/Read/Lex.hs,1742
module Text.Read.Lex17,18
data Lexeme62,63
  = Char   Char63,64
  | String String64,65
  | Punc   String65,66
  | Punc   String       -- ^ Punctuation or reserved symbol, e.g. @(@, @::@65,66
  | Ident  String66,67
  | Symbol String67,68
  | Number Number68,69
  | EOF69,70
data Number =72,73
data Number = MkNumber Int72,73
            | MkDecimal Digits74,75
numberToInteger ::79,80
numberToInteger (MkNumber80,81
numberToRangedRational ::95,96
numberToRangedRational ::95,96
numberToRational ::124,125
numberToRational (MkNumber125,126
lex ::143,144
lex =144,145
hsLex ::146,147
hsLex =148,149
lexToken ::152,153
lexToken =153,154
lexEOF ::164,165
lexEOF =165,166
lexPunc ::172,173
lexPunc =173,174
lexSymbol ::182,183
lexSymbol =183,184
lexId ::196,197
lexId =197,198
lexLitChar ::208,209
lexLitChar =209,210
lexChar ::216,217
lexChar =217,218
lexCharE ::219,220
lexCharE =220,221
lexString ::336,337
lexString =337,338
type Base   =362,363
type Digits =363,364
lexNumber ::365,366
lexNumber366,367
lexHexOct ::371,372
lexHexOct372,373
lexBaseChar ::378,379
lexBaseChar =380,381
lexDecNumber ::388,389
lexDecNumber =389,390
lexFrac ::395,396
lexFrac =398,399
lexExp ::402,403
lexExp =403,404
lexDigits ::412,413
lexDigits base414,415
lexInteger ::425,426
lexInteger base426,427
val ::430,431
val _432,433
fracExp ::445,446
fracExp exp446,447
valDig ::454,455
valDig 8455,456
valDecDig ::469,470
valDecDig c470,471
readIntP ::477,478
readIntP base478,479
readIntP' ::482,483
readIntP' base483,484
readOctP, readDecP, readHexP :: (Eq a,488,489
readOctP, readDecP, readHexP ::488,489
readOctP, readDecP,488,489
readOctP =489,490
readDecP =490,491
readHexP =491,492

/Users/ismael/.haskdogs/base-4.6.0.1/Text/Read.hs,223
module Text.Read (23,24
lexP ::65,66
lexP =66,67
parens ::68,69
parens p69,70
reads ::84,85
reads =85,86
readEither ::90,91
readEither s91,92
readMaybe ::104,105
readMaybe s105,106
read ::111,112
read s112,113

/Users/ismael/.haskdogs/base-4.6.0.1/Text/Show/Functions.hs,56
module Text.Show.Functions ()22,23
instance Show27,28

/Users/ismael/.haskdogs/base-4.6.0.1/Text/Show.hs,107
module Text.Show (18,19
showListWith ::38,39
showListWith =39,40
showList__ ::42,43
showList__ _43,44

/Users/ismael/.haskdogs/base-4.6.0.1/Unsafe/Coerce.hs,85
module Unsafe.Coerce (unsafeCoerce)31,32
unsafeCoerce ::35,36
unsafeCoerce x36,37

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/IntMap.hs,528
module Main where1,2
main =13,14
add3 ::49,50
add3 x50,51
lookup ::53,54
lookup xs54,55
ins ::56,57
ins xs57,58
insWith ::59,60
insWith xs60,61
insWithKey ::62,63
insWithKey xs63,64
insWith' ::65,66
insWith' xs66,67
insWithKey' ::68,69
insWithKey' xs69,70
data PairS a71,72
data PairS a b = PS !a71,72
insLookupWithKey ::73,74
insLookupWithKey xs74,75
del ::79,80
del xs80,81
upd ::82,83
upd xs83,84
upd' ::85,86
upd' xs86,87
alt ::88,89
alt xs89,90
maybeDel ::91,92
maybeDel n | n `mod` 3 ==92,93

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/IntSet.hs,119
module Main where2,3
main =12,13
member ::40,41
member xs41,42
ins ::43,44
ins xs44,45
del ::46,47
del xs47,48

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/LookupGE/IntMap.hs,105
module Main where1,2
main ::14,15
main =15,16
fge ::44,45
fge fun45,46
fge2 ::48,49
fge2 fun49,50

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/LookupGE/LookupGE_IntMap.hs,370
module LookupGE_IntMap where1,2
lookupGE1 ::9,10
lookupGE1 k10,11
lookupGE2 ::15,16
lookupGE2 k16,17
lookupGE3 ::37,38
lookupGE3 k38,39
lookupGE4 ::53,54
lookupGE4 k54,55
findMinMaybe ::78,79
findMinMaybe m79,80
prop_lookupGE12 ::88,89
prop_lookupGE12 x89,90
prop_lookupGE13 ::91,92
prop_lookupGE13 x92,93
prop_lookupGE14 ::94,95
prop_lookupGE14 x95,96

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/LookupGE/LookupGE_Map.hs,368
module LookupGE_Map where1,2
lookupGE1 ::8,9
lookupGE1 k9,10
lookupGE2 ::15,16
lookupGE2 =16,17
lookupGE3 ::28,29
lookupGE3 =29,30
lookupGE4 ::39,40
lookupGE4 k40,41
findMinMaybe ::59,60
findMinMaybe (Bin60,61
prop_lookupGE12 ::69,70
prop_lookupGE12 x70,71
prop_lookupGE13 ::72,73
prop_lookupGE13 x73,74
prop_lookupGE14 ::75,76
prop_lookupGE14 x76,77

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/LookupGE/Map.hs,105
module Main where1,2
main ::14,15
main =15,16
fge ::44,45
fge fun45,46
fge2 ::48,49
fge2 fun49,50

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/Map.hs,648
module Main where1,2
main =13,14
add3 ::72,73
add3 x73,74
lookup ::76,77
lookup xs77,78
lookupIndex ::79,80
lookupIndex xs80,81
ins ::82,83
ins xs83,84
insWith ::85,86
insWith xs86,87
insWithKey ::88,89
insWithKey xs89,90
insWith' ::91,92
insWith' xs92,93
insWithKey' ::94,95
insWithKey' xs95,96
data PairS a97,98
data PairS a b = PS !a97,98
insLookupWithKey ::99,100
insLookupWithKey xs100,101
insLookupWithKey' ::105,106
insLookupWithKey' xs106,107
del ::111,112
del xs112,113
upd ::114,115
upd f115,116
upd' ::117,118
upd' f118,119
alt ::120,121
alt f121,122
maybeDel ::123,124
maybeDel n | n `mod` 3 ==124,125

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/Sequence.hs,69
module Main where1,2
main =10,11
shuffle ::30,31
shuffle ps31,32

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/Set.hs,119
module Main where3,4
main =13,14
member ::41,42
member xs42,43
ins ::44,45
ins xs45,46
del ::47,48
del xs48,49

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/SetOperations/SetOperations-IntMap.hs,33
module Main where0,1
main =5,6

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/SetOperations/SetOperations-IntSet.hs,33
module Main where0,1
main =5,6

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/SetOperations/SetOperations-Map.hs,33
module Main where0,1
main =5,6

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/SetOperations/SetOperations-Set.hs,33
module Main where0,1
main =5,6

/Users/ismael/.haskdogs/containers-0.5.0.0/benchmarks/SetOperations/SetOperations.hs,77
module SetOperations (benchmark)2,3
benchmark ::7,8
benchmark fromList8,9

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/Graph.hs,2367
module Data.Graph(24,25
data SCC vertex86,87
data SCC vertex = AcyclicSCC vertex86,87
                | CyclicSCC  [vertex]88,89
instance NFData91,92
flattenSCCs ::96,97
flattenSCCs =97,98
flattenSCC ::100,101
flattenSCC (AcyclicSCC101,102
stronglyConnComp edges0115,116
stronglyConnCompR []136,137
type Vertex  =156,157
type Table a158,159
type Table a =158,159
type Graph   =161,162
type Bounds  =163,164
type Edge    =165,166
vertices ::168,169
vertices  =169,170
edges    ::172,173
edges g173,174
mapT    ::175,176
mapT f176,177
buildG ::179,180
buildG bounds0180,181
transposeG  ::183,184
transposeG g184,185
reverseE    ::186,187
reverseE g187,188
outdegree ::190,191
outdegree  =191,192
indegree ::195,196
indegree  =196,197
graphFromEdges' x205,206
graphFromEdges edges0216,217
dff          ::251,252
dff g252,253
dfs          ::257,258
dfs g258,259
generate     ::260,261
generate g261,262
prune        ::263,264
prune bnds264,265
chop         ::266,267
chop []267,268
newtype SetM s284,285
newtype SetM s a = SetM {284,285
newtype SetM s a = SetM { runSetM ::284,285
run          ::290,291
run bnds291,292
contains     ::293,294
contains v294,295
include      ::296,297
include v297,298
newtype SetM s303,304
newtype SetM s a = SetM {303,304
newtype SetM s a = SetM { runSetM ::303,304
run          ::309,310
contains     ::312,313
include      ::315,316
preorder' ::330,331
preorder' (Node331,332
preorderF' ::333,334
preorderF' ts334,335
preorderF ::336,337
preorderF ts337,338
tabulate        ::339,340
tabulate bnds340,341
preArr          ::342,343
preArr bnds343,344
postorder ::349,350
postorder (Node350,351
postorderF   ::352,353
postorderF ts353,354
postOrd ::355,356
postOrd g356,357
topSort      ::361,362
topSort       =362,363
components   ::371,372
components    =372,373
undirected   ::374,375
undirected g375,376
scc  ::380,381
scc g381,382
tree              ::390,391
tree bnds391,392
back              ::395,396
back g396,397
cross             ::399,400
cross g400,401
forward           ::403,404
forward g404,405
reachable    ::413,414
reachable g414,415
path         ::417,418
path g418,419
bcc ::427,428
bcc g428,429
do_label ::432,433
do_label g433,434
bicomps ::438,439
bicomps (Node439,440
collect ::442,443
collect (Node443,444

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/IntMap/Base.hs,6566
module Data.IntMap.Base (47,48
type Nat =248,249
natFromInt ::250,251
natFromInt =251,252
intFromNat ::254,255
intFromNat =255,256
shiftRL, shiftLL :: Nat259,260
shiftRL, shiftLL259,260
shiftRL (W#264,265
shiftLL (W#265,266
data IntMap a281,282
data IntMap a = Bin {-#281,282
              | Tip {-#282,283
              | Nil283,284
type Prefix =285,286
type Mask   =286,287
type Key    =287,288
(!) :: IntMap299,300
m !300,301
(\\) :: IntMap303,304
m1 \\304,305
instance Monoid312,313
null ::361,362
null Nil362,363
size ::371,372
size t372,373
member ::384,385
member k385,386
notMember ::398,399
notMember k399,400
lookup ::404,405
lookup k405,406
find ::416,417
find k417,418
findWithDefault ::436,437
findWithDefault def437,438
lookupLT ::453,454
lookupLT k454,455
lookupGT ::472,473
lookupGT k473,474
lookupLE ::492,493
lookupLE k493,494
lookupGE ::512,513
lookupGE k513,514
unsafeFindMin ::527,528
unsafeFindMin Nil528,529
unsafeFindMax ::534,535
unsafeFindMax Nil535,536
empty ::547,548
empty548,549
singleton ::557,558
singleton k558,559
insert ::574,575
insert k575,576
insertWith ::597,598
insertWith f598,599
insertWithKey ::612,613
insertWithKey f613,614
insertLookupWithKey ::639,640
insertLookupWithKey f640,641
delete ::662,663
delete k663,664
adjust ::681,682
adjust f682,683
adjustWithKey ::693,694
adjustWithKey f694,695
update ::706,707
update f707,708
updateWithKey ::719,720
updateWithKey f720,721
updateLookupWithKey ::743,744
updateLookupWithKey f744,745
alter ::762,763
alter f763,764
unions ::793,794
unions xs794,795
unionsWith ::802,803
unionsWith f803,804
union ::812,813
union m1813,814
unionWith ::820,821
unionWith f821,822
unionWithKey ::829,830
unionWithKey f830,831
difference ::840,841
difference m1841,842
differenceWith ::850,851
differenceWith f851,852
differenceWithKey ::863,864
differenceWithKey f864,865
intersection ::875,876
intersection m1876,877
intersectionWith ::883,884
intersectionWith f884,885
intersectionWithKey ::892,893
intersectionWithKey f893,894
mergeWithKey ::936,937
mergeWithKey f938,939
mergeWithKey' ::953,954
mergeWithKey' bin'956,957
updateMinWithKey ::1006,1007
updateMinWithKey f1007,1008
updateMaxWithKey ::1022,1023
updateMaxWithKey f1023,1024
maxViewWithKey ::1039,1040
maxViewWithKey t1040,1041
minViewWithKey ::1055,1056
minViewWithKey t1056,1057
updateMax ::1070,1071
updateMax f1071,1072
updateMin ::1078,1079
updateMin f1079,1080
first ::1082,1083
first f1083,1084
maxView ::1087,1088
maxView t1088,1089
minView ::1092,1093
minView t1093,1094
deleteFindMax ::1096,1097
deleteFindMax =1097,1098
deleteFindMin ::1100,1101
deleteFindMin =1101,1102
findMin ::1104,1105
findMin Nil1105,1106
findMax ::1115,1116
findMax Nil1116,1117
deleteMin ::1127,1128
deleteMin =1128,1129
deleteMax ::1132,1133
deleteMax =1133,1134
isProperSubmapOf ::1141,1142
isProperSubmapOf m11142,1143
{- |1145,1146
isProperSubmapOfBy ::1161,1162
isProperSubmapOfBy predicate1162,1163
submapCmp ::1167,1168
submapCmp predicate1168,1169
isSubmapOf ::1196,1197
isSubmapOf m11197,1198
isSubmapOfBy ::1216,1217
isSubmapOfBy predicate1217,1218
map ::1235,1236
map f1236,1237
mapWithKey ::1247,1248
mapWithKey f1248,1249
traverseWithKey ::1262,1263
traverseWithKey f1263,1264
mapAccum ::1275,1276
mapAccum f1276,1277
mapAccumWithKey ::1284,1285
mapAccumWithKey f1285,1286
mapAccumL ::1290,1291
mapAccumL f1291,1292
mapAccumRWithKey ::1301,1302
mapAccumRWithKey f1302,1303
mapKeys ::1321,1322
mapKeys f1322,1323
mapKeysWith ::1334,1335
mapKeysWith c1335,1336
mapKeysMonotonic ::1353,1354
mapKeysMonotonic f1354,1355
filter ::1365,1366
filter p1366,1367
filterWithKey ::1373,1374
filterWithKey predicate1374,1375
partition ::1391,1392
partition p1392,1393
partitionWithKey ::1403,1404
partitionWithKey predicate1404,1405
mapMaybe ::1420,1421
mapMaybe f1421,1422
mapMaybeWithKey ::1428,1429
mapMaybeWithKey f1429,1430
mapEither ::1445,1446
mapEither f1446,1447
mapEitherWithKey ::1458,1459
mapEitherWithKey f1459,1460
split ::1479,1480
split k1480,1481
splitLookup ::1503,1504
splitLookup k1504,1505
foldr ::1530,1531
foldr f1531,1532
foldr' ::1544,1545
foldr' f1545,1546
foldl ::1565,1566
foldl f1566,1567
foldl' ::1579,1580
foldl' f1580,1581
foldrWithKey ::1601,1602
foldrWithKey f1602,1603
foldrWithKey' ::1615,1616
foldrWithKey' f1616,1617
foldlWithKey ::1637,1638
foldlWithKey f1638,1639
foldlWithKey' ::1651,1652
foldlWithKey' f1652,1653
elems ::1673,1674
elems =1674,1675
keys  ::1682,1683
keys =1683,1684
assocs ::1691,1692
assocs =1692,1693
keysSet ::1699,1700
keysSet Nil1700,1701
fromSet ::1716,1717
fromSet _1717,1718
toList ::1746,1747
toList =1747,1748
toAscList ::1754,1755
toAscList =1755,1756
toDescList ::1762,1763
toDescList =1763,1764
foldrFB ::1769,1770
foldrFB =1770,1771
foldlFB ::1772,1773
foldlFB =1773,1774
fromList ::1807,1808
fromList xs1808,1809
fromListWith ::1818,1819
fromListWith f1819,1820
fromListWithKey ::1828,1829
fromListWithKey f1829,1830
fromAscList ::1840,1841
fromAscList xs1841,1842
fromAscListWith ::1850,1851
fromAscListWith f1851,1852
fromAscListWithKey ::1861,1862
fromAscListWithKey _1862,1863
fromDistinctAscList ::1877,1878
fromDistinctAscList []1878,1879
data Stack a1898,1899
data Stack a = Push {-#1898,1899
data Stack a = Push {-# UNPACK #-} !Prefix !(IntMap a) !(Stack a) | Nada1898,1899
equal ::1908,1909
equal (Bin1909,1910
nequal ::1916,1917
nequal (Bin1917,1918
join ::1977,1978
join p11978,1979
bin ::1989,1990
bin _1990,1991
zero ::1999,2000
zero i2000,2001
nomatch,match :: Key ->2004,2005
nomatch,match ::2004,2005
nomatch i2005,2006
match i2009,2010
mask ::2013,2014
mask i2014,2015
maskW ::2022,2023
maskW i2023,2024
shorter ::2027,2028
shorter m12028,2029
branchMask ::2032,2033
branchMask p12033,2034
highestBitMask ::2079,2080
highestBitMask x02080,2081
foldlStrict ::2097,2098
foldlStrict f2098,2099
showTree ::2109,2110
showTree s2110,2111
showTreeWith ::2119,2120
showTreeWith hang2120,2121
showsTree ::2124,2125
showsTree wide2125,2126
showsTreeHang ::2137,2138
showsTreeHang wide2138,2139
showBin ::2150,2151
showBin _2151,2152
showWide ::2154,2155
showWide wide2155,2156
showsBars ::2159,2160
showsBars bars2160,2161
node ::2165,2166
node           =2166,2167
withBar, withEmpty :: [String]2168,2169
withBar, withEmpty2168,2169
withBar bars2169,2170
withEmpty bars2170,2171

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/IntMap/Lazy.hs,32
module Data.IntMap.Lazy (51,52

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/IntMap/Strict.hs,2198
module Data.IntMap.Strict (57,58
findWithDefault ::288,289
findWithDefault def289,290
singleton ::306,307
singleton k307,308
insert ::323,324
insert k324,325
insertWith ::346,347
insertWith f347,348
insertWithKey ::364,365
insertWithKey f365,366
insertLookupWithKey ::391,392
insertLookupWithKey f392,393
adjust ::414,415
adjust f415,416
adjustWithKey ::426,427
adjustWithKey f427,428
update ::439,440
update f440,441
updateWithKey ::452,453
updateWithKey f453,454
updateLookupWithKey ::476,477
updateLookupWithKey f477,478
alter ::495,496
alter f496,497
unionsWith ::524,525
unionsWith f525,526
unionWith ::532,533
unionWith f533,534
unionWithKey ::541,542
unionWithKey f542,543
differenceWith ::555,556
differenceWith f556,557
differenceWithKey ::568,569
differenceWithKey f569,570
intersectionWith ::580,581
intersectionWith f581,582
intersectionWithKey ::589,590
intersectionWithKey f590,591
mergeWithKey ::633,634
mergeWithKey f635,636
updateMinWithKey ::651,652
updateMinWithKey f652,653
updateMaxWithKey ::667,668
updateMaxWithKey f668,669
updateMax ::683,684
updateMax f684,685
updateMin ::691,692
updateMin f692,693
map ::702,703
map f703,704
mapWithKey ::714,715
mapWithKey f715,716
mapAccum ::727,728
mapAccum f728,729
mapAccumWithKey ::736,737
mapAccumWithKey f737,738
mapAccumL ::744,745
mapAccumL f745,746
mapAccumRWithKey ::755,756
mapAccumRWithKey f756,757
mapKeysWith ::774,775
mapKeysWith c775,776
mapMaybe ::785,786
mapMaybe f786,787
mapMaybeWithKey ::793,794
mapMaybeWithKey f794,795
mapEither ::810,811
mapEither f811,812
mapEitherWithKey ::823,824
mapEitherWithKey f824,825
fromSet ::844,845
fromSet _845,846
fromList ::874,875
fromList xs875,876
fromListWith ::885,886
fromListWith f886,887
fromListWithKey ::894,895
fromListWithKey f895,896
fromAscList ::906,907
fromAscList xs907,908
fromAscListWith ::916,917
fromAscListWith f917,918
fromAscListWithKey ::926,927
fromAscListWithKey _927,928
fromDistinctAscList ::942,943
fromDistinctAscList []943,944
data Stack a963,964
data Stack a = Push {-#963,964
data Stack a = Push {-# UNPACK #-} !Prefix !(IntMap a) !(Stack a) | Nada963,964

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/IntMap.hs,181
module Data.IntMap48,49
insertWith' ::65,66
insertWith' =66,67
insertWithKey' ::74,75
insertWithKey' =75,76
fold ::83,84
fold =84,85
foldWithKey ::92,93
foldWithKey =93,94

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/IntSet/Base.hs,4600
module Data.IntSet.Base (77,78
type Nat =199,200
natFromInt ::201,202
natFromInt i202,203
intFromNat ::205,206
intFromNat w206,207
shiftRL, shiftLL :: Nat210,211
shiftRL, shiftLL210,211
shiftRL (W#215,216
shiftLL (W#216,217
(\\) :: IntSet228,229
m1 \\229,230
data IntSet =238,239
data IntSet = Bin {-#238,239
            | Tip {-#246,247
            | Nil250,251
type Prefix =257,258
type Mask   =258,259
type BitMap =259,260
instance Monoid261,262
null ::287,288
null Nil288,289
size ::293,294
size t294,295
member ::303,304
member x304,305
notMember ::314,315
notMember k315,316
lookupLT ::323,324
lookupLT x324,325
lookupGT ::344,345
lookupGT x345,346
lookupLE ::366,367
lookupLE x367,368
lookupGE ::388,389
lookupGE x389,390
unsafeFindMin ::406,407
unsafeFindMin Nil407,408
unsafeFindMax ::413,414
unsafeFindMax Nil414,415
empty ::422,423
empty423,424
singleton ::428,429
singleton x429,430
insert ::438,439
insert x439,440
insertBM ::442,443
insertBM kx443,444
delete ::456,457
delete x457,458
deleteBM ::461,462
deleteBM kx462,463
unions ::478,479
unions xs479,480
union ::484,485
union t1@(Bin485,486
difference ::509,510
difference t1@(Bin510,511
intersection ::543,544
intersection t1@(Bin544,545
isProperSubsetOf ::582,583
isProperSubsetOf t1583,584
subsetCmp ::588,589
subsetCmp t1@(Bin589,590
isSubsetOf ::623,624
isSubsetOf t1@(Bin624,625
filter ::643,644
filter predicate644,645
partition ::656,657
partition predicate657,658
split ::677,678
split x678,679
splitMember ::697,698
splitMember x698,699
maxView ::723,724
maxView t724,725
minView ::735,736
minView t736,737
deleteFindMin ::748,749
deleteFindMin =749,750
deleteFindMax ::754,755
deleteFindMax =755,756
findMin ::759,760
findMin Nil760,761
findMax ::770,771
findMax Nil771,772
deleteMin ::782,783
deleteMin =783,784
deleteMax ::786,787
deleteMax =787,788
map ::799,800
map f800,801
fold ::810,811
fold =811,812
foldr ::820,821
foldr f821,822
foldr' ::834,835
foldr' f835,836
foldl ::852,853
foldl f853,854
foldl' ::867,868
foldl' f868,869
elems ::884,885
elems885,886
toList ::892,893
toList893,894
toAscList ::898,899
toAscList =899,900
toDescList ::903,904
toDescList =904,905
foldrFB ::910,911
foldrFB =911,912
foldlFB ::913,914
foldlFB =914,915
{-# RULES929,930
fromList ::937,938
fromList xs938,939
fromAscList ::945,946
fromAscList []946,947
fromDistinctAscList ::956,957
fromDistinctAscList []957,958
data Stack =979,980
data Stack = Push {-#979,980
data Stack = Push {-# UNPACK #-} !Prefix !IntSet !Stack | Nada979,980
equal ::989,990
equal (Bin990,991
nequal ::997,998
nequal (Bin998,999
showTree ::1059,1060
showTree s1060,1061
showTreeWith ::1069,1070
showTreeWith hang1070,1071
showsTree ::1074,1075
showsTree wide1075,1076
showsTreeHang ::1088,1089
showsTreeHang wide1089,1090
showBin ::1102,1103
showBin _1103,1104
showWide ::1106,1107
showWide wide1107,1108
showsBars ::1111,1112
showsBars bars1112,1113
showsBitMap ::1117,1118
showsBitMap =1118,1119
showBitMap ::1120,1121
showBitMap w1121,1122
node ::1123,1124
node           =1124,1125
withBar, withEmpty :: [String]1126,1127
withBar, withEmpty1126,1127
withBar bars1127,1128
withEmpty bars1128,1129
join ::1137,1138
join p11138,1139
bin ::1149,1150
bin _1150,1151
tip ::1158,1159
tip _1159,1160
suffixBitMask ::1168,1169
suffixBitMask =1169,1170
prefixBitMask ::1172,1173
prefixBitMask =1173,1174
prefixOf ::1176,1177
prefixOf x1177,1178
suffixOf ::1180,1181
suffixOf x1181,1182
bitmapOfSuffix ::1184,1185
bitmapOfSuffix s1185,1186
bitmapOf ::1188,1189
bitmapOf x1189,1190
zero ::1196,1197
zero i1197,1198
nomatch,match :: Int ->1201,1202
nomatch,match ::1201,1202
nomatch i1202,1203
match i1206,1207
mask ::1212,1213
mask i1213,1214
maskW ::1220,1221
maskW i1221,1222
shorter ::1225,1226
shorter m11226,1227
branchMask ::1230,1231
branchMask p11231,1232
highestBitMask ::1277,1278
highestBitMask x01278,1279
lowestBitSet ::1301,1302
highestBitSet ::1302,1303
foldlBits ::1303,1304
foldl'Bits ::1304,1305
foldrBits ::1305,1306
foldr'Bits ::1306,1307
indexOfTheOnlyBit ::1329,1330
indexOfTheOnlyBit bitmask1331,1332
lowestBitMask ::1350,1351
lowestBitMask x1351,1352
revNat ::1355,1356
revNat x11357,1358
lowestBitSet x1371,1372
highestBitSet x1373,1374
foldlBits prefix1375,1376
foldl'Bits prefix1381,1382
foldrBits prefix1388,1389
foldr'Bits prefix1394,1395
bitcount ::1469,1470
bitcount a01470,1471
foldlStrict ::1479,1480
foldlStrict f1480,1481

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/IntSet.hs,27
module Data.IntSet (48,49

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/Map/Base.hs,6871
module Data.Map.Base (94,95
(!) :: Ord299,300
m !300,301
(\\) :: Ord306,307
m1 \\307,308
data Map k318,319
data Map k a  = Bin {-#318,319
              | Tip319,320
type Size     =321,322
instance (Ord323,324
null ::354,355
null Tip355,356
size ::365,366
size Tip366,367
lookup ::399,400
lookup =400,401
member ::418,419
member =419,420
notMember ::438,439
notMember k439,440
find ::448,449
find =449,450
findWithDefault ::469,470
findWithDefault =470,471
lookupLT ::489,490
lookupLT =490,491
lookupGT ::512,513
lookupGT =513,514
lookupLE ::536,537
lookupLE =537,538
lookupGE ::562,563
lookupGE =563,564
empty ::590,591
empty =591,592
singleton ::599,600
singleton k600,601
insert ::616,617
insert =617,618
insertR ::637,638
insertR =638,639
insertWith ::664,665
insertWith f665,666
insertWithKey ::685,686
insertWithKey =686,687
insertLookupWithKey ::719,720
insertLookupWithKey =721,722
delete ::750,751
delete =751,752
adjust ::775,776
adjust f776,777
adjustWithKey ::791,792
adjustWithKey f792,793
update ::808,809
update f809,810
updateWithKey ::827,828
updateWithKey =828,829
updateLookupWithKey ::856,857
updateLookupWithKey =857,858
alter ::888,889
alter =889,890
findIndex ::922,923
findIndex =923,924
lookupIndex ::946,947
lookupIndex =947,948
elemAt ::968,969
elemAt _970,971
updateAt ::991,992
updateAt f992,993
deleteAt ::1012,1013
deleteAt i1013,1014
findMin ::1032,1033
findMin (Bin1033,1034
findMax ::1042,1043
findMax (Bin1043,1044
deleteMin ::1052,1053
deleteMin (Bin1053,1054
deleteMax ::1062,1063
deleteMax (Bin1063,1064
updateMin ::1072,1073
updateMin f1073,1074
updateMax ::1081,1082
updateMax f1082,1083
updateMinWithKey ::1091,1092
updateMinWithKey _1092,1093
updateMaxWithKey ::1103,1104
updateMaxWithKey _1104,1105
minViewWithKey ::1116,1117
minViewWithKey Tip1117,1118
maxViewWithKey ::1126,1127
maxViewWithKey Tip1127,1128
minView ::1137,1138
minView Tip1138,1139
maxView ::1147,1148
maxView Tip1148,1149
first ::1152,1153
first f1153,1154
unions ::1166,1167
unions ts1167,1168
unionsWith ::1179,1180
unionsWith f1180,1181
union ::1195,1196
union Tip1196,1197
hedgeUnion ::1204,1205
hedgeUnion _1205,1206
unionWith ::1223,1224
unionWith f1224,1225
unionWithKey ::1237,1238
unionWithKey f1238,1239
difference ::1252,1253
difference Tip1253,1254
hedgeDiff ::1260,1261
hedgeDiff _1261,1262
differenceWith ::1281,1282
differenceWith f1282,1283
differenceWithKey ::1298,1299
differenceWithKey f1299,1300
intersection ::1314,1315
intersection Tip1315,1316
hedgeInt ::1322,1323
hedgeInt _1323,1324
intersectionWith ::1337,1338
intersectionWith f1338,1339
intersectionWithKey ::1351,1352
intersectionWithKey f1352,1353
mergeWithKey ::1398,1399
mergeWithKey f1400,1401
isSubmapOf ::1428,1429
isSubmapOf m11429,1430
{- |1434,1435
isSubmapOfBy ::1452,1453
isSubmapOfBy f1453,1454
submap' ::1459,1460
submap' _1460,1461
isProperSubmapOf ::1474,1475
isProperSubmapOf m11475,1476
isProperSubmapOfBy ::1499,1500
isProperSubmapOfBy f1500,1501
filter ::1515,1516
filter p1516,1517
filterWithKey ::1523,1524
filterWithKey _1524,1525
partition ::1537,1538
partition p1538,1539
partitionWithKey ::1549,1550
partitionWithKey _1550,1551
mapMaybe ::1563,1564
mapMaybe f1564,1565
mapMaybeWithKey ::1571,1572
mapMaybeWithKey _1572,1573
mapEither ::1586,1587
mapEither f1587,1588
mapEitherWithKey ::1599,1600
mapEitherWithKey _1600,1601
map ::1615,1616
map _1616,1617
mapWithKey ::1624,1625
mapWithKey _1625,1626
traverseWithKey ::1636,1637
traverseWithKey f1637,1638
mapAccum ::1649,1650
mapAccum f1650,1651
mapAccumWithKey ::1659,1660
mapAccumWithKey f1660,1661
mapAccumL ::1665,1666
mapAccumL _1666,1667
mapAccumRWithKey ::1675,1676
mapAccumRWithKey _1676,1677
mapKeys ::1694,1695
mapKeys f1695,1696
mapKeysWith ::1710,1711
mapKeysWith c1711,1712
mapKeysMonotonic ::1735,1736
mapKeysMonotonic _1736,1737
foldr ::1753,1754
foldr f1754,1755
foldr' ::1763,1764
foldr' f1764,1765
foldl ::1780,1781
foldl f1781,1782
foldl' ::1790,1791
foldl' f1791,1792
foldrWithKey ::1808,1809
foldrWithKey f1809,1810
foldrWithKey' ::1818,1819
foldrWithKey' f1819,1820
foldlWithKey ::1836,1837
foldlWithKey f1837,1838
foldlWithKey' ::1846,1847
foldlWithKey' f1847,1848
elems ::1864,1865
elems =1865,1866
keys  ::1873,1874
keys =1874,1875
assocs ::1882,1883
assocs m1883,1884
keysSet ::1891,1892
keysSet Tip1892,1893
fromSet ::1901,1902
fromSet _1902,1903
fromList ::1917,1918
fromList xs1918,1919
fromListWith ::1931,1932
fromListWith f1932,1933
fromListWithKey ::1944,1945
fromListWithKey f1945,1946
toList ::1958,1959
toList =1959,1960
toAscList ::1966,1967
toAscList =1967,1968
toDescList ::1974,1975
toDescList =1975,1976
foldrFB ::1981,1982
foldrFB =1982,1983
foldlFB ::1984,1985
foldlFB =1985,1986
fromAscList ::2027,2028
fromAscList xs2028,2029
fromAscListWith ::2041,2042
fromAscListWith f2042,2043
fromAscListWithKey ::2057,2058
fromAscListWithKey f2058,2059
fromDistinctAscList ::2084,2085
fromDistinctAscList xs2085,2086
  tree. Some functions take a `Maybe value` as2106,2107
data MaybeS a2122,2123
data MaybeS a = NothingS |2122,2123
data MaybeS a = NothingS | JustS !a2122,2123
trim ::2129,2130
trim NothingS2130,2131
trimLookupLo ::2146,2147
trimLookupLo lk2147,2148
filterGt ::2173,2174
filterGt NothingS2174,2175
filterLt ::2185,2186
filterLt NothingS2186,2187
split ::2210,2211
split k2211,2212
splitLookup ::2231,2232
splitLookup k2232,2233
join ::2275,2276
join kx2276,2277
insertMax,insertMin :: k ->2285,2286
insertMax,insertMin ::2285,2286
insertMax kx2286,2287
insertMin kx2292,2293
merge ::2301,2302
merge Tip2302,2303
glue ::2313,2314
glue Tip2314,2315
deleteFindMin ::2326,2327
deleteFindMin t2327,2328
deleteFindMax ::2338,2339
deleteFindMax t2339,2340
delta,ratio :: Int2379,2380
delta,ratio ::2379,2380
delta =2380,2381
ratio =2381,2382
balance ::2414,2415
balance k2415,2416
balanceL ::2453,2454
balanceL k2454,2455
balanceR ::2478,2479
balanceR k2479,2480
bin ::2505,2506
bin k2506,2507
showTree ::2574,2575
showTree m2575,2576
>  Map>2586,2587
showTreeWith ::2617,2618
showTreeWith showelem2618,2619
showsTree ::2622,2623
showsTree showelem2623,2624
showsTreeHang ::2635,2636
showsTreeHang showelem2636,2637
showWide ::2648,2649
showWide wide2649,2650
showsBars ::2653,2654
showsBars bars2654,2655
node ::2659,2660
node           =2660,2661
withBar, withEmpty :: [String]2662,2663
withBar, withEmpty2662,2663
withBar bars2663,2664
withEmpty bars2664,2665
valid ::2681,2682
valid t2682,2683
ordered ::2685,2686
ordered t2686,2687
balanced ::2695,2696
balanced t2696,2697
validsize ::2702,2703
validsize t2703,2704
foldlStrict ::2716,2717
foldlStrict f2717,2718

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/Map/Lazy.hs,29
module Data.Map.Lazy (47,48

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/Map/Strict.hs,2206
module Data.Map.Strict53,54
findWithDefault ::311,312
findWithDefault def312,313
singleton ::334,335
singleton k335,336
insert ::351,352
insert =352,353
insertWith ::378,379
insertWith f379,380
insertWithKey ::399,400
insertWithKey =400,401
insertLookupWithKey ::434,435
insertLookupWithKey =436,437
adjust ::467,468
adjust f468,469
adjustWithKey ::483,484
adjustWithKey f484,485
update ::500,501
update f501,502
updateWithKey ::519,520
updateWithKey =520,521
updateLookupWithKey ::548,549
updateLookupWithKey =549,550
alter ::582,583
alter =583,584
updateAt ::619,620
updateAt f620,621
updateMin ::641,642
updateMin f642,643
updateMax ::650,651
updateMax f651,652
updateMinWithKey ::660,661
updateMinWithKey _661,662
updateMaxWithKey ::672,673
updateMaxWithKey _673,674
unionsWith ::689,690
unionsWith f690,691
unionWith ::703,704
unionWith f704,705
unionWithKey ::717,718
unionWithKey f718,719
differenceWith ::738,739
differenceWith f739,740
differenceWithKey ::755,756
differenceWithKey f756,757
intersectionWith ::770,771
intersectionWith f771,772
intersectionWithKey ::784,785
intersectionWithKey f785,786
mergeWithKey ::831,832
mergeWithKey f833,834
mapMaybe ::864,865
mapMaybe f865,866
mapMaybeWithKey ::872,873
mapMaybeWithKey _873,874
mapEither ::887,888
mapEither f888,889
mapEitherWithKey ::900,901
mapEitherWithKey _901,902
map ::916,917
map _917,918
mapWithKey ::925,926
mapWithKey _926,927
mapAccum ::936,937
mapAccum f937,938
mapAccumWithKey ::946,947
mapAccumWithKey f947,948
mapAccumL ::952,953
mapAccumL _953,954
mapAccumRWithKey ::962,963
mapAccumRWithKey _963,964
mapKeysWith ::980,981
mapKeysWith c981,982
fromSet ::996,997
fromSet _997,998
fromList ::1012,1013
fromList xs1013,1014
fromListWith ::1026,1027
fromListWith f1027,1028
fromListWithKey ::1039,1040
fromListWithKey f1040,1041
{--------------------------------------------------------------------1048,1049
fromAscList ::1063,1064
fromAscList xs1064,1065
fromAscListWith ::1077,1078
fromAscListWith f1078,1079
fromAscListWithKey ::1093,1094
fromAscListWithKey f1094,1095
fromDistinctAscList ::1119,1120
fromDistinctAscList xs1120,1121

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/Map.hs,241
module Data.Map44,45
insertWith' ::66,67
insertWith' =67,68
insertWithKey' ::74,75
insertWithKey' =75,76
insertLookupWithKey' ::82,83
insertLookupWithKey' =84,85
fold ::92,93
fold =93,94
foldWithKey ::101,102
foldWithKey =102,103

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/Sequence.hs,6567
module Data.Sequence (40,41
infixr 5 `consTree`160,161
infixl 5 `snocTree`161,162
class Sized a167,168
    size ::168,169
newtype Seq a171,172
newtype Seq a = Seq (FingerTree171,172
instance Functor173,174
emptyConstr, consConstr :: Constr260,261
emptyConstr, consConstr260,261
emptyConstr =261,262
consConstr  =262,263
seqDataType ::264,265
seqDataType =265,266
data FingerTree a270,271
    = Empty271,272
    | Single a272,273
    | Deep {-#273,274
deep            ::325,326
deep pr326,327
pullL ::329,330
pullL s330,331
pullR ::335,336
pullR s336,337
deepL ::342,343
deepL Nothing343,344
deepR ::348,349
deepR pr349,350
data Digit a354,355
    = One a355,356
    | Two a356,357
    | Three a357,358
    | Four a358,359
digitToTree     ::410,411
digitToTree (One411,412
digitToTree' ::418,419
digitToTree' n419,420
data Node a426,427
    = Node2 {-#427,428
    | Node3 {-#428,429
node2           ::459,460
node2 a460,461
node3           ::463,464
node3 a464,465
nodeToDigit ::466,467
nodeToDigit (Node2467,468
newtype Elem a472,473
newtype Elem a  =  Elem {472,473
newtype Elem a  =  Elem { getElem ::472,473
newtype Id a497,498
newtype Id a = Id {runId497,498
newtype Id a = Id {runId :: a}497,498
newtype State s511,512
newtype State s a = State {runState511,512
newtype State s a = State {runState :: s511,512
execState ::527,528
execState m528,529
mapAccumL' ::531,532
mapAccumL' f532,533
applicativeTree ::543,544
applicativeTree n544,545
empty           ::573,574
empty           =574,575
singleton       ::577,578
singleton x578,579
replicate       ::581,582
replicate n582,583
replicateA ::590,591
replicateA n591,592
replicateM ::598,599
replicateM n599,600
(<|)            :: a605,606
x <|606,607
consTree        ::610,611
(|>)            :: Seq624,625
Seq xs625,626
snocTree        ::629,630
(><)            :: Seq642,643
appendTree0 ::647,648
appendTree0 Empty648,649
addDigits0 ::659,660
addDigits0 m1660,661
appendTree1 ::693,694
appendTree1 Empty694,695
addDigits1 ::705,706
addDigits1 m1706,707
appendTree2 ::739,740
appendTree2 Empty740,741
addDigits2 ::751,752
addDigits2 m1752,753
appendTree3 ::785,786
appendTree3 Empty786,787
addDigits3 ::797,798
addDigits3 m1798,799
appendTree4 ::831,832
appendTree4 Empty832,833
addDigits4 ::843,844
addDigits4 m1844,845
unfoldr ::880,881
unfoldr f881,882
unfoldl ::886,887
unfoldl f887,888
iterateN ::894,895
iterateN n895,896
null            ::904,905
null (Seq905,906
length          ::909,910
length (Seq910,911
data Maybe2 a914,915
data Maybe2 a b = Nothing2 |914,915
data Maybe2 a b = Nothing2 | Just2 a914,915
data ViewL a917,918
    = EmptyL        --918,919
    | a :<919,920
viewl           ::948,949
viewl (Seq949,950
viewLTree       ::955,956
viewLTree Empty956,957
data ViewR a967,968
    = EmptyR        --968,969
    | Seq a969,970
viewr           ::999,1000
viewr (Seq1000,1001
viewRTree       ::1006,1007
viewRTree Empty1007,1008
scanl ::1034,1035
scanl f1035,1036
scanl1 ::1040,1041
scanl1 f1041,1042
scanr ::1046,1047
scanr f1047,1048
scanr1 ::1050,1051
scanr1 f1051,1052
index           ::1061,1062
index (Seq1062,1063
data Place a1067,1068
data Place a = Place {-#1067,1068
lookupTree ::1074,1075
lookupTree _1075,1076
lookupNode ::1088,1089
lookupNode i1089,1090
lookupDigit ::1104,1105
lookupDigit i1105,1106
update          ::1130,1131
update i1131,1132
adjust          ::1135,1136
adjust f1136,1137
adjustTree      ::1142,1143
adjustTree _1144,1145
adjustNode      ::1156,1157
adjustNode f1157,1158
adjustDigit     ::1172,1173
adjustDigit f1173,1174
mapWithIndex ::1199,1200
mapWithIndex f1200,1201
take            ::1208,1209
take i1209,1210
drop            ::1215,1216
drop i1216,1217
splitAt                 ::1220,1221
splitAt i1221,1222
split ::1224,1225
split i1226,1227
data Split t1232,1233
data Split t a = Split t1232,1233
splitTree ::1239,1240
splitTree _1240,1241
splitNode ::1257,1258
splitNode i1258,1259
splitDigit ::1273,1274
splitDigit i1274,1275
tails                   ::1304,1305
tails (Seq1305,1306
inits                   ::1314,1315
inits (Seq1315,1316
tailsDigit ::1355,1356
tailsDigit (One1356,1357
initsDigit ::1361,1362
initsDigit (One1362,1363
tailsNode ::1367,1368
tailsNode (Node21368,1369
initsNode ::1371,1372
initsNode (Node21372,1373
tailsTree ::1379,1380
tailsTree _1380,1381
initsTree ::1394,1395
initsTree _1395,1396
foldlWithIndex ::1408,1409
foldlWithIndex f1409,1410
foldrWithIndex ::1414,1415
foldrWithIndex f1415,1416
listToMaybe' ::1419,1420
listToMaybe' =1420,1421
takeWhileL ::1425,1426
takeWhileL p1426,1427
takeWhileR ::1433,1434
takeWhileR p1434,1435
dropWhileL ::1438,1439
dropWhileL p1439,1440
dropWhileR ::1445,1446
dropWhileR p1446,1447
spanl ::1452,1453
spanl p1453,1454
spanr ::1459,1460
spanr p1460,1461
breakl ::1470,1471
breakl p1471,1472
breakr ::1475,1476
breakr p1476,1477
partition ::1482,1483
partition p1483,1484
filter ::1492,1493
filter p1493,1494
elemIndexL ::1499,1500
elemIndexL x1500,1501
elemIndexR ::1504,1505
elemIndexR x1505,1506
elemIndicesL ::1509,1510
elemIndicesL x1510,1511
elemIndicesR ::1514,1515
elemIndicesR x1515,1516
findIndexL ::1519,1520
findIndexL p1520,1521
findIndexR ::1524,1525
findIndexR p1525,1526
findIndicesL ::1530,1531
findIndicesL p1532,1533
findIndicesR ::1542,1543
findIndicesR p1544,1545
fromList        ::1558,1559
fromList        =1559,1560
reverse ::1566,1567
reverse (Seq1567,1568
reverseTree ::1569,1570
reverseTree _1570,1571
reverseDigit ::1578,1579
reverseDigit f1579,1580
reverseNode ::1584,1585
reverseNode f1585,1586
zip ::1595,1596
zip =1596,1597
zipWith ::1602,1603
zipWith f1603,1604
zipWith' ::1608,1609
zipWith' f1609,1610
zip3 ::1617,1618
zip3 =1618,1619
zipWith3 ::1623,1624
zipWith3 f1624,1625
zip4 ::1628,1629
zip4 =1629,1630
zipWith4 ::1634,1635
zipWith4 f1635,1636
sort ::1685,1686
sort =1686,1687
sortBy ::1692,1693
sortBy cmp1693,1694
unstableSort ::1700,1701
unstableSort =1701,1702
unstableSortBy ::1709,1710
unstableSortBy cmp1710,1711
fromList2 ::1717,1718
fromList2 n1718,1719
data PQueue e1724,1725
data PQueue e = PQueue e1724,1725
data PQL e1725,1726
data PQL e = Nil |1725,1726
data PQL e = Nil | {-# UNPACK1725,1726
draw ::1743,1744
draw (PQueue1744,1745
unrollPQ ::1757,1758
unrollPQ cmp1758,1759
toPQ ::1773,1774
toPQ _1774,1775
mergePQ ::1789,1790
mergePQ cmp1790,1791

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/Set/Base.hs,3643
module Data.Set.Base (92,93
(\\) :: Ord203,204
m1 \\204,205
data Set a215,216
data Set a    = Bin {-#215,216
              | Tip216,217
type Size     =218,219
instance Ord220,221
null ::255,256
null Tip256,257
size ::261,262
size Tip262,263
member ::267,268
member =268,269
notMember ::283,284
notMember a284,285
lookupLT ::295,296
lookupLT =296,297
lookupGT ::317,318
lookupGT =318,319
lookupLE ::340,341
lookupLE =341,342
lookupGE ::365,366
lookupGE =366,367
empty  ::389,390
empty =390,391
singleton ::394,395
singleton x395,396
insert ::406,407
insert =407,408
insertR ::426,427
insertR =427,428
delete ::445,446
delete =446,447
isProperSubsetOf ::465,466
isProperSubsetOf s1466,467
isSubsetOf ::475,476
isSubsetOf t1476,477
isSubsetOfX ::482,483
isSubsetOfX Tip483,484
findMin ::498,499
findMin (Bin499,500
findMax ::504,505
findMax (Bin505,506
deleteMin ::510,511
deleteMin (Bin511,512
deleteMax ::516,517
deleteMax (Bin517,518
unions ::525,526
unions =526,527
union ::535,536
union Tip536,537
hedgeUnion ::543,544
hedgeUnion _544,545
difference ::560,561
difference Tip561,562
hedgeDiff ::568,569
hedgeDiff _569,570
intersection ::592,593
intersection Tip593,594
hedgeInt ::600,601
hedgeInt _601,602
filter ::615,616
filter _616,617
partition ::624,625
partition _625,626
map ::641,642
map f642,643
mapMonotonic ::657,658
mapMonotonic _658,659
fold ::669,670
fold =670,671
foldr ::679,680
foldr f680,681
foldr' ::689,690
foldr' f690,691
foldl ::703,704
foldl f704,705
foldl' ::713,714
foldl' f714,715
elems ::726,727
elems =727,728
toList ::733,734
toList =734,735
toAscList ::737,738
toAscList =738,739
toDescList ::742,743
toDescList =743,744
foldrFB ::749,750
foldrFB =750,751
foldlFB ::752,753
foldlFB =753,754
{-# RULES768,769
fromList ::775,776
fromList =776,777
fromAscList ::791,792
fromAscList xs792,793
fromDistinctAscList ::813,814
fromDistinctAscList xs814,815
  tree. Some functions take a `Maybe value` as889,890
data MaybeS a905,906
data MaybeS a = NothingS |905,906
data MaybeS a = NothingS | JustS !a905,906
trim ::912,913
trim NothingS913,914
filterGt ::929,930
filterGt NothingS930,931
filterLt ::941,942
filterLt NothingS942,943
split ::959,960
split _960,961
splitMember ::972,973
splitMember _973,974
join ::1015,1016
join x1016,1017
insertMax,insertMin :: a ->1025,1026
insertMax,insertMin ::1025,1026
insertMax x1026,1027
insertMin x1032,1033
merge ::1041,1042
merge Tip1042,1043
glue ::1053,1054
glue Tip1054,1055
deleteFindMin ::1064,1065
deleteFindMin t1065,1066
deleteFindMax ::1074,1075
deleteFindMax t1075,1076
minView ::1083,1084
minView Tip1084,1085
maxView ::1089,1090
maxView Tip1090,1091
delta,ratio :: Int1126,1127
delta,ratio ::1126,1127
delta =1127,1128
ratio =1128,1129
balanceL ::1169,1170
balanceL x1170,1171
balanceR ::1194,1195
balanceR x1195,1196
bin ::1220,1221
bin x1221,1222
foldlStrict ::1229,1230
foldlStrict f1230,1231
showTree ::1241,1242
showTree s1242,1243
showTreeWith ::1281,1282
showTreeWith hang1282,1283
showsTree ::1286,1287
showsTree wide1287,1288
showsTreeHang ::1299,1300
showsTreeHang wide1300,1301
showWide ::1312,1313
showWide wide1313,1314
showsBars ::1317,1318
showsBars bars1318,1319
node ::1323,1324
node           =1324,1325
withBar, withEmpty :: [String]1326,1327
withBar, withEmpty1326,1327
withBar bars1327,1328
withEmpty bars1328,1329
valid ::1334,1335
valid t1335,1336
ordered ::1338,1339
ordered t1339,1340
balanced ::1347,1348
balanced t1348,1349
validsize ::1354,1355
validsize t1355,1356

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/Set.hs,24
module Data.Set (39,40

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/StrictPair.hs,75
module Data.StrictPair (strictPair)0,1
strictPair ::3,4
strictPair x4,5

/Users/ismael/.haskdogs/containers-0.5.0.0/Data/Tree.hs,706
module Data.Tree(21,22
data Tree a48,49
data Tree a = Node {48,49
        rootLabel ::49,50
        subForest ::50,51
type Forest a57,58
type Forest a =57,58
instance Functor62,63
drawTree ::85,86
drawTree  =86,87
drawForest ::89,90
drawForest  =90,91
draw ::92,93
draw (Node93,94
flatten ::104,105
flatten t105,106
levels ::109,110
levels t110,111
unfoldTree ::116,117
unfoldTree f117,118
unfoldForest ::120,121
unfoldForest f121,122
unfoldTreeM ::124,125
unfoldTreeM f125,126
unfoldForestM ::132,133
unfoldForestM f134,135
unfoldTreeM_BF ::140,141
unfoldTreeM_BF f141,142
unfoldForestM_BF ::151,152
unfoldForestM_BF f152,153
unfoldForestQ ::156,157
unfoldForestQ f157,158

/Users/ismael/.haskdogs/containers-0.5.0.0/Setup.hs,46
module Main (main)0,1
main ::4,5
main =5,6

/Users/ismael/.haskdogs/containers-0.5.0.0/tests/intmap-properties.hs,7440
main ::28,29
main =29,30
instance Arbitrary179,180
type UMap =188,189
type IMap =189,190
type SMap =190,191
tests ::194,195
tests =195,196
test_index ::209,210
test_index =210,211
test_size ::215,216
test_size =216,217
test_size2 ::220,221
test_size2 =221,222
test_member ::226,227
test_member =227,228
test_notMember ::231,232
test_notMember =232,233
test_lookup ::236,237
test_lookup =237,238
test_findWithDefault ::250,251
test_findWithDefault =251,252
test_lookupLT ::255,256
test_lookupLT =256,257
test_lookupGT ::260,261
test_lookupGT =261,262
test_lookupLE ::265,266
test_lookupLE =266,267
test_lookupGE ::271,272
test_lookupGE =272,273
test_empty ::280,281
test_empty =281,282
test_mempty ::285,286
test_mempty =286,287
test_singleton ::290,291
test_singleton =291,292
test_insert ::295,296
test_insert =296,297
test_insertWith ::301,302
test_insertWith =302,303
test_insertWithKey ::307,308
test_insertWithKey =308,309
test_insertLookupWithKey ::315,316
test_insertLookupWithKey =316,317
test_delete ::327,328
test_delete =328,329
test_adjust ::333,334
test_adjust =334,335
test_adjustWithKey ::339,340
test_adjustWithKey =340,341
test_update ::347,348
test_update =348,349
test_updateWithKey ::355,356
test_updateWithKey =356,357
test_updateLookupWithKey ::363,364
test_updateLookupWithKey =364,365
test_alter ::371,372
test_alter =372,373
test_union ::384,385
test_union =385,386
test_mappend ::387,388
test_mappend =388,389
test_unionWith ::390,391
test_unionWith =391,392
test_unionWithKey ::393,394
test_unionWithKey =394,395
test_unions ::398,399
test_unions =399,400
test_mconcat ::405,406
test_mconcat =406,407
test_unionsWith ::412,413
test_unionsWith =413,414
test_difference ::416,417
test_difference =417,418
test_differenceWith ::419,420
test_differenceWith =420,421
test_differenceWithKey ::425,426
test_differenceWithKey =426,427
test_intersection ::431,432
test_intersection =432,433
test_intersectionWith ::435,436
test_intersectionWith =436,437
test_intersectionWithKey ::438,439
test_intersectionWithKey =439,440
test_map ::446,447
test_map =447,448
test_mapWithKey ::449,450
test_mapWithKey =450,451
test_mapAccum ::454,455
test_mapAccum =455,456
test_mapAccumWithKey ::459,460
test_mapAccumWithKey =460,461
test_mapAccumRWithKey ::464,465
test_mapAccumRWithKey =465,466
test_mapKeys ::469,470
test_mapKeys =470,471
test_mapKeysWith ::475,476
test_mapKeysWith =476,477
test_mapKeysMonotonic ::480,481
test_mapKeysMonotonic =481,482
test_elems ::488,489
test_elems =489,490
test_keys ::493,494
test_keys =494,495
test_assocs ::498,499
test_assocs =499,500
test_keysSet ::503,504
test_keysSet =504,505
test_fromSet ::508,509
test_fromSet =509,510
test_toList ::516,517
test_toList =517,518
test_fromList ::521,522
test_fromList =522,523
test_fromListWith ::527,528
test_fromListWith =528,529
test_fromListWithKey ::532,533
test_fromListWithKey =533,534
test_toAscList ::542,543
test_toAscList =543,544
test_toDescList ::545,546
test_toDescList =546,547
test_showTree ::548,549
test_showTree =549,550
test_fromAscList ::553,554
test_fromAscList =554,555
test_fromAscListWith ::559,560
test_fromAscListWith =560,561
test_fromAscListWithKey ::563,564
test_fromAscListWithKey =564,565
test_fromDistinctAscList ::569,570
test_fromDistinctAscList =570,571
test_filter ::576,577
test_filter =577,578
test_filteWithKey ::582,583
test_filteWithKey =583,584
test_partition ::585,586
test_partition =586,587
test_partitionWithKey ::591,592
test_partitionWithKey =592,593
test_mapMaybe ::597,598
test_mapMaybe =598,599
test_mapMaybeWithKey ::602,603
test_mapMaybeWithKey =603,604
test_mapEither ::607,608
test_mapEither =608,609
test_mapEitherWithKey ::616,617
test_mapEitherWithKey =617,618
test_split ::625,626
test_split =626,627
test_splitLookup ::633,634
test_splitLookup =634,635
test_isSubmapOfBy ::644,645
test_isSubmapOfBy =645,646
test_isSubmapOf ::653,654
test_isSubmapOf =654,655
test_isProperSubmapOfBy ::660,661
test_isProperSubmapOfBy =661,662
test_isProperSubmapOf ::668,669
test_isProperSubmapOf =669,670
test_findMin ::677,678
test_findMin =678,679
test_findMax ::680,681
test_findMax =681,682
test_deleteMin ::683,684
test_deleteMin =684,685
test_deleteMax ::688,689
test_deleteMax =689,690
test_deleteFindMin ::693,694
test_deleteFindMin =694,695
test_deleteFindMax ::696,697
test_deleteFindMax =697,698
test_updateMin ::699,700
test_updateMin =700,701
test_updateMax ::704,705
test_updateMax =705,706
test_updateMinWithKey ::709,710
test_updateMinWithKey =710,711
test_updateMaxWithKey ::714,715
test_updateMaxWithKey =715,716
test_minView ::719,720
test_minView =720,721
test_maxView ::724,725
test_maxView =725,726
test_minViewWithKey ::729,730
test_minViewWithKey =730,731
test_maxViewWithKey ::734,735
test_maxViewWithKey =735,736
prop_singleton ::743,744
prop_singleton k744,745
prop_insertLookup ::746,747
prop_insertLookup k747,748
prop_insertDelete ::749,750
prop_insertDelete k750,751
prop_deleteNonMember ::752,753
prop_deleteNonMember k753,754
prop_unionModel ::757,758
prop_unionModel xs758,759
prop_unionSingleton ::762,763
prop_unionSingleton t763,764
prop_unionAssoc ::765,766
prop_unionAssoc t1766,767
prop_unionWith ::768,769
prop_unionWith t1769,770
prop_unionSum ::771,772
prop_unionSum xs772,773
prop_differenceModel ::776,777
prop_differenceModel xs777,778
prop_intersectionModel ::781,782
prop_intersectionModel xs782,783
prop_intersectionWithModel ::786,787
prop_intersectionWithModel xs787,788
prop_intersectionWithKeyModel ::794,795
prop_intersectionWithKeyModel xs795,796
prop_mergeWithKeyModel ::802,803
prop_mergeWithKeyModel xs803,804
prop_ordered ::839,840
prop_ordered840,841
prop_list ::845,846
prop_list xs846,847
prop_descList ::848,849
prop_descList xs849,850
prop_ascDescList ::851,852
prop_ascDescList xs852,853
prop_alter ::857,858
prop_alter t858,859
prop_index ::869,870
prop_index xs870,871
prop_null ::874,875
prop_null m875,876
prop_member ::877,878
prop_member xs878,879
prop_notmember ::882,883
prop_notmember xs883,884
prop_lookup ::887,888
prop_lookup xs888,889
prop_find ::893,894
prop_find xs894,895
prop_findWithDefault ::899,900
prop_findWithDefault xs900,901
test_lookupSomething ::905,906
test_lookupSomething lookup'906,907
prop_lookupLT ::919,920
prop_lookupLT =920,921
prop_lookupGT ::922,923
prop_lookupGT =923,924
prop_lookupLE ::925,926
prop_lookupLE =926,927
prop_lookupGE ::928,929
prop_lookupGE =929,930
prop_findMin ::931,932
prop_findMin ys932,933
prop_findMax ::937,938
prop_findMax ys938,939
prop_deleteMinModel ::943,944
prop_deleteMinModel ys944,945
prop_deleteMaxModel ::949,950
prop_deleteMaxModel ys950,951
prop_filter ::955,956
prop_filter p956,957
prop_partition ::961,962
prop_partition p962,963
prop_map ::967,968
prop_map f968,969
prop_fmap ::973,974
prop_fmap f974,975
prop_mapkeys ::979,980
prop_mapkeys f980,981
prop_splitModel ::985,986
prop_splitModel n986,987
prop_foldr ::992,993
prop_foldr n993,994
prop_foldr' ::1003,1004
prop_foldr' n1004,1005
prop_foldl ::1013,1014
prop_foldl n1014,1015
prop_foldl' ::1023,1024
prop_foldl' n1024,1025
prop_keysSet ::1033,1034
prop_keysSet xs1034,1035
prop_fromSet ::1037,1038
prop_fromSet ys1038,1039

/Users/ismael/.haskdogs/containers-0.5.0.0/tests/intset-properties.hs,2459
main ::13,14
main =14,15
test_lookupLT ::72,73
test_lookupLT =73,74
test_lookupGT ::77,78
test_lookupGT =78,79
test_lookupLE ::82,83
test_lookupLE =83,84
test_lookupGE ::88,89
test_lookupGE =89,90
test_split ::94,95
test_split =95,96
instance Arbitrary101,102
prop_Single ::110,111
prop_Single x111,112
prop_Member ::114,115
prop_Member xs115,116
prop_NotMember ::119,120
prop_NotMember xs120,121
test_LookupSomething ::124,125
test_LookupSomething lookup'125,126
prop_LookupLT ::138,139
prop_LookupLT =139,140
prop_LookupGT ::141,142
prop_LookupGT =142,143
prop_LookupLE ::144,145
prop_LookupLE =145,146
prop_LookupGE ::147,148
prop_LookupGE =148,149
prop_InsertDelete ::150,151
prop_InsertDelete k151,152
prop_MemberFromList ::154,155
prop_MemberFromList xs155,156
prop_UnionInsert ::163,164
prop_UnionInsert x164,165
prop_UnionAssoc ::167,168
prop_UnionAssoc t1168,169
prop_UnionComm ::171,172
prop_UnionComm t1172,173
prop_Diff ::175,176
prop_Diff xs176,177
prop_Int ::180,181
prop_Int xs181,182
prop_Ordered188,189
prop_List ::193,194
prop_List xs194,195
prop_DescList ::197,198
prop_DescList xs198,199
prop_AscDescList ::200,201
prop_AscDescList xs201,202
prop_fromList ::204,205
prop_fromList xs205,206
powersOf2 ::216,217
powersOf2 =217,218
prop_MaskPow2 ::220,221
prop_MaskPow2 (Bin221,222
prop_Prefix ::225,226
prop_Prefix s@(Bin226,227
prop_LeftRight ::231,232
prop_LeftRight (Bin232,233
toSet ::238,239
toSet =239,240
prop_isProperSubsetOf ::242,243
prop_isProperSubsetOf a243,244
prop_isProperSubsetOf2 ::248,249
prop_isProperSubsetOf2 a249,250
prop_isSubsetOf ::252,253
prop_isSubsetOf a253,254
prop_isSubsetOf2 ::255,256
prop_isSubsetOf2 a256,257
prop_size ::258,259
prop_size s259,260
prop_findMax ::261,262
prop_findMax s262,263
prop_findMin ::264,265
prop_findMin s265,266
prop_ord ::267,268
prop_ord s1268,269
prop_readShow ::270,271
prop_readShow s271,272
prop_foldR ::273,274
prop_foldR s274,275
prop_foldR' ::276,277
prop_foldR' s277,278
prop_foldL ::279,280
prop_foldL s280,281
prop_foldL' ::282,283
prop_foldL' s283,284
prop_map ::285,286
prop_map s286,287
prop_maxView ::288,289
prop_maxView s289,290
prop_minView ::293,294
prop_minView s294,295
prop_split ::298,299
prop_split s299,300
prop_splitMember ::302,303
prop_splitMember s303,304
prop_partition ::306,307
prop_partition s307,308
prop_filter ::310,311
prop_filter s311,312

/Users/ismael/.haskdogs/containers-0.5.0.0/tests/map-properties.hs,8735
main ::28,29
main =29,30
instance (Enum201,202
type UMap =225,226
type IMap =226,227
type SMap =227,228
test_ticket4242 ::233,234
test_ticket4242 =234,235
test_index ::239,240
test_index =240,241
test_size ::245,246
test_size =246,247
test_size2 ::250,251
test_size2 =251,252
test_member ::256,257
test_member =257,258
test_notMember ::261,262
test_notMember =262,263
test_lookup ::266,267
test_lookup =267,268
test_findWithDefault ::280,281
test_findWithDefault =281,282
test_lookupLT ::285,286
test_lookupLT =286,287
test_lookupGT ::290,291
test_lookupGT =291,292
test_lookupLE ::295,296
test_lookupLE =296,297
test_lookupGE ::301,302
test_lookupGE =302,303
test_empty ::310,311
test_empty =311,312
test_mempty ::315,316
test_mempty =316,317
test_singleton ::320,321
test_singleton =321,322
test_insert ::325,326
test_insert =326,327
test_insertWith ::331,332
test_insertWith =332,333
test_insertWithKey ::337,338
test_insertWithKey =338,339
test_insertLookupWithKey ::345,346
test_insertLookupWithKey =346,347
test_delete ::357,358
test_delete =358,359
test_adjust ::363,364
test_adjust =364,365
test_adjustWithKey ::369,370
test_adjustWithKey =370,371
test_update ::377,378
test_update =378,379
test_updateWithKey ::385,386
test_updateWithKey =386,387
test_updateLookupWithKey ::393,394
test_updateLookupWithKey =394,395
test_alter ::401,402
test_alter =402,403
test_union ::414,415
test_union =415,416
test_mappend ::417,418
test_mappend =418,419
test_unionWith ::420,421
test_unionWith =421,422
test_unionWithKey ::423,424
test_unionWithKey =424,425
test_unions ::428,429
test_unions =429,430
test_mconcat ::435,436
test_mconcat =436,437
test_unionsWith ::442,443
test_unionsWith =443,444
test_difference ::446,447
test_difference =447,448
test_differenceWith ::449,450
test_differenceWith =450,451
test_differenceWithKey ::455,456
test_differenceWithKey =456,457
test_intersection ::461,462
test_intersection =462,463
test_intersectionWith ::465,466
test_intersectionWith =466,467
test_intersectionWithKey ::468,469
test_intersectionWithKey =469,470
test_map ::476,477
test_map =477,478
test_mapWithKey ::479,480
test_mapWithKey =480,481
test_mapAccum ::484,485
test_mapAccum =485,486
test_mapAccumWithKey ::489,490
test_mapAccumWithKey =490,491
test_mapAccumRWithKey ::494,495
test_mapAccumRWithKey =495,496
test_mapKeys ::499,500
test_mapKeys =500,501
test_mapKeysWith ::505,506
test_mapKeysWith =506,507
test_mapKeysMonotonic ::510,511
test_mapKeysMonotonic =511,512
test_elems ::520,521
test_elems =521,522
test_keys ::525,526
test_keys =526,527
test_assocs ::530,531
test_assocs =531,532
test_keysSet ::535,536
test_keysSet =536,537
test_fromSet ::540,541
test_fromSet =541,542
test_toList ::548,549
test_toList =549,550
test_fromList ::553,554
test_fromList =554,555
test_fromListWith ::559,560
test_fromListWith =560,561
test_fromListWithKey ::564,565
test_fromListWithKey =565,566
test_toAscList ::574,575
test_toAscList =575,576
test_toDescList ::577,578
test_toDescList =578,579
test_showTree ::580,581
test_showTree =581,582
test_showTree' ::585,586
test_showTree' =586,587
test_fromAscList ::595,596
test_fromAscList =596,597
test_fromAscListWith ::602,603
test_fromAscListWith =603,604
test_fromAscListWithKey ::608,609
test_fromAscListWithKey =609,610
test_fromDistinctAscList ::616,617
test_fromDistinctAscList =617,618
test_filter ::625,626
test_filter =626,627
test_filteWithKey ::631,632
test_filteWithKey =632,633
test_partition ::634,635
test_partition =635,636
test_partitionWithKey ::640,641
test_partitionWithKey =641,642
test_mapMaybe ::646,647
test_mapMaybe =647,648
test_mapMaybeWithKey ::651,652
test_mapMaybeWithKey =652,653
test_mapEither ::656,657
test_mapEither =657,658
test_mapEitherWithKey ::665,666
test_mapEitherWithKey =666,667
test_split ::674,675
test_split =675,676
test_splitLookup ::682,683
test_splitLookup =683,684
test_isSubmapOfBy ::693,694
test_isSubmapOfBy =694,695
test_isSubmapOf ::702,703
test_isSubmapOf =703,704
test_isProperSubmapOfBy ::709,710
test_isProperSubmapOfBy =710,711
test_isProperSubmapOf ::717,718
test_isProperSubmapOf =718,719
test_lookupIndex ::726,727
test_lookupIndex =727,728
test_findIndex ::733,734
test_findIndex =734,735
test_elemAt ::738,739
test_elemAt =739,740
test_updateAt ::743,744
test_updateAt =744,745
test_deleteAt ::751,752
test_deleteAt =752,753
test_findMin ::759,760
test_findMin =760,761
test_findMax ::762,763
test_findMax =763,764
test_deleteMin ::765,766
test_deleteMin =766,767
test_deleteMax ::770,771
test_deleteMax =771,772
test_deleteFindMin ::775,776
test_deleteFindMin =776,777
test_deleteFindMax ::778,779
test_deleteFindMax =779,780
test_updateMin ::781,782
test_updateMin =782,783
test_updateMax ::786,787
test_updateMax =787,788
test_updateMinWithKey ::791,792
test_updateMinWithKey =792,793
test_updateMaxWithKey ::796,797
test_updateMaxWithKey =797,798
test_minView ::801,802
test_minView =802,803
test_maxView ::806,807
test_maxView =807,808
test_minViewWithKey ::811,812
test_minViewWithKey =812,813
test_maxViewWithKey ::816,817
test_maxViewWithKey =817,818
test_valid ::824,825
test_valid =825,826
prop_fromList ::833,834
prop_fromList t834,835
prop_singleton ::836,837
prop_singleton k837,838
prop_insert ::839,840
prop_insert k840,841
prop_insertLookup ::842,843
prop_insertLookup k843,844
prop_insertDelete ::845,846
prop_insertDelete k846,847
prop_insertDelete2 ::848,849
prop_insertDelete2 k849,850
prop_deleteNonMember ::851,852
prop_deleteNonMember k852,853
prop_deleteMin ::854,855
prop_deleteMin t855,856
prop_deleteMax ::857,858
prop_deleteMax t858,859
prop_split ::862,863
prop_split k863,864
prop_join ::866,867
prop_join k867,868
prop_merge ::870,871
prop_merge k871,872
prop_union ::876,877
prop_union t1877,878
prop_unionModel ::879,880
prop_unionModel xs880,881
prop_unionSingleton ::884,885
prop_unionSingleton t885,886
prop_unionAssoc ::887,888
prop_unionAssoc t1888,889
prop_unionWith ::890,891
prop_unionWith t1891,892
prop_unionWith2 ::893,894
prop_unionWith2 t1894,895
prop_unionSum ::896,897
prop_unionSum xs897,898
prop_difference ::901,902
prop_difference t1902,903
prop_differenceModel ::904,905
prop_differenceModel xs905,906
prop_intersection ::909,910
prop_intersection t1910,911
prop_intersectionModel ::912,913
prop_intersectionModel xs913,914
prop_intersectionWith ::917,918
prop_intersectionWith f918,919
prop_intersectionWithModel ::920,921
prop_intersectionWithModel xs921,922
prop_intersectionWithKey ::928,929
prop_intersectionWithKey f929,930
prop_intersectionWithKeyModel ::931,932
prop_intersectionWithKeyModel xs932,933
prop_mergeWithKeyModel ::939,940
prop_mergeWithKeyModel xs940,941
prop_ordered ::976,977
prop_ordered977,978
prop_list ::982,983
prop_list xs983,984
prop_descList ::985,986
prop_descList xs986,987
prop_ascDescList ::988,989
prop_ascDescList xs989,990
prop_alter ::994,995
prop_alter t995,996
prop_index ::1006,1007
prop_index xs1007,1008
prop_null ::1011,1012
prop_null m1012,1013
prop_member ::1014,1015
prop_member xs1015,1016
prop_notmember ::1019,1020
prop_notmember xs1020,1021
prop_lookup ::1024,1025
prop_lookup xs1025,1026
prop_find ::1030,1031
prop_find xs1031,1032
prop_findWithDefault ::1036,1037
prop_findWithDefault xs1037,1038
test_lookupSomething ::1042,1043
test_lookupSomething lookup'1043,1044
prop_lookupLT ::1056,1057
prop_lookupLT =1057,1058
prop_lookupGT ::1059,1060
prop_lookupGT =1060,1061
prop_lookupLE ::1062,1063
prop_lookupLE =1063,1064
prop_lookupGE ::1065,1066
prop_lookupGE =1066,1067
prop_findIndex ::1068,1069
prop_findIndex ys1069,1070
prop_lookupIndex ::1073,1074
prop_lookupIndex ys1074,1075
prop_findMin ::1078,1079
prop_findMin ys1079,1080
prop_findMax ::1084,1085
prop_findMax ys1085,1086
prop_deleteMinModel ::1090,1091
prop_deleteMinModel ys1091,1092
prop_deleteMaxModel ::1096,1097
prop_deleteMaxModel ys1097,1098
prop_filter ::1102,1103
prop_filter p1103,1104
prop_partition ::1108,1109
prop_partition p1109,1110
prop_map ::1114,1115
prop_map f1115,1116
prop_fmap ::1120,1121
prop_fmap f1121,1122
prop_mapkeys ::1126,1127
prop_mapkeys f1127,1128
prop_splitModel ::1132,1133
prop_splitModel n1133,1134
prop_foldr ::1139,1140
prop_foldr n1140,1141
prop_foldr' ::1150,1151
prop_foldr' n1151,1152
prop_foldl ::1160,1161
prop_foldl n1161,1162
prop_foldl' ::1170,1171
prop_foldl' n1171,1172
prop_keysSet ::1180,1181
prop_keysSet xs1181,1182
prop_fromSet ::1184,1185
prop_fromSet ys1185,1186

/Users/ismael/.haskdogs/containers-0.5.0.0/tests/seq-properties.hs,3818
main ::22,23
main =23,24
instance Arbitrary104,105
class Valid a157,158
    valid ::158,159
infix 4188,189
(~=) ::190,191
(~=) :: Eq190,191
toList' ::194,195
toList' xs195,196
toListList' ::199,200
toListList' xss200,201
toListPair' ::202,203
toListPair' (xs,203,204
prop_fmap ::207,208
prop_fmap xs208,209
prop_constmap ::212,213
prop_constmap x213,214
prop_foldr ::216,217
prop_foldr xs217,218
prop_foldr1 ::223,224
prop_foldr1 xs224,225
prop_foldl ::228,229
prop_foldl xs229,230
prop_foldl1 ::235,236
prop_foldl1 xs236,237
prop_equals ::240,241
prop_equals xs241,242
prop_compare ::244,245
prop_compare xs245,246
prop_mappend ::248,249
prop_mappend xs249,250
{-254,255
prop_singleton ::258,259
prop_singleton x259,260
prop_cons ::262,263
prop_cons x263,264
prop_snoc ::266,267
prop_snoc xs267,268
prop_append ::270,271
prop_append xs271,272
prop_fromList ::274,275
prop_fromList xs275,276
prop_replicate ::280,281
prop_replicate (NonNegative281,282
prop_replicateA ::285,286
prop_replicateA (NonNegative286,287
prop_replicateM ::292,293
prop_replicateM (NonNegative293,294
prop_iterateN ::301,302
prop_iterateN (NonNegative302,303
prop_unfoldr ::308,309
prop_unfoldr z309,310
prop_unfoldl ::315,316
prop_unfoldl z316,317
prop_null ::327,328
prop_null xs328,329
prop_length ::331,332
prop_length xs332,333
prop_viewl ::337,338
prop_viewl xs338,339
prop_viewr ::343,344
prop_viewr xs344,345
prop_scanl ::351,352
prop_scanl z352,353
prop_scanl1 ::356,357
prop_scanl1 xs357,358
prop_scanr ::361,362
prop_scanr z362,363
prop_scanr1 ::366,367
prop_scanr1 xs367,368
prop_tails ::373,374
prop_tails xs374,375
prop_inits ::377,378
prop_inits xs378,379
prop_takeWhileL ::384,385
prop_takeWhileL (Positive385,386
prop_takeWhileR ::389,390
prop_takeWhileR (Positive390,391
prop_dropWhileL ::394,395
prop_dropWhileL (Positive395,396
prop_dropWhileR ::399,400
prop_dropWhileR (Positive400,401
prop_spanl ::404,405
prop_spanl (Positive405,406
prop_spanr ::409,410
prop_spanr (Positive410,411
prop_breakl ::414,415
prop_breakl (Positive415,416
prop_breakr ::419,420
prop_breakr (Positive420,421
prop_partition ::424,425
prop_partition (Positive425,426
prop_filter ::429,430
prop_filter (Positive430,431
prop_sort ::436,437
prop_sort xs437,438
prop_sortBy ::440,441
prop_sortBy xs441,442
prop_unstableSort ::445,446
prop_unstableSort xs446,447
prop_unstableSortBy ::449,450
prop_unstableSortBy xs450,451
prop_index ::455,456
prop_index xs456,457
prop_adjust ::460,461
prop_adjust n461,462
prop_update ::465,466
prop_update i466,467
prop_take ::469,470
prop_take n470,471
prop_drop ::473,474
prop_drop n474,475
prop_splitAt ::477,478
prop_splitAt n478,479
adjustList ::481,482
adjustList f482,483
prop_elemIndexL ::489,490
prop_elemIndexL x490,491
prop_elemIndicesL ::493,494
prop_elemIndicesL x494,495
prop_elemIndexR ::497,498
prop_elemIndexR x498,499
prop_elemIndicesR ::501,502
prop_elemIndicesR x502,503
prop_findIndexL ::505,506
prop_findIndexL (Positive506,507
prop_findIndicesL ::510,511
prop_findIndicesL (Positive511,512
prop_findIndexR ::515,516
prop_findIndexR (Positive516,517
prop_findIndicesR ::520,521
prop_findIndicesR (Positive521,522
prop_foldlWithIndex ::527,528
prop_foldlWithIndex z528,529
prop_foldrWithIndex ::532,533
prop_foldrWithIndex z533,534
prop_mapWithIndex ::539,540
prop_mapWithIndex xs540,541
prop_reverse ::544,545
prop_reverse xs545,546
prop_zip ::550,551
prop_zip xs551,552
prop_zipWith ::554,555
prop_zipWith xs555,556
prop_zip3 ::559,560
prop_zip3 xs560,561
prop_zipWith3 ::563,564
prop_zipWith3 xs564,565
prop_zip4 ::568,569
prop_zip4 xs569,570
prop_zipWith4 ::572,573
prop_zipWith4 xs573,574
data M a579,580
data M a = Action Int579,580

/Users/ismael/.haskdogs/containers-0.5.0.0/tests/set-properties.hs,2670
main ::12,13
main =13,14
test_lookupLT ::74,75
test_lookupLT =75,76
test_lookupGT ::79,80
test_lookupGT =80,81
test_lookupLE ::84,85
test_lookupLE =85,86
test_lookupGE ::90,91
test_lookupGE =91,92
instance (Enum99,100
forValid ::122,123
forValid f123,124
forValidUnitTree ::131,132
forValidUnitTree f132,133
prop_Valid ::134,135
prop_Valid =135,136
prop_Single ::140,141
prop_Single x141,142
prop_Member ::143,144
prop_Member xs144,145
prop_NotMember ::148,149
prop_NotMember xs149,150
test_LookupSomething ::153,154
test_LookupSomething lookup'154,155
prop_LookupLT ::167,168
prop_LookupLT =168,169
prop_LookupGT ::170,171
prop_LookupGT =171,172
prop_LookupLE ::173,174
prop_LookupLE =174,175
prop_LookupGE ::176,177
prop_LookupGE =177,178
prop_InsertValid ::179,180
prop_InsertValid k180,181
prop_InsertDelete ::182,183
prop_InsertDelete k183,184
prop_DeleteValid ::185,186
prop_DeleteValid k186,187
prop_Join ::191,192
prop_Join x192,193
prop_Merge ::196,197
prop_Merge x197,198
prop_UnionValid ::204,205
prop_UnionValid205,206
prop_UnionInsert ::210,211
prop_UnionInsert x211,212
prop_UnionAssoc ::213,214
prop_UnionAssoc t1214,215
prop_UnionComm ::216,217
prop_UnionComm t1217,218
prop_DiffValid ::219,220
prop_DiffValid =220,221
prop_Diff ::224,225
prop_Diff xs225,226
prop_IntValid ::228,229
prop_IntValid =229,230
prop_Int ::233,234
prop_Int xs234,235
prop_Ordered ::240,241
prop_Ordered =241,242
prop_List ::245,246
prop_List xs246,247
prop_DescList ::248,249
prop_DescList xs249,250
prop_AscDescList ::251,252
prop_AscDescList xs252,253
prop_fromList ::255,256
prop_fromList xs256,257
toIntSet ::267,268
toIntSet =268,269
prop_isProperSubsetOf ::271,272
prop_isProperSubsetOf a272,273
prop_isProperSubsetOf2 ::277,278
prop_isProperSubsetOf2 a278,279
prop_isSubsetOf ::281,282
prop_isSubsetOf a282,283
prop_isSubsetOf2 ::284,285
prop_isSubsetOf2 a285,286
prop_size ::287,288
prop_size s288,289
prop_findMax ::290,291
prop_findMax s291,292
prop_findMin ::293,294
prop_findMin s294,295
prop_ord ::296,297
prop_ord s1297,298
prop_readShow ::299,300
prop_readShow s300,301
prop_foldR ::302,303
prop_foldR s303,304
prop_foldR' ::305,306
prop_foldR' s306,307
prop_foldL ::308,309
prop_foldL s309,310
prop_foldL' ::311,312
prop_foldL' s312,313
prop_map ::314,315
prop_map s315,316
prop_maxView ::317,318
prop_maxView s318,319
prop_minView ::322,323
prop_minView s323,324
prop_split ::327,328
prop_split s328,329
prop_splitMember ::331,332
prop_splitMember s332,333
prop_partition ::335,336
prop_partition s336,337
prop_filter ::339,340
prop_filter s340,341

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Basic.hs,535
module Data.Graph.Inductive.Basic2,3
grev ::25,26
grev =26,27
undir ::30,31
undir =31,32
unlab ::38,39
unlab =39,40
gsel ::45,46
gsel p46,47
efilter ::56,57
efilter f57,58
elfilter ::63,64
elfilter f64,65
hasLoop ::71,72
hasLoop =72,73
isSimple ::75,76
isSimple =76,77
threadGraph f79,80
gfold1 f82,83
gfoldn f83,84
gfold ::97,98
gfold f103,104
postorder ::111,112
postorder (Node112,113
postorderF ::115,116
postorderF =116,117
preorder ::120,121
preorder =121,122
preorderF ::124,125
preorderF =125,126

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Example.hs,2708
module Data.Graph.Inductive.Example(1,2
genUNodes ::28,29
genUNodes n29,30
genLNodes ::32,33
genLNodes q33,34
labUEdges ::36,37
labUEdges =37,38
noEdges ::40,41
noEdges =41,42
a,b,c,e,loop,ab,abb,dag3   :: Gr Char ()44,45
a,b,c,e,loop,ab,abb,dag3   :: Gr Char ()44,45
a,b,c,e,loop,ab,abb,dag3   :: Gr Char ()44,45
a,b,c,e,loop,ab,abb,dag3   :: Gr Char ()44,45
a,b,c,e,loop,ab,abb,dag3   :: Gr Char ()44,45
a,b,c,e,loop,ab,abb,dag3   :: Gr Char ()44,45
a,b,c,e,loop,ab,abb,dag3   :: Gr Char44,45
a,b,c,e,loop,ab,abb,dag3   ::44,45
e3                         ::45,46
cyc3,g3,g3b                :: Gr Char String46,47
cyc3,g3,g3b                :: Gr Char46,47
cyc3,g3,g3b                ::46,47
dag4                       ::47,48
d1,d3                      :: Gr Int48,49
d1,d3                      ::48,49
a    =50,51
b    =51,52
c    =52,53
e    =53,54
e3   =54,55
loop =56,57
ab   =57,58
abb  =58,59
cyc3 =60,61
dag3 =65,66
dag4 =66,67
d1   =68,69
d3   =69,70
g3 =71,72
g3b =74,75
a',b',c',e',loop',ab',abb',dag3' :: IO (SGr Char ())79,80
a',b',c',e',loop',ab',abb',dag3' :: IO (SGr Char ())79,80
a',b',c',e',loop',ab',abb',dag3' :: IO (SGr Char ())79,80
a',b',c',e',loop',ab',abb',dag3' :: IO (SGr Char ())79,80
a',b',c',e',loop',ab',abb',dag3' :: IO (SGr Char ())79,80
a',b',c',e',loop',ab',abb',dag3' :: IO (SGr Char ())79,80
a',b',c',e',loop',ab',abb',dag3' :: IO (SGr79,80
a',b',c',e',loop',ab',abb',dag3' ::79,80
e3'                              ::80,81
dag4'                            ::81,82
d1',d3'                          :: IO (SGr82,83
d1',d3'                          ::82,83
a'    =84,85
b'    =85,86
c'    =86,87
e'    =87,88
e3'   =88,89
loop' =90,91
ab'   =91,92
abb'  =93,94
dag3' =95,96
dag4' =96,97
d1'   =98,99
d3'   =99,100
ucycle ::101,102
ucycle n102,103
star ::105,106
star n106,107
ucycleM ::108,109
ucycleM n109,110
starM ::112,113
starM n113,114
clr479,clr489    :: Gr Char116,117
clr479,clr489    ::116,117
clr486           ::117,118
clr508,clr528    :: Gr Char118,119
clr508,clr528    ::118,119
clr595,gr1       :: Gr Int119,120
clr595,gr1       ::119,120
kin248           ::120,121
vor              ::121,122
clr479 =123,124
clr486 =125,126
clr489 =128,129
clr508 =131,132
clr528 =134,135
clr595 =137,138
gr1    =140,141
kin248 =144,145
vor =150,151
clr479',clr489'  :: IO (SGr156,157
clr479',clr489'  ::156,157
clr486'          ::157,158
clr508',clr528'  :: IO (SGr158,159
clr508',clr528'  ::158,159
kin248'          ::159,160
vor'             ::160,161
clr479' =162,163
clr486' =164,165
clr489' =167,168
clr508' =170,171
clr528' =173,174
kin248' =176,177
vor' =182,183

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Graph.hs,4101
module Data.Graph.Inductive.Graph (2,3
empty      ::60,61
isEmpty    ::61,62
match      ::62,63
mkGraph    ::63,64
(&)        :: DynGraph64,65
ufold      ::67,68
gmap       ::68,69
nmap       ::69,70
emap       ::70,71
matchAny   ::73,74
nodes      ::74,75
edges      ::75,76
labNodes   ::76,77
labEdges   ::77,78
newNodes   ::78,79
noNodes    ::79,80
nodeRange  ::80,81
gelem      ::81,82
insNode    ::84,85
insEdge    ::85,86
delNode    ::86,87
delEdge    ::87,88
delLEdge   ::88,89
insNodes   ::90,91
insEdges   ::91,92
delNodes   ::92,93
delEdges   ::93,94
buildGr    ::94,95
mkUGraph   ::95,96
context    ::98,99
lab        ::99,100
neighbors  ::100,101
suc        ::101,102
pre        ::102,103
lsuc       ::103,104
lpre       ::104,105
out        ::105,106
inn        ::106,107
outdeg     ::107,108
indeg      ::108,109
deg        ::109,110
node'      ::112,113
lab'       ::113,114
labNode'   ::114,115
neighbors' ::115,116
suc'       ::116,117
pre'       ::117,118
lpre'      ::118,119
lsuc'      ::119,120
out'       ::120,121
inn'       ::121,122
outdeg'    ::122,123
indeg'     ::123,124
deg'       ::124,125
type  Node   =129,130
type LNode a131,132
type LNode a =131,132
type UNode   =133,134
type  Edge   =136,137
type LEdge b138,139
type LEdge b =138,139
type UEdge   =140,141
type Path    =143,144
newtype LPath a145,146
newtype LPath a = LP [LNode145,146
instance Show147,148
type UPath   =151,152
type Adj b154,155
type Context a156,157
type MContext a157,158
type Decomp g160,161
type Decomp g a160,161
type GDecomp g162,163
type UContext     =165,166
type UDecomp g167,168
class Graph gr170,171
  empty     ::173,174
  isEmpty   ::175,176
  match     ::178,179
  mkGraph   ::180,181
  labNodes  ::182,183
  matchAny  ::186,187
  noNodes   ::188,189
  nodeRange ::190,191
  labEdges  ::192,193
  matchAny g194,195
  noNodes =197,198
  nodeRange g198,199
  labEdges =199,200
class Graph gr => DynGraph gr202,203
  (&) :: Context204,205
ufold ::208,209
ufold f209,210
gmap ::214,215
gmap f215,216
nmap ::218,219
nmap f219,220
emap ::222,223
emap f223,224
nodes ::227,228
nodes =228,229
edges ::231,232
edges =232,233
newNodes ::235,236
newNodes i236,237
gelem ::239,240
gelem v240,241
insNode ::243,244
insNode (v,l)244,245
insEdge ::247,248
insEdge (v,w,l)248,249
delNode ::252,253
delNode v253,254
delEdge ::256,257
delEdge (v,w)257,258
delLEdge ::262,263
delLEdge (v,w,b)263,264
insNodes   ::268,269
insNodes vs269,270
insEdges ::272,273
insEdges es273,274
delNodes ::276,277
delNodes []277,278
delEdges ::281,282
delEdges es282,283
buildGr ::285,286
buildGr =286,287
mkUGraph ::292,293
mkUGraph vs293,294
context ::299,300
context g300,301
lab ::305,306
lab g306,307
neighbors ::309,310
neighbors =310,311
suc ::313,314
suc =314,315
pre ::317,318
pre =318,319
lsuc ::322,323
lsuc =323,324
lpre ::326,327
lpre =327,328
out ::330,331
out g331,332
inn ::334,335
inn g335,336
outdeg ::338,339
outdeg =339,340
indeg ::342,343
indeg  =343,344
deg ::346,347
deg =347,348
node' ::350,351
node' (_,v,_,_)351,352
lab' ::354,355
lab' (_,_,l,_)355,356
labNode' ::358,359
labNode' (_,v,l,_)359,360
neighbors' ::362,363
neighbors' (p,_,_,s)363,364
suc' ::366,367
suc' =367,368
pre' ::370,371
pre' =371,372
lsuc' ::374,375
lsuc' =375,376
lpre' ::378,379
lpre' =379,380
out' ::382,383
out' c@(_,v,_,_)383,384
inn' ::386,387
inn' c@(_,v,_,_)387,388
outdeg' ::390,391
outdeg' =391,392
indeg' ::394,395
indeg' =395,396
deg' ::398,399
deg' (p,_,_,s)399,400
nodeComp ::404,405
nodeComp n@(v,_)405,406
slabNodes ::409,410
slabNodes =410,411
edgeComp ::412,413
edgeComp e@(v,w,_)413,414
slabEdges ::417,418
slabEdges =418,419
equal ::423,424
equal g424,425
(.:) :: (c435,436
(.:) =440,441
flip2 ::442,443
flip2 (x,y)443,444
context1l ::447,448
context1l =448,449
context4l ::450,451
context4l =451,452
context1l' ::453,454
context1l' (p,v,_,s)454,455
context4l' ::456,457
context4l' (p,v,_,s)457,458

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Graphviz.hs,316
module Data.Graph.Inductive.Graphviz(1,2
data Orient =8,9
data Orient = Portrait |8,9
data Orient = Portrait | Landscape deriving8,9
o2s ::10,11
o2s Portrait11,12
graphviz ::15,16
i2d ::26,27
i2d =27,28
graphviz g29,30
graphviz' ::55,56
graphviz' g56,57
sq ::58,59
sq s@[c]59,60
sl ::66,67
sl a67,68

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Internal/FiniteMap.hs,1171
module Data.Graph.Inductive.Internal.FiniteMap(4,5
data Ord a21,22
    Empty |22,23
    Empty | Node Int22,23
showsMap ::33,34
showsMap Empty34,35
instance (Show38,39
splitMax ::44,45
splitMax (Node45,46
merge ::49,50
merge l50,51
emptyFM ::59,60
emptyFM  =60,61
addToFM ::62,63
addToFM Empty63,64
updFM ::70,71
updFM Empty71,72
accumFM ::78,79
accumFM Empty79,80
delFromFM ::85,86
delFromFM Empty86,87
isEmptyFM ::92,93
isEmptyFM Empty93,94
sizeFM ::96,97
sizeFM Empty97,98
lookupFM ::100,101
lookupFM Empty101,102
rangeFM ::107,108
rangeFM m108,109
rangeFMa Empty110,111
minFM ::116,117
minFM Empty117,118
maxFM ::121,122
maxFM Empty122,123
predFM ::126,127
predFM m127,128
predFM' Empty129,130
succFM ::136,137
succFM m137,138
succFM' Empty139,140
elemFM ::146,147
elemFM m147,148
splitFM ::150,151
splitFM Empty151,152
splitMinFM ::164,165
splitMinFM Empty165,166
fmToList ::170,171
fmToList m171,172
height ::179,180
height Empty180,181
node ::183,184
node l184,185
avlBalance ::187,188
avlBalance l188,189
bias ::196,197
bias (Node197,198
rotr ::200,201
rotr Empty201,202
rotl ::205,206
rotl Empty206,207

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Internal/Heap.hs,706
module Data.Graph.Inductive.Internal.Heap(1,2
data Ord a11,12
data Ord a => Heap a b = Empty |11,12
data Ord a => Heap a b = Empty | Node a11,12
showsHeap ::14,15
showsHeap Empty15,16
instance (Show19,20
empty ::27,28
empty =28,29
unit ::30,31
unit key31,32
insert ::33,34
insert (key,34,35
merge ::36,37
merge h37,38
mergeAll:: Ord43,44
mergeAll []44,45
isEmpty ::48,49
isEmpty Empty49,50
findMin ::52,53
findMin Empty53,54
deleteMin ::56,57
deleteMin Empty57,58
splitMin ::60,61
splitMin Empty61,62
build ::70,71
build =71,72
toList ::73,74
toList Empty74,75
heapsort ::78,79
heapsort =79,80
l ::81,82
l  =82,83
l' =83,84
h1  =85,86
h1' =86,87
s1  =88,89
s1' =89,90

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Internal/Queue.hs,299
module Data.Graph.Inductive.Internal.Queue(0,1
data Queue a8,9
data Queue a = MkQueue [a]8,9
mkQueue ::10,11
mkQueue =11,12
queuePut ::13,14
queuePut item14,15
queuePutList ::16,17
queuePutList []17,18
queueGet ::20,21
queueGet (MkQueue21,22
queueEmpty ::24,25
queueEmpty (MkQueue25,26

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Internal/RootPath.hs,343
module Data.Graph.Inductive.Internal.RootPath (2,3
instance Eq14,15
type LRTree a25,26
type LRTree a =25,26
type RTree =26,27
first ::28,29
first p29,30
findP ::34,35
findP _35,36
getPath ::40,41
getPath v41,42
getLPath ::43,44
getLPath v44,45
getDistance ::46,47
getDistance v47,48
getLPathNodes ::49,50
getLPathNodes v50,51

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Internal/Thread.hs,577
module Data.Graph.Inductive.Internal.Thread(2,3
class Thread t20,21
  split ::21,22
instance Thread24,25
{-31,32
foldT1' ys53,54
foldT1 xs55,56
foldT2' f59,60
foldT2 f61,62
type Split t72,73
type Split t i72,73
type Thread t73,74
type Collect r74,75
type Collect r c74,75
threadList' ::78,79
threadList' (_,c)79,80
threadList ::90,91
threadList (_,c)91,92
type SplitM t105,106
threadMaybe' ::107,108
threadMaybe' f108,109
threadMaybe ::118,119
threadMaybe f119,120
splitPar ::129,130
splitPar split130,131
splitParM ::134,135
splitParM splitm135,136

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Monad/IOArray.hs,397
module Data.Graph.Inductive.Monad.IOArray(2,3
data SGr a24,25
data SGr a b = SGr (GraphRep24,25
type GraphRep a26,27
type GraphRep a b26,27
type Context' a27,28
type USGr =29,30
showGraph ::38,39
showGraph (_,a,m)39,40
instance (Show46,47
run ::53,54
run x54,55
defaultGraphSize ::92,93
defaultGraphSize =93,94
emptyN ::95,96
emptyN n96,97
removeDel ::107,108
removeDel m108,109

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Monad.hs,1294
module Data.Graph.Inductive.Monad(2,3
class Monad m => GraphM m38,39
  emptyM     ::40,41
  isEmptyM   ::41,42
  matchM     ::42,43
  mkGraphM   ::43,44
  labNodesM  ::44,45
  matchAnyM  ::46,47
  noNodesM   ::47,48
  nodeRangeM ::48,49
  labEdgesM  ::49,50
  matchAnyM g51,52
  noNodesM =56,57
  nodeRangeM g57,58
  labEdgesM =60,61
(>>.) :: Monad67,68
f >>.68,69
ufoldM ::79,80
ufoldM f80,81
nodesM ::90,91
nodesM =91,92
edgesM ::93,94
edgesM =94,95
newNodesM ::96,97
newNodesM i97,98
delNodeM ::103,104
delNodeM v104,105
delNodesM ::106,107
delNodesM []107,108
mkUGraphM ::111,112
mkUGraphM vs112,113
labUEdges =114,115
labUNodes =115,116
onMatch ::120,121
onMatch f121,122
contextM ::124,125
contextM g125,126
labM ::127,128
labM =128,129
neighbors ::131,132
neighbors =132,133
suc ::134,135
suc =135,136
pre ::137,138
pre =138,139
lsuc ::140,141
lsuc =141,142
lpre ::143,144
lpre =144,145
out ::146,147
out g147,148
inn ::149,150
inn g150,151
outdeg ::152,153
outdeg =153,154
indeg ::155,156
indeg  =156,157
deg ::158,159
deg =159,160
nodeComp ::206,207
nodeComp n@(v,a)207,208
slabNodes ::211,212
slabNodes =212,213
edgeComp ::214,215
edgeComp e@(v,w,a)215,216
slabEdges ::219,220
slabEdges =220,221
instance (Eq222,223

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/NodeMap.hs,1826
module Data.Graph.Inductive.NodeMap(2,3
data (Ord a)33,34
    NodeMap {34,35
    NodeMap { map ::34,35
	      key ::35,36
new ::39,40
new =40,41
fromGraph ::45,46
fromGraph g46,47
mkNode ::54,55
mkNode m@(NodeMap55,56
mkNode_ ::63,64
mkNode_ m64,65
mkEdge ::67,68
mkEdge (NodeMap68,69
mkEdges ::74,75
mkEdges m75,76
mkNodes ::78,79
mkNodes =79,80
map' ::81,82
map' _82,83
mkNodes_ ::89,90
mkNodes_ m90,91
insMapNode ::92,93
insMapNode m93,94
insMapNode_ ::97,98
insMapNode_ m98,99
insMapEdge ::102,103
insMapEdge m103,104
delMapNode ::107,108
delMapNode m108,109
delMapEdge ::112,113
delMapEdge m113,114
insMapNodes ::117,118
insMapNodes m118,119
insMapNodes_ ::122,123
insMapNodes_ m123,124
insMapEdges ::127,128
insMapEdges m128,129
delMapNodes ::132,133
delMapNodes m133,134
delMapEdges ::137,138
delMapEdges m138,139
mkMapGraph ::143,144
mkMapGraph ns144,145
type NodeMapM a151,152
type NodeMapM a b151,152
run ::155,156
run g156,157
run_ ::159,160
run_ g160,161
liftN1 ::163,164
liftN1 f164,165
liftN1' ::170,171
liftN1' f171,172
liftN2 ::175,176
liftN2 f176,177
liftN2' ::182,183
liftN2' f183,184
liftN3 ::187,188
liftN3 f188,189
liftN3' ::194,195
liftN3' f195,196
liftM1 ::199,200
liftM1 f200,201
liftM1' ::205,206
liftM1' f206,207
mkNodeM ::213,214
mkNodeM =214,215
mkNodesM ::216,217
mkNodesM =217,218
mkEdgeM ::219,220
mkEdgeM =220,221
mkEdgesM ::222,223
mkEdgesM =223,224
insMapNodeM ::225,226
insMapNodeM =226,227
insMapEdgeM ::228,229
insMapEdgeM =229,230
delMapNodeM ::231,232
delMapNodeM =232,233
delMapEdgeM ::234,235
delMapEdgeM =235,236
insMapNodesM ::237,238
insMapNodesM =238,239
insMapEdgesM ::240,241
insMapEdgesM =241,242
delMapNodesM ::243,244
delMapNodesM =244,245
delMapEdgesM ::246,247
delMapEdgesM =247,248

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/PatriciaTree.hs,856
module Data.Graph.Inductive.PatriciaTree18,19
newtype Gr a32,33
newtype Gr a b = Gr (GraphRep32,33
type GraphRep a34,35
type GraphRep a b34,35
type Context' a35,36
type UGr =37,38
instance Graph40,41
matchGr ::75,76
matchGr node76,77
{-# RULES91,92
fastInsNode ::94,95
fastInsNode (v,95,96
fastInsEdge ::103,104
fastInsEdge (v,104,105
fastGMap ::116,117
fastGMap f117,118
fastNMap ::126,127
fastNMap f127,128
fastEMap ::136,137
fastEMap f137,138
toAdj ::143,144
toAdj =144,145
fromAdj ::149,150
fromAdj =150,151
toContext ::153,154
toContext v154,155
fromContext ::158,159
fromContext (ps,159,160
swap ::163,164
swap (a,164,165
addLists ::171,172
addLists [a]172,173
addSucc ::176,177
addSucc g177,178
addPred ::184,185
addPred g185,186
clearSucc ::192,193
clearSucc g193,194
clearPred ::200,201
clearPred g201,202

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/ArtPoint.hs,525
module Data.Graph.Inductive.Query.ArtPoint(0,1
data DFSTree a13,14
data DFSTree a = B (a,a,[(a,a)])13,14
data LOWTree a21,22
data LOWTree a = Brc (a,a,a)21,22
getBackEdges ::27,28
getBackEdges _28,29
dfsTree ::35,36
dfsTree n37,38
minbckEdge ::53,54
minbckEdge n54,55
getLow ::60,61
getLow (Brc61,62
lowTree ::67,68
lowTree (B68,69
getLowTree ::79,80
getLowTree g80,81
isap ::89,90
isap (Brc90,91
arp ::98,99
arp (Brc99,100
artpoints ::107,108
artpoints g108,109
{-|110,111
ap ::119,120
ap g120,121

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/BCC.hs,241
module Data.Graph.Inductive.Query.BCC(0,1
gComponents ::14,15
gComponents g15,16
embedContexts ::21,22
embedContexts (_,v,l,s)22,23
findGraph ::30,31
findGraph _31,32
splitGraphs ::42,43
splitGraphs gs43,44
bcc ::55,56
bcc g56,57

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/BFS.hs,558
module Data.Graph.Inductive.Query.BFS(3,4
bfsnInternal ::23,24
bfsnInternal f24,25
bfsnWith ::31,32
bfsnWith f32,33
bfsn ::34,35
bfsn =35,36
bfsWith ::37,38
bfsWith f38,39
bfs ::40,41
bfs =41,42
level ::46,47
level v47,48
suci c49,50
leveln ::51,52
leveln []52,53
bfenInternal ::62,63
bfenInternal q63,64
bfen ::70,71
bfen vs71,72
bfe ::73,74
bfe v74,75
outU c76,77
bft ::95,96
bft v96,97
bf ::98,99
bf q99,100
esp ::106,107
esp s107,108
lbft ::114,115
lbft v115,116
lbf ::119,120
lbf q120,121
lesp ::128,129
lesp s129,130

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/DFS.hs,1149
module Data.Graph.Inductive.Query.DFS(3,4
{-26,27
fixNodes ::92,93
fixNodes f93,94
type CFun a100,101
type CFun a b100,101
xdfsWith ::102,103
xdfsWith _103,104
dfsWith ::112,113
dfsWith =113,114
dfsWith' ::115,116
dfsWith' f116,117
dfs ::118,119
dfs =119,120
dfs' ::121,122
dfs' =122,123
udfs ::127,128
udfs =128,129
udfs' ::130,131
udfs' =131,132
rdfs ::136,137
rdfs =137,138
rdfs' ::139,140
rdfs' =140,141
xdfWith ::145,146
xdfWith _146,147
xdffWith ::154,155
xdffWith d155,156
dffWith ::160,161
dffWith =161,162
dffWith' ::163,164
dffWith' f164,165
dff ::166,167
dff =167,168
dff' ::169,170
dff' =170,171
udff ::175,176
udff =176,177
udff' ::178,179
udff' =179,180
rdff ::184,185
rdff =185,186
rdff' ::187,188
rdff' =188,189
components ::195,196
components =196,197
noComponents ::198,199
noComponents =199,200
isConnected ::201,202
isConnected =202,203
postflatten ::204,205
postflatten (Node205,206
postflattenF ::207,208
postflattenF =208,209
topsort ::210,211
topsort =211,212
topsort' ::213,214
topsort' =214,215
scc ::216,217
scc g217,218
reachable ::220,221
reachable v221,222

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/Dominators.hs,527
module Data.Graph.Inductive.Query.Dominators (9,10
iDom ::23,24
iDom g24,25
dom ::28,29
dom g29,30
type Node' =39,40
type IDom =43,44
type Preds =45,46
type ToNode =47,48
type FromNode =48,49
idomWork ::50,51
idomWork g51,52
refineIDom ::72,73
refineIDom preds73,74
intersect ::76,77
intersect iDom77,78
getDom ::84,85
getDom toNode85,86
numberTree ::92,93
numberTree n93,94
numberForest ::97,98
numberForest n98,99
treeEdges ::104,105
treeEdges a105,106
fixEq ::108,109
fixEq f109,110
let g0115,116

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/GVD.hs,349
module Data.Graph.Inductive.Query.GVD (3,4
type Voronoi a21,22
type Voronoi a =21,22
gvdIn ::23,24
gvdIn vs24,25
gvdOut ::26,27
gvdOut vs27,28
voronoiSet ::29,30
voronoiSet v30,31
maybePath ::32,33
maybePath v33,34
nearestNode ::35,36
nearestNode v36,37
nearestDist ::38,39
nearestDist v39,40
nearestPath ::41,42
nearestPath v42,43

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/Indep.hs,104
module Data.Graph.Inductive.Query.Indep (3,4
first ::11,12
first p12,13
indep ::14,15
indep g15,16

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/MaxFlow.hs,360
module Data.Graph.Inductive.Query.MaxFlow(20,21
getRevEdges ::41,42
getRevEdges []42,43
augmentGraph ::55,56
augmentGraph g56,57
updAdjList::(Num b,Ord61,62
updAdjList s62,63
updateFlow ::71,72
updateFlow []72,73
mfmg ::88,89
mfmg g89,90
mf ::101,102
mf g102,103
maxFlowgraph ::108,109
maxFlowgraph g109,110
maxFlow ::114,115
maxFlow g115,116

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/MaxFlow2.hs,1342
module Data.Graph.Inductive.Query.MaxFlow2(1,2
type Network =22,23
data Direction =25,26
data Direction = Forward |25,26
data Direction = Forward | Backward25,26
type DirEdge b29,30
type DirEdge b =29,30
type DirPath=[(Node, Direction)]31,32
type DirRTree=[DirPath]32,33
pathFromDirPath =34,35
exampleNetwork1 ::42,43
exampleNetwork1=mkGraph [43,44
exampleNetwork2 ::50,51
exampleNetwork2=mkGraph [58,59
augPathFused ::75,76
augPathFused g76,77
bftForEK ::81,82
bftForEK v82,83
bfForEK ::85,86
bfForEK q86,87
extractPathFused ::105,106
extractPathFused g107,108
ekFusedStep g119,120
ekFused ::127,128
ekFused =128,129
residualGraph ::135,136
residualGraph g136,137
augPath ::141,142
augPath g142,143
extractPath ::148,149
extractPath g149,150
extractEdge ::166,167
extractEdge g167,168
extractAdj ::177,178
extractAdj []178,179
getPathDeltas ::184,185
getPathDeltas []185,186
integrateDelta ::190,191
integrateDelta []192,193
type EKStepFunc =199,200
ekSimpleStep ::201,202
ekSimpleStep g202,203
ekWith ::210,211
ekWith stepfunc211,212
ekSimple ::216,217
ekSimple =217,218
setFromList ::225,226
setFromList []226,227
setContains ::229,230
setContains m230,231
extractPathList ::234,235
extractPathList []236,237
ekStepList ::248,249
ekStepList g249,250
ekList ::259,260
ekList =260,261

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/Monad.hs,1313
module Data.Graph.Inductive.Query.Monad(3,4
mapFst ::36,37
mapFst f37,38
mapSnd ::38,39
mapSnd f39,40
(><) :: (a42,43
(f ><43,44
orP ::45,46
orP p46,47
data GT m53,54
data GT m g a = MGT (m53,54
apply ::55,56
apply (MGT56,57
apply' ::58,59
apply' gt59,60
applyWith ::61,62
applyWith h62,63
applyWith' ::64,65
applyWith' h65,66
runGT ::67,68
runGT gt68,69
instance Monad71,72
condMGT' ::75,76
condMGT' p76,77
recMGT' ::78,79
recMGT' p79,80
condMGT ::82,83
condMGT p83,84
recMGT ::85,86
recMGT p86,87
getNode ::97,98
getNode =98,99
getContext ::100,101
getContext =101,102
getNodes' ::106,107
getNodes' =107,108
getNodes ::112,113
getNodes =113,114
sucGT ::118,119
sucGT v119,120
sucM ::125,126
sucM v126,127
graphRec ::142,143
graphRec =144,145
graphRec' ::146,147
graphRec' =148,149
graphUFold ::150,151
graphUFold =151,152
graphNodesM0 ::161,162
graphNodesM0 =162,163
graphNodesM ::164,165
graphNodesM =165,166
graphNodes ::167,168
graphNodes =168,169
graphFilterM ::170,171
graphFilterM p172,173
graphFilter ::174,175
graphFilter p175,176
dfsGT ::190,191
dfsGT []191,192
dfsM ::199,200
dfsM vs200,201
dfsM' ::202,203
dfsM' mg203,204
dffM ::207,208
dffM vs208,209
graphDff ::221,222
graphDff vs222,223
graphDff' ::224,225
graphDff' mg225,226

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/MST.hs,273
module Data.Graph.Inductive.Query.MST (3,4
newEdges ::14,15
newEdges (LP15,16
prim ::17,18
prim h18,19
msTreeAt ::25,26
msTreeAt v26,27
msTree ::28,29
msTree g29,30
msPath ::31,32
msPath t32,33
joinPaths ::34,35
joinPaths p35,36
joinAt ::37,38
joinAt _38,39

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/SP.hs,197
module Data.Graph.Inductive.Query.SP(2,3
expand ::12,13
expand d13,14
dijkstra ::16,17
dijkstra h17,18
spTree ::24,25
spTree v25,26
spLength ::27,28
spLength s28,29
sp ::30,31
sp s31,32

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query/TransClos.hs,138
module Data.Graph.Inductive.Query.TransClos(0,1
getNewEdges ::8,9
getNewEdges vs9,10
Given a14,15
G* =15,16
trc ::17,18
trc g18,19

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Query.hs,39
module Data.Graph.Inductive.Query(0,1

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive/Tree.hs,359
module Data.Graph.Inductive.Tree (Gr,UGr)3,4
data Gr a17,18
data Gr a b = Gr (GraphRep17,18
type GraphRep a19,20
type GraphRep a b19,20
type Context' a20,21
type UGr =22,23
showsGraph ::32,33
showsGraph Empty33,34
instance (Show37,38
matchGr v62,63
addSucc v86,87
addPred v87,88
clearSucc v89,90
clearPred v90,91
updAdj ::92,93
updAdj g93,94

/Users/ismael/.haskdogs/fgl-5.4.2.4/Data/Graph/Inductive.hs,66
module Data.Graph.Inductive(8,9
version ::31,32
version =32,33

/Users/ismael/.haskdogs/fgl-5.4.2.4/Setup.hs,46
module Main (main)0,1
main ::4,5
main =5,6

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Cont/Class.hs,120
module Control.Monad.Cont.Class (50,51
class Monad m => MonadCont m71,72
    callCC ::90,91
instance MonadCont92,93

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Cont.hs,415
module Control.Monad.Cont (50,51
>calculateLength ::85,86
>calculateLength l86,87
>main =90,91
It is94,95
>double ::96,97
>double n97,98
>  runCont100,101
>whatsYourName ::111,112
>whatsYourName name112,113
>  (`runCont` id) $ do113,114
>validateName name119,120
@(\`runCont\` id)@. Here @id@ is the125,126
>askString ::152,153
>askString next153,154
>reportResult ::158,159
>reportResult s159,160

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Error/Class.hs,157
module Control.Monad.Error.Class (36,37
class (Monad m) => MonadError e m |77,78
    throwError ::79,80
    catchError ::90,91
instance MonadError92,93

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Error.hs,338
module Control.Monad.Error (33,34
>data LengthError65,66
>  noMsg73,74
>type LengthMonad86,87
>main =88,89
>calculateLength ::95,96
>calculateLength s96,97
>calculateLengthOrFail ::101,102
>calculateLengthOrFail []102,103
>reportResult ::108,109
>reportResult (Right109,110
>calculateLength ::131,132
>reportResult ::141,142

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Identity.hs,58
@'Identity' x15,16
module Control.Monad.Identity (34,35

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/List.hs,34
module Control.Monad.List (15,16

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Reader/Class.hs,210
module Control.Monad.Reader.Class (39,40
class Monad m => MonadReader r69,70
    ask   ::71,72
    local ::74,75
    reader ::79,80
    reader f81,82
asks ::86,87
asks =89,90
instance MonadReader94,95

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Reader.hs,450
module Control.Monad.Reader (37,38
> type81,82
>isCountCorrect ::84,85
>isCountCorrect bindings85,86
>calc_isCountCorrect ::88,89
>calc_isCountCorrect =89,90
>lookupVar ::96,97
>lookupVar name97,98
>sampleBindings =99,100
>main =101,102
>calculateContentLen ::110,111
>calculateContentLen =111,112
>calculateModifiedContentLen ::116,117
>calculateModifiedContentLen =117,118
>printReaderContent ::135,136
>printReaderContent =136,137

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/RWS/Class.hs,62
module Control.Monad.RWS.Class (22,23
   => MonadRWS r43,44

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/RWS/Lazy.hs,38
module Control.Monad.RWS.Lazy (19,20

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/RWS/Strict.hs,40
module Control.Monad.RWS.Strict (19,20

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/RWS.hs,33
module Control.Monad.RWS (19,20

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/State/Class.hs,259
module Control.Monad.State.Class (23,24
class Monad m => MonadState s49,50
    get ::51,52
    get =52,53
    put ::55,56
    put s56,57
    state ::59,60
    state f60,61
modify ::77,78
modify f78,79
gets ::82,83
gets f83,84
instance Monad87,88

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/State/Lazy.hs,40
module Control.Monad.State.Lazy (20,21

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/State/Strict.hs,42
module Control.Monad.State.Strict (20,21

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/State.hs,35
module Control.Monad.State (20,21

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Trans.hs,35
module Control.Monad.Trans (27,28

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Writer/Class.hs,303
module Control.Monad.Writer.Class (22,23
class (Monoid w, Monad m) => MonadWriter w m | m59,60
    writer ::61,62
    writer ~(a,62,63
    tell   ::67,68
    tell w68,69
    listen ::72,73
    pass   ::76,77
listens ::82,83
listens f83,84
censor ::92,93
censor f93,94
instance (Monoid97,98

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Writer/Lazy.hs,41
module Control.Monad.Writer.Lazy (19,20

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Writer/Strict.hs,43
module Control.Monad.Writer.Strict (19,20

/Users/ismael/.haskdogs/mtl-2.1.2/Control/Monad/Writer.hs,36
module Control.Monad.Writer (19,20

/Users/ismael/.haskdogs/mtl-2.1.2/Setup.hs,11
main =1,2

/Users/ismael/.haskdogs/template-haskell-2.8.0.0/Language/Haskell/TH/Lib.hs,6226
module Language.Haskell.TH.Lib where4,5
type InfoQ          =17,18
type PatQ           =18,19
type FieldPatQ      =19,20
type ExpQ           =20,21
type DecQ           =21,22
type DecsQ          =22,23
type ConQ           =23,24
type TypeQ          =24,25
type TyLitQ         =25,26
type CxtQ           =26,27
type PredQ          =27,28
type MatchQ         =28,29
type ClauseQ        =29,30
type BodyQ          =30,31
type GuardQ         =31,32
type StmtQ          =32,33
type RangeQ         =33,34
type StrictTypeQ    =34,35
type VarStrictTypeQ =35,36
type FieldExpQ      =36,37
type RuleBndrQ      =37,38
intPrimL    ::43,44
intPrimL    =44,45
wordPrimL    ::45,46
wordPrimL    =46,47
floatPrimL  ::47,48
floatPrimL  =48,49
doublePrimL ::49,50
doublePrimL =50,51
integerL    ::51,52
integerL    =52,53
charL       ::53,54
charL       =54,55
stringL     ::55,56
stringL     =56,57
stringPrimL ::57,58
stringPrimL =58,59
rationalL   ::59,60
rationalL   =60,61
litP ::62,63
litP l63,64
varP ::64,65
varP v65,66
tupP ::66,67
tupP ps67,68
unboxedTupP ::68,69
unboxedTupP ps69,70
conP ::70,71
conP n71,72
infixP ::73,74
infixP p174,75
uInfixP ::77,78
uInfixP p178,79
parensP ::81,82
parensP p82,83
tildeP ::85,86
tildeP p86,87
bangP ::88,89
bangP p89,90
asP ::91,92
asP n92,93
wildP ::94,95
wildP =95,96
recP ::96,97
recP n97,98
listP ::99,100
listP ps100,101
sigP ::102,103
sigP p103,104
viewP ::106,107
viewP e107,108
fieldPat ::111,112
fieldPat n112,113
bindS ::119,120
bindS p120,121
letS ::122,123
letS ds123,124
noBindS ::125,126
noBindS e126,127
parS ::128,129
parS _129,130
fromR ::134,135
fromR x135,136
fromThenR ::137,138
fromThenR x138,139
fromToR ::140,141
fromToR x141,142
fromThenToR ::143,144
fromThenToR x144,145
normalB ::149,150
normalB e150,151
guardedB ::152,153
guardedB ges153,154
normalG ::158,159
normalG e159,160
normalGE ::161,162
normalGE g162,163
patG ::164,165
patG ss165,166
patGE ::167,168
patGE ss168,169
match ::176,177
match p177,178
clause ::183,184
clause ps184,185
dyn ::194,195
dyn s195,196
global ::197,198
global s198,199
varE ::200,201
varE s201,202
conE ::203,204
conE s204,205
litE ::206,207
litE c207,208
appE ::209,210
appE x210,211
parensE ::212,213
parensE x213,214
uInfixE ::215,216
uInfixE x216,217
infixE ::219,220
infixE (Just220,221
infixApp ::228,229
infixApp x229,230
sectionL ::230,231
sectionL x231,232
sectionR ::232,233
sectionR x233,234
lamE ::235,236
lamE ps236,237
lam1E ::241,242
lam1E p242,243
lamCaseE ::244,245
lamCaseE ms245,246
tupE ::247,248
tupE es248,249
unboxedTupE ::250,251
unboxedTupE es251,252
condE ::253,254
condE x254,255
multiIfE ::256,257
multiIfE alts257,258
letE ::259,260
letE ds260,261
caseE ::262,263
caseE e263,264
doE ::265,266
doE ss266,267
compE ::268,269
compE ss269,270
arithSeqE ::271,272
arithSeqE r272,273
listE ::274,275
listE es275,276
sigE ::277,278
sigE e278,279
recConE ::280,281
recConE c281,282
recUpdE ::283,284
recUpdE e284,285
stringE ::286,287
stringE =287,288
fieldExp ::289,290
fieldExp s290,291
fromE ::293,294
fromE x294,295
fromThenE ::296,297
fromThenE x297,298
fromToE ::299,300
fromToE x300,301
fromThenToE ::302,303
fromThenToE x303,304
valD ::310,311
valD p311,312
funD ::318,319
funD nm319,320
tySynD ::324,325
tySynD tc325,326
dataD ::327,328
dataD ctxt328,329
newtypeD ::334,335
newtypeD ctxt335,336
classD ::341,342
classD ctxt342,343
instanceD ::348,349
instanceD ctxt349,350
sigD ::356,357
sigD fun357,358
forImpD ::359,360
forImpD cc360,361
infixLD ::364,365
infixLD prec365,366
infixRD ::367,368
infixRD prec368,369
infixND ::370,371
infixND prec371,372
pragInlD ::373,374
pragInlD name374,375
pragSpecD ::377,378
pragSpecD n378,379
pragSpecInlD ::383,384
pragSpecInlD n384,385
pragSpecInstD ::389,390
pragSpecInstD ty390,391
pragRuleD ::395,396
pragRuleD n396,397
familyNoKindD ::403,404
familyNoKindD flav404,405
familyKindD ::406,407
familyKindD flav407,408
dataInstD ::409,410
dataInstD ctxt410,411
newtypeInstD ::417,418
newtypeInstD ctxt418,419
tySynInstD ::425,426
tySynInstD tc426,427
cxt ::432,433
cxt =433,434
classP ::435,436
classP cla436,437
equalP ::441,442
equalP tleft442,443
normalC ::448,449
normalC con449,450
recC ::451,452
recC con452,453
infixC ::454,455
infixC st1455,456
forallC ::459,460
forallC ns460,461
forallT ::466,467
forallT tvars467,468
varT ::472,473
varT =473,474
conT ::475,476
conT =476,477
appT ::478,479
appT t1479,480
arrowT ::484,485
arrowT =485,486
listT ::487,488
listT =488,489
litT ::490,491
litT l491,492
tupleT ::493,494
tupleT i494,495
unboxedTupleT ::496,497
unboxedTupleT i497,498
sigT ::499,500
sigT t500,501
promotedT ::505,506
promotedT =506,507
promotedTupleT ::508,509
promotedTupleT i509,510
promotedNilT ::511,512
promotedNilT =512,513
promotedConsT ::514,515
promotedConsT =515,516
isStrict, notStrict, unpacked :: Q Strict517,518
isStrict, notStrict, unpacked ::517,518
isStrict, notStrict,517,518
isStrict =518,519
notStrict =519,520
unpacked =520,521
strictType ::522,523
strictType =523,524
varStrictType ::525,526
varStrictType v526,527
numTyLit ::531,532
numTyLit n532,533
strTyLit ::535,536
strTyLit s536,537
plainTV ::543,544
plainTV =544,545
kindedTV ::546,547
kindedTV =547,548
varK ::549,550
varK =550,551
conK ::552,553
conK =553,554
tupleK ::555,556
tupleK =556,557
arrowK ::558,559
arrowK =559,560
listK ::561,562
listK =562,563
appK ::564,565
appK =565,566
starK ::567,568
starK =568,569
constraintK ::570,571
constraintK =571,572
cCall, stdCall :: Callconv576,577
cCall, stdCall576,577
cCall =577,578
stdCall =578,579
unsafe, safe, interruptible :: Safety583,584
unsafe, safe, interruptible ::583,584
unsafe, safe,583,584
unsafe =584,585
safe =585,586
interruptible =586,587
funDep ::591,592
funDep =592,593
typeFam, dataFam :: FamFlavour597,598
typeFam, dataFam597,598
typeFam =598,599
dataFam =599,600
ruleVar ::603,604
ruleVar =604,605
typedRuleVar ::606,607
typedRuleVar n607,608
appsE ::612,613
appsE []613,614

/Users/ismael/.haskdogs/template-haskell-2.8.0.0/Language/Haskell/TH/Ppr.hs,1798
module Language.Haskell.TH.Ppr where3,4
nestDepth ::15,16
nestDepth =16,17
type Precedence =18,19
appPrec, unopPrec, opPrec, noPrec :: Precedence19,20
appPrec, unopPrec, opPrec, noPrec :: Precedence19,20
appPrec, unopPrec, opPrec, noPrec19,20
appPrec, unopPrec,19,20
appPrec =20,21
opPrec  =21,22
unopPrec =22,23
noPrec  =23,24
parensIf ::25,26
parensIf True26,27
pprint ::31,32
pprint x32,33
class Ppr a34,35
    ppr ::35,36
    ppr_list ::36,37
    ppr_list =37,38
instance Ppr39,40
ppr_sig ::68,69
ppr_sig v69,70
pprFixity ::71,72
pprFixity _72,73
pprInfixExp ::83,84
pprInfixExp (VarE84,85
pprExp ::88,89
pprExp _89,90
pprFields ::143,144
pprFields =144,145
pprMaybeExp ::146,147
pprMaybeExp _147,148
pprGuarded ::164,165
pprGuarded eqDoc165,166
pprBody ::171,172
pprBody eq172,173
pprLit ::179,180
pprLit i180,181
bytesToString ::193,194
bytesToString =194,195
pprString ::196,197
pprString s199,200
pprPat ::205,206
pprPat i206,207
ppr_dec ::238,239
ppr_dec _241,242
ppr_data ::283,284
ppr_data maybeInst284,285
ppr_newtype ::299,300
ppr_newtype maybeInst300,301
ppr_tySyn ::311,312
ppr_tySyn maybeInst312,313
pprVarStrictType ::408,409
pprVarStrictType (v,410,411
pprStrictType ::413,414
pprStrictType (IsStrict,415,416
pprParendType ::420,421
pprParendType (VarT421,422
pprTyApp ::445,446
pprTyApp (ArrowT,446,447
pprFunArgType ::454,455
pprFunArgType ty@(ForallT456,457
pprFunArgType ty@((ArrowT `AppT` _) `AppT` _) = parens457,458
split ::461,462
split t462,463
pprTyLit ::466,467
pprTyLit (NumTyLit467,468
pprCxt ::479,480
pprCxt []480,481
where_clause ::502,503
where_clause []503,504
showtextl ::506,507
showtextl =507,508
hashParens ::509,510
hashParens d510,511
quoteParens ::512,513
quoteParens d513,514

/Users/ismael/.haskdogs/template-haskell-2.8.0.0/Language/Haskell/TH/PprLib.hs,1752
module Language.Haskell.TH.PprLib (4,5
instance Show54,55
isEmpty ::57,58
empty   ::59,60
semi	::60,61
comma	::61,62
colon	::62,63
space	::63,64
equals	::64,65
equals	::64,65
arrow	::65,66
lparen	::66,67
rparen	::67,68
lbrack	::68,69
rbrack	::69,70
lbrace	::70,71
rbrace	::71,72
text	 ::73,74
ptext	 ::74,75
char 	 ::75,76
int      ::76,77
integer  ::77,78
float    ::78,79
double   ::79,80
rational ::80,81
parens       ::83,84
brackets     ::84,85
braces	     ::85,86
quotes	     ::86,87
doubleQuotes ::87,88
(<>)   :: Doc91,92
hcat   ::92,93
(<+>)  :: Doc93,94
hsep   ::94,95
($$)   :: Doc96,97
($+$)   :: Doc98,99
vcat   ::99,100
cat    ::101,102
sep    ::102,103
fcat   ::103,104
fsep   ::104,105
nest   ::106,107
hang ::111,112
hang ::111,112
punctuate ::112,113
punctuate ::112,113
type State =118,119
data PprM a119,120
data PprM a = PprM {119,120
data PprM a = PprM { runPprM ::119,120
pprName ::121,122
pprName =122,123
pprName' ::124,125
pprName' ni125,126
data Name =140,141
data Name = Name OccName140,141
data NameFlavour142,143
to_HPJ_Doc ::146,147
to_HPJ_Doc d147,148
type Doc =154,155
isEmpty =158,159
empty =160,161
semi =161,162
comma =162,163
colon =163,164
space =164,165
equals =165,166
arrow =166,167
lparen =167,168
rparen =168,169
lbrack =169,170
rbrack =170,171
lbrace =171,172
rbrace =172,173
text =174,175
ptext =175,176
char =176,177
int =177,178
integer =178,179
float =179,180
double =180,181
rational =181,182
parens =184,185
brackets =185,186
braces =186,187
quotes =187,188
doubleQuotes =188,189
(<>) =192,193
hcat =193,194
hsep =195,196
vcat =199,200
cat  =201,202
sep  =202,203
fcat =203,204
fsep =204,205
nest n206,207

/Users/ismael/.haskdogs/template-haskell-2.8.0.0/Language/Haskell/TH/Quote.hs,478
module Language.Haskell.TH.Quote(1,2
data QuasiQuoter =11,12
data QuasiQuoter = QuasiQuoter {11,12
data QuasiQuoter = QuasiQuoter { quoteExp  ::11,12
                                 quotePat  ::12,13
                                 quoteType ::13,14
                                 quoteDec  ::14,15
dataToQa  ::16,17
dataToQa mkCon23,24
dataToExpQ  ::59,60
dataToExpQ =63,64
dataToPatQ  ::67,68
dataToPatQ =71,72
quoteFile ::79,80
quoteFile (QuasiQuoter80,81

/Users/ismael/.haskdogs/template-haskell-2.8.0.0/Language/Haskell/TH/Syntax.hs,9217
module Language.Haskell.TH.Syntax where22,23
import GHC.Base24,25
class (Monad m, Applicative m) => Quasi m where42,43
  qNewName ::43,44
  qReport  ::47,48
  qRecover ::49,50
  qLookupName ::54,55
  qReify          ::56,57
  qReifyInstances ::57,58
  qLocation ::63,64
  qRunIO ::65,66
  qAddDependentFile ::68,69
instance Quasi81,82
badIO ::98,99
badIO op99,100
counter ::103,104
counter =105,106
newtype Q a114,115
newtype Q a = Q {114,115
newtype Q a = Q { unQ ::114,115
runQ ::127,128
runQ (Q128,129
@f =151,152
>f =159,160
>g =167,168
>  let169,170
newName ::180,181
newName s181,182
report  ::185,186
report b186,187
reportError ::190,191
reportError =191,192
reportWarning ::194,195
reportWarning =195,196
recover ::198,199
recover (Q201,202
lookupName ::205,206
lookupName ns206,207
lookupTypeName ::209,210
lookupTypeName  s210,211
lookupValueName ::213,214
lookupValueName s214,215
In this240,241
Again in254,255
reify ::285,286
reify v286,287
reifyInstances ::293,294
reifyInstances cls294,295
isInstance ::297,298
isInstance nm298,299
location ::302,303
location =303,304
runIO ::312,313
runIO m313,314
addDependentFile ::319,320
addDependentFile fp320,321
returnQ ::338,339
returnQ =339,340
bindQ ::341,342
bindQ =342,343
sequenceQ ::344,345
sequenceQ =345,346
class Lift t354,355
  lift ::355,356
liftString ::381,382
liftString s383,384
{-# RULES418,419
trueName, falseName :: Name421,422
trueName, falseName421,422
trueName  =422,423
falseName =423,424
nothingName, justName :: Name425,426
nothingName, justName425,426
nothingName =426,427
justName    =427,428
leftName, rightName :: Name429,430
leftName, rightName429,430
leftName  =430,431
rightName =431,432
newtype ModName =438,439
newtype ModName = ModName String438,439
newtype PkgName =441,442
newtype PkgName = PkgName String441,442
newtype OccName =444,445
newtype OccName = OccName String444,445
mkModName ::447,448
mkModName s448,449
modString ::450,451
modString (ModName451,452
mkPkgName ::454,455
mkPkgName s455,456
pkgString ::457,458
pkgString (PkgName458,459
mkOccName ::465,466
mkOccName s466,467
occString ::468,469
occString (OccName469,470
(such as553,554
data Name =556,557
data Name = Name OccName556,557
data NameFlavour558,559
  = NameS           --559,560
  | NameQ ModName560,561
  | NameU Int#561,562
  | NameL Int#562,563
  | NameG NameSpace563,564
con_NameS, con_NameQ, con_NameU, con_NameL, con_NameG :: Data.Constr600,601
con_NameS, con_NameQ, con_NameU, con_NameL, con_NameG :: Data.Constr600,601
con_NameS, con_NameQ, con_NameU, con_NameL, con_NameG ::600,601
con_NameS, con_NameQ, con_NameU, con_NameL,600,601
con_NameS, con_NameQ,600,601
con_NameS =601,602
con_NameQ =602,603
con_NameU =603,604
con_NameL =604,605
con_NameG =605,606
ty_NameFlavour ::607,608
ty_NameFlavour =608,609
data NameSpace =612,613
data NameSpace = VarName	--612,613
	       | DataName	--613,614
	       | TcClsName	--614,615
type Uniq =618,619
nameBase ::621,622
nameBase (Name622,623
nameModule ::625,626
nameModule (Name626,627
mkName ::654,655
mkName str666,667
mkNameU ::682,683
mkNameU s683,684
mkNameL ::686,687
mkNameL s687,688
mkNameG ::690,691
mkNameG ns691,692
mkNameG_v, mkNameG_tc, mkNameG_d :: String ->694,695
mkNameG_v, mkNameG_tc, mkNameG_d ::694,695
mkNameG_v, mkNameG_tc,694,695
mkNameG_v  =695,696
mkNameG_tc =696,697
mkNameG_d  =697,698
  (Name o1 f1) `compare` (Name o2 f2) =703,704
data NameIs =738,739
data NameIs = Alone |738,739
data NameIs = Alone | Applied |738,739
data NameIs = Alone | Applied | Infix738,739
showName ::740,741
showName =741,742
showName' ::743,744
showName' ni744,745
tupleDataName ::783,784
tupleTypeName ::785,786
tupleDataName 0787,788
tupleTypeName 0791,792
mk_tup_name ::795,796
mk_tup_name n_commas796,797
unboxedTupleDataName ::804,805
unboxedTupleTypeName ::806,807
unboxedTupleDataName 0808,809
unboxedTupleTypeName 0812,813
mk_unboxed_tup_name ::816,817
mk_unboxed_tup_name n_commas817,818
data Loc829,830
  = Loc {830,831
  = Loc { loc_filename ::830,831
	, loc_package  ::831,832
	, loc_module   ::832,833
	, loc_start    ::833,834
	, loc_end      ::834,835
type CharPos =836,837
data Info846,847
  ClassI 849,850
  | ClassOpI854,855
  | TyConI 861,862
  | FamilyI 865,866
  | PrimTyConI 870,871
  | DataConI 876,877
  | VarI 892,893
  A type899,900
  | TyVarI 	--905,906
type ParentName =913,914
type Arity =916,917
type Unlifted =919,920
type InstanceDec =929,930
data Fixity          =931,932
data Fixity          = Fixity Int931,932
data FixityDirection =933,934
data FixityDirection = InfixL |933,934
data FixityDirection = InfixL | InfixR |933,934
data FixityDirection = InfixL | InfixR | InfixN933,934
maxPrecedence ::937,938
maxPrecedence =938,939
defaultFixity ::941,942
defaultFixity =942,943
data Lit =1014,1015
data Lit = CharL Char1014,1015
         | StringL String1015,1016
         | IntegerL Integer1016,1017
         | RationalL Rational1020,1021
         | IntPrimL Integer1021,1022
         | WordPrimL Integer1022,1023
         | FloatPrimL Rational1023,1024
         | DoublePrimL Rational1024,1025
         | StringPrimL [Word8]1025,1026
data Pat 1033,1034
  = LitP Lit1034,1035
  | VarP Name1035,1036
  | TupP [Pat]1036,1037
  | UnboxedTupP [Pat]1037,1038
  | ConP Name1038,1039
type FieldPat =1056,1057
data Match =1058,1059
data Clause =1060,1061
data Clause = Clause [Pat]1060,1061
data Exp 1064,1065
  = VarE Name1065,1066
  | ConE Name1066,1067
type FieldExp =1111,1112
data Body1115,1116
  = GuardedB1116,1117
data Guard1122,1123
  = NormalG Exp1123,1124
  = NormalG Exp -- ^ @f x { | odd x1123,1124
data Stmt1127,1128
  = BindS Pat1128,1129
  | LetS [1129,1130
  | NoBindS Exp1130,1131
  | ParS [[Stmt]]1131,1132
data Range =1134,1135
data Range = FromR Exp1134,1135
data Range = FromR Exp | FromThenR Exp1134,1135
           | FromToR Exp1135,1136
           | FromToR Exp Exp | FromThenToR Exp1135,1136
data Dec 1138,1139
data FunDep =1175,1176
data FunDep = FunDep [Name]1175,1176
data FamFlavour =1178,1179
data FamFlavour = TypeFam |1178,1179
data FamFlavour = TypeFam | DataFam1178,1179
data Foreign =1181,1182
data Foreign = ImportF Callconv1181,1182
             | ExportF Callconv1182,1183
data Callconv =1185,1186
data Callconv = CCall |1185,1186
data Callconv = CCall | StdCall1185,1186
data Safety =1188,1189
data Safety = Unsafe |1188,1189
data Safety = Unsafe | Safe |1188,1189
data Safety = Unsafe | Safe | Interruptible1188,1189
data Pragma =1191,1192
data Pragma = InlineP         Name1191,1192
            | SpecialiseP     Name1192,1193
            | SpecialiseInstP Type1193,1194
            | RuleP           String1194,1195
data Inline =1197,1198
data Inline = NoInline1197,1198
            | Inline1198,1199
            | Inlinable1199,1200
data RuleMatch =1202,1203
data RuleMatch = ConLike1202,1203
               | FunLike1203,1204
data Phases =1206,1207
data Phases = AllPhases1206,1207
            | FromPhase Int1207,1208
            | BeforePhase Int1208,1209
data RuleBndr =1211,1212
data RuleBndr = RuleVar Name1211,1212
              | TypedRuleVar Name1212,1213
type Cxt =1215,1216
data Pred =1217,1218
data Pred = ClassP Name1217,1218
          | EqualP Type1218,1219
data Strict =1221,1222
data Strict = IsStrict |1221,1222
data Strict = IsStrict | NotStrict |1221,1222
data Strict = IsStrict | NotStrict | Unpacked1221,1222
data Con =1224,1225
data Con = NormalC Name1224,1225
         | RecC Name1225,1226
         | RecC Name [VarStrictType]          -- ^ @C { v ::1225,1226
         | RecC Name [VarStrictType]          -- ^ @C { v :: Int, w :: a1225,1226
         | InfixC StrictType1226,1227
         | ForallC [TyVarBndr]1227,1228
type StrictType =1230,1231
type VarStrictType =1231,1232
data Type =1233,1234
data Type = ForallT [TyVarBndr]1233,1234
          | AppT Type1234,1235
          | SigT Type1235,1236
          | SigT Type Kind                -- ^ @t ::1235,1236
          | VarT Name1236,1237
          | ConT Name1237,1238
          | PromotedT Name1238,1239
          | TupleT Int1241,1242
          | UnboxedTupleT Int1242,1243
          | ArrowT                        --1243,1244
          | ListT                         --1244,1245
          | PromotedTupleT Int1245,1246
          | PromotedNilT                  --1246,1247
          | PromotedConsT                 --1247,1248
          | StarT                         --1248,1249
          | ConstraintT                   --1249,1250
          | LitT TyLit1250,1251
data TyVarBndr =1253,1254
data TyVarBndr = PlainTV  Name1253,1254
               | KindedTV Name1254,1255
               | KindedTV Name Kind       -- ^ @(a :: k)@1254,1255
data TyLit =1257,1258
data TyLit = NumTyLit Integer1257,1258
           | StrTyLit String1258,1259
type Kind =1269,1270
type construtor at1276,1277
  t1 -> t2          ArrowT `AppT` t2 `AppT`1279,1280
cmpEq ::1305,1306
cmpEq EQ1306,1307
thenCmp ::1309,1310
thenCmp EQ1310,1311

/Users/ismael/.haskdogs/template-haskell-2.8.0.0/Language/Haskell/TH.hs,32
module Language.Haskell.TH(6,7

/Users/ismael/.haskdogs/template-haskell-2.8.0.0/Setup.hs,46
module Main (main)0,1
main ::4,5
main =5,6
