let x = ref (<1 ? true : âŸ‚>) in (
  let y = ref true in (
    let z = ref true in (
      if !x then y := false;  # y = <1 ? false : true>
      if !y then z := false;  # z = <1 ? true : false>
        !z)))


# x = <true> => !z = true; !b = <false>
# x = <false> => !b = false; !z = <true>

# let b' = ref (if !x then true else false)
# ref <1 ? true : false>

# ref e ==> <k ? v1 : v2> -> ref <k ? v1 : v2>
# <=> <k ? ref v1 : ref v2>

# ref true -> Î£[a = true]

# let b = (if !x then ref true else ref false)
# <1 ? ref true : ref false>

# let b = (if !x then ref true else 23)
# <1 ? ref true : 23>
